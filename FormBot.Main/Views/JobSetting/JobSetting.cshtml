@model FormBot.Entity.Job.JobSetting
@using FormBot.Helper;
@{
    ViewBag.Title = "Settings";
}
<div id="msgSection">
    @Html.RenderMessages()
</div>

<style type="text/css">

    th.action,
    .table-responsive tr > td:last-child {
        width: 120px;
        text-align: center !important;
    }

    .alignRightTD {
        text-align: right !important;
        width: 20% !important;
    }

    .alignLeftTD {
        text-align: left !important;
        width: 80% !important;
    }

    .alignNotificationData {
        text-align: center;
        width: 10% !important;
    }




    .SumoSelect {
        display: block !important;
        width: 100% !important;
    }
</style>
<div class="container-fluid create-job">
    <div class="title formTemplate">
        <h1>CheckList Template</h1>
        <a href="#" id="addTemplate" class="primary pull-right btn icon-btn" title="Add Template"><span class="sprite-img add_ic"></span> Add Template</a>
    </div>
    <div class="title formCustomField" style="display:none;">
        <h1>Custom Field</h1>
        <a href="#" id="addCustomField" class="primary pull-right btn icon-btn" title="Add Custom Field"><span class="sprite-img add_ic"></span>Add Custom Field</a>
    </div>
    <div class="title formDocTemplate" style="display:none;">
        <h1>Document Template</h1>
        <a href="#" id="addDocTemplate" class="btn primary pull-right icon-btn" title="Add Document Template"><span class="sprite-img add_ic"></span> Add Document Template</a>
    </div>
    <div class="title formJobAction" style="display:none;">
        <h1>System Notification</h1>
        @*<a href="#" id="setJobAction" class="primary pull-right add_ic" title="Job Action">Job Action</a>*@
    </div>
    <div class="title formpushNotification" style="display:none;">
        <h1>Push Notification</h1>
    </div>
    <div class="title recSettings" style="display:none;">
        <h1>REC Settings</h1>
    </div>

    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="ui-tabs">
        <ul class="create-job-menu" style="margin-bottom:10px">
            <li class="active" style="display:inline-block"><a id="aTemplate" href="javascript:void(0)" title="Job Setting" style="text-decoration:none;">Checklist Template</a></li>
            @if (!(ProjectSession.UserTypeId == 6 || ProjectSession.UserTypeId == 8))
            {
                <li>
                    <a href="javascript:void(0);" id="aCustomField" title="Custom Field" style="text-decoration:none">Custom Field</a>
                </li>;
                if (ProjectSession.UserTypeId == 4 || ProjectSession.UserTypeId == 1)
                {
                    <li>
                        <a href="javascript:void(0);" id="aDocTemplate" title="Document Template" style="text-decoration:none;">Document Template</a>
                    </li>
                }
                <li>
                    <a href="javascript:void(0);" id="ajobAction" title="Job Action" style="text-decoration:none;">System Notification</a>
                </li>
                if (ProjectSession.UserTypeId == 1)
                {
                    <li>
                        <a href="javascript:void(0);" id="apushNotification" title="Push Notification" style="text-decoration:none;">Push Notification</a>
                    </li>
                }
                if (ProjectSession.UserTypeId == 1)
                {
                    <li>
                        <a href="javascript:void(0);" id="aRECStatus" title="REC Settings" style="text-decoration:none">REC Settings</a>
                    </li>
                }
            }

        </ul>
    </div>
    <form class="form-block formTemplate" style="margin-top:10px;">
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Name:</label>
                <input type="text" id="txtTemplateName" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>
        @if (ProjectSession.UserTypeId == 1 || ProjectSession.UserTypeId == 3 || ProjectSession.UserTypeId == 2 || ProjectSession.UserTypeId == 5 || ProjectSession.UserTypeId == 6)
        {
            <div class="col-sm-6 col-md-6 col-lg-4">
                <div class="form-group">
                    <label class="control-label">Solar Company:</label>
                    @Html.DropDownList("SolarCompanyChkTemplate", new List<SelectListItem>(), new { @class = "form-control" })
                </div>
            </div>
        }
        <div class="form-group col-xs-12">
            <input type="button" id="btnSearch" value="Search" class="primary search_ic" onclick="SearchTemplate();">
            <div class="default btn icon-btn" onclick="ResetSearchFilters();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnReset" value="Reset" class="">
            </div>
        </div>
    </form>
    <form class="form-block formpushNotification" style="margin-top:10px;display:none;">
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Notification:</label>
                <input type="text" id="txtPushNotification" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearchPushNotification').click()">
            </div>
        </div>
        <div class="form-group col-xs-12">
            <input type="button" id="btnSearchPushNotification" value="Search" class="primary search_ic" onclick="SearchPushNotification();">
            <div class="default btn icon-btn" onclick="ResetPushNotificationFilters();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnResetforPushNotification" value="Reset" class="">
            </div>
        </div>
    </form>
    <form class="form-block formCustomField" style="margin-top:10px;display:none;" id="formCustomField">

        @if (ProjectSession.UserTypeId == 1)
        {
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="form-group">
                    <label class="control-label">Reseller:</label>
                    @Html.DropDownListFor(model => model.ResellerID, new List<SelectListItem>(), new { id = "ResellerIDJobSetting", @class = "form-control" })
                </div>
            </div>
        }
        @if (ProjectSession.UserTypeId == 1)
        {
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="form-group">
                    <label class="control-label">Solar Company:</label>
                    <input type="hidden" id="hdnsolarCompanyid" />
                    <input type="text" id="searchSolarCompany" name="searchSolarCompany" class="form-control" maxlength="50" />
                </div>
            </div>
        }
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Custom Field:</label>
                <input type="text" id="txtCustomField" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearchCustomField').click()">
            </div>
        </div>
        <div class="form-group col-xs-12">
            <input type="button" id="btnSearchCustomField" value="Search" class="primary search_ic" onclick="SearchCustomField();">
            <div class="default btn icon-btn">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnResetCustomField" value="Reset" class="" onclick="ResetSearchCustomField();">
            </div>
        </div>
    </form>
    <form class="form-block formDocTemplate" style="margin-top:10px;display:none;">
        @*<div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group">*@
        <div class="col-sm-2">
            <div class="form-group">
                <label class="control-label">Document Name:</label>
                <input type="text" id="txtDocTemplateName" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearchDocTemaplate').click()">
            </div>
        </div>
        @if (ProjectSession.UserTypeId == 1)
        {
            <div class="col-sm-2">
                <div class="form-group">
                    <label class="control-label">Document Folder:</label>
                    <select id="ddlCat" class="form-control"></select>
                </div>
            </div>

            <div class="col-sm-2" id="divCustomType" style="display:none">
                <div class="form-group">
                    <label class="control-label">Custom Type:</label>
                    <div class="clearfix">
                        @Html.RadioButton("CustomType", "1", true) Global
                        @Html.RadioButton("CustomType", "2") Company
                    </div>
                </div>
            </div>

            <div class="col-sm-2" id="jobType" style="display:none">
                <div class="form-group">
                    <label class="control-label">Job Type:</label>
                    <select class="form-control" id="jobTypeId">
                        <option value="1">PVD</option>
                        <option value="2">SWH</option>
                    </select>
                </div>
            </div>

            <div class="col-sm-3" id="ResellerDiv">
                <div class="form-group">
                    <label class="control-label">Reseller:</label>
                    <select class="job-search-box form-control resellerData form-control" id="job-reseller-filter" multiple="multiple" placeholder="All Reseller"></select>
                </div>
            </div>

            <div class="col-sm-3" id="SolarCompanyDiv">
                <div class="form-group">
                    <label class="control-label">Solar Company:</label>
                    <select class="job-search-box form-control solarCompanyData form-control" id="job-reseller-filter" multiple="multiple" placeholder="All Solar Company"></select>
                </div>
            </div>
        }
        @*</div>
                </div>
            </div>*@
        <div class="form-group col-xs-12">
            <input type="button" id="btnSearchDocTemaplate" value="Search" class="primary search_ic" onclick="SearchDocTemaplate();">
            <div class="default btn icon-btn" onclick="ResetDocTemaplate();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnResetDocTemaplate" value="Reset" class="">
            </div>
        </div>
    </form>
    <form class="form-block formJobAction" style="margin-top:10px;display:none;">
        <div class="col-md-2">
            <div class="form-group">
                <ul id="jobAction">
                    @if (ProjectSession.UserTypeId == 4)
                    {
                        <li class="option-box">
                            Preapproval
                            <div class="onoffswitch">
                                <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox switch" id="onOffSwitchPreApproval" ison="1">
                                <label class="onoffswitch-label" for="onOffSwitchPreApproval">
                                    <span class="onoffswitch-inner"></span>
                                    <span class="onoffswitch-switch"></span>
                                </label>
                            </div>
                        </li>
                        <li class="option-box">
                            Connection
                            <div class="onoffswitch">
                                <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox switch" id="onOffSwitchConnection" ison="1">
                                <label class="onoffswitch-label" for="onOffSwitchConnection">
                                    <span class="onoffswitch-inner"></span>
                                    <span class="onoffswitch-switch"></span>
                                </label>
                            </div>
                        </li>
                    }
                    @if (ProjectSession.UserTypeId == 1)
                    {
                        <li class="option-box">
                            Allow Trade
                            <div class="onoffswitch">
                                <input type="checkbox" name="onoffswitchAllowTrade" class="onoffswitch-checkbox switch" id="onOffSwitchAllowTrade" ison="1">
                                <label class="onoffswitch-label" for="onOffSwitchAllowTrade">
                                    <span class="onoffswitch-inner"></span>
                                    <span class="onoffswitch-switch"></span>
                                </label>
                            </div>
                        </li>
                    }
                    @if (ProjectSession.UserTypeId == 1 || ProjectSession.UserTypeId == 2 || ProjectSession.UserTypeId == 3 || ProjectSession.UserTypeId == 4 || ProjectSession.UserTypeId == 5)
                    {
                        <li class="option-box">
                            Allow Create Job Notification
                            <div class="onoffswitch">
                                <input type="checkbox" name="onOffSwitchAllowCreateJobNotification" class="onoffswitch-checkbox switch" id="onOffSwitchAllowCreateJobNotification" ison="1">
                                <label class="onoffswitch-label" for="onOffSwitchAllowCreateJobNotification">
                                    <span class="onoffswitch-inner"></span>
                                    <span class="onoffswitch-switch"></span>
                                </label>
                            </div>
                        </li>
                    }
                    @if (ProjectSession.UserTypeId == 1)
                    {
                        <li class="option-box">
                            Allow SPV
                            <div class="onoffswitch">
                                <input type="checkbox" name="onoffswitchAllowSPV" class="onoffswitch-checkbox switch" id="onOffSwitchAllowSPV" ison="1">
                                <label class="onoffswitch-label" for="onOffSwitchAllowSPV">
                                    <span class="onoffswitch-inner"></span>
                                    <span class="onoffswitch-switch"></span>
                                </label>
                            </div>
                        </li>
                        <li class="option-box">
                            Allow access to <br /> all users
                            <div class="onoffswitch">
                                <input type="checkbox" name="onOffSwitchAllowAllUsers" class="onoffswitch-checkbox switch" id="onOffSwitchAllowAllUsers" ison="1">
                                <label class="onoffswitch-label" for="onOffSwitchAllowAllUsers">
                                    <span class="onoffswitch-inner"></span>
                                    <span class="onoffswitch-switch"></span>
                                </label>
                            </div>
                        </li>

                    }


                </ul>
            </div>
            <div class="form-group">
                <button type="button" class="btn primary icon-btn" id="btnSaveDefault"><span class="sprite-img save_ic"></span> Save</button>
            </div>
            @if ((ProjectSession.UserTypeId == 1))
            {
                <div class="form-group">
                    <button type="button" class="btn primary icon-btn" id="btnViewLog" onclick="GetAllowAcessLog()">View Log</button>
                </div>
            }

            @*@if ((ProjectSession.UserTypeId == 1 && ProjectSession.LoggedInUserId == 340) || (ProjectSession.LoggedInUserId == 144))
                {
                <div class="form-group" style="display:inline-block">
                    <button type="button" class="btn primary" id="btnCreateCacheForJobs" onclick="location.href = '@Url.Action("SetAllResellerDataInCacheForJobs", "Reseller") '">Create Cache For Jobs</button>

                </div>


                <div class="form-group" style="display:inline-block">
                    <button type="button" class="btn primary" id="btnCreateCacheForStcSubmission" onclick="location.href = '@Url.Action("SetAllResellerDataInCacheForStcSubmission", "Reseller") '">Create Cache For STCSubmission</button>

                </div>

                }*@


        </div>
    </form>
    <form class="form-block inline recSettings" style="margin-top:10px;display:none;">
        <div class="row">
            <div class="form-group" style="display:none;">
                <label class="control-label">Scheduler Run Date</label>
                <div class="input-group">
                    <input type="text" class="form-control date-pick" readonly="readonly" id="txtSchRunDate" style="background-color: white;" />
                    <span class="input-group-addon sprite-img date-picker"></span>
                </div>
            </div>
            <div class="col-md-2">
                <label class="control-label">Scheduler Last Run Date:</label>
            </div>
            <div class="col-md-10 marg-b-8">
                <label id="lblSchedulerRunDate" class="control-label"></label>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <div class="input-group">
                        <button class="btn primary icon-btn" style="margin-top:26px;" tabindex="48" type="button" onclick="return RunFailureScheduler();">
                            Run Scheduler
                            <span class="sprite-img rec-registry-h-ic"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    @if (ProjectSession.UserTypeId == 1)
    {
        <div id="notificationList" class="formJobAction" style="display:none;">
            <h3 class="title" style="margin-top:30px;">Search Notification</h3>
            <div class="form-block" style="margin-top:10px;">
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="form-group">
                        <label class="control-label">Notification:</label>
                        <input type="text" id="txtNotification" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
                    </div>
                </div>

                <div class="form-group col-xs-12">
                    <input type="button" id="btnSearch" value="Search" class="primary search_ic" onclick="SearchNotification();">
                    <div class="default btn icon-btn" onclick="ResetNotificationFilters();">
                        <span class="sprite-img reset_ic"></span>
                        <input type="button" id="btnReset" value="Reset" class="">
                    </div>
                </div>
            </div>
            <div class="grid_topbar">
                <p class="job_result" id="numRecords"></p>
                <a href="#" onclick="deleteNotificationList()" class="primary pull-right delete_ic" title="Delete Template">Delete Notification</a>
                <a href="#" id="addNotification" class="primary pull-right btn icon-btn" title="Add Note"><span class="sprite-img add_ic"></span> Add Notification</a>
            </div>
            <div class="row">
                <div id="grid" class="col-xs-12">
                    <div class="table-responsive">
                        <table id="datatable1" class="table table-hover datatableSolarCompanyNotification" style="width:100%">
                            <thead>
                                <tr>
                                    <th style="background-image:none !important;"><input type="checkbox" id="chkAllSolarCompanyNotification" name="select_all"></th>
                                    <th style="text-align:left!important;"><span>@Html.DisplayName("Notification Title")</span></th>
                                    <th class="action"><span>@Html.DisplayName("Action")</span></th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }

    <div id="templateList" class="formTemplate">
        <div class="grid_topbar">
            <p class="job_result" id="numRecords"></p>
            <a href="#" onclick="deleteCheckListTemplate()" class="primary pull-right delete_ic" title="Delete Template">Delete Template</a>
        </div>
        <div class="row">
            <div id="grid" class="col-xs-12">
                <div class="table-responsive">
                    <table id="datatable" class="table table-hover  datatableTemplateList">
                        <thead>
                            <tr>
                                <th style="background-image:none !important;"><input type="checkbox" id="chkAll" name="select_all"></th>
                                <th><span>@Html.DisplayName("CheckList Template Name")</span></th>
                                <th><span>@Html.DisplayName("JobType")</span></th>
                                <th><span>@Html.DisplayName("Default")</span></th>
                                <th><span>@Html.DisplayName("Created By")</span></th>
                                <th><span>@Html.DisplayName("Solar Company")</span></th>
                                <th><span>@Html.DisplayName("Created Date")</span></th>
                                <th><span>@Html.DisplayName("Modified Date")</span></th>
                                <th class="action"><span>@Html.DisplayName("Action")</span></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="customFieldList" class="formCustomField" style="display:none;">
        <div class="grid_topbar">
            <p class="job_result" id="numRecords"></p>
            <a href="#" onclick="deleteCustomField()" class="primary pull-right delete_ic" title="Delete Custom Field">Delete Custom Field</a>
        </div>
        <div class="row">
            <div id="grid" class="col-xs-12">
                <div class="table-responsive">
                    <table id="datatableCustomField" class="table table-hover datatableCustomField" style="width:100%">
                        <thead>
                            <tr>
                                <th style="background-image:none !important;"><input type="checkbox" id="chkAllCustomField" name="select_all"></th>
                                <th style="text-align:left!important;"><span>@Html.DisplayName("Custom Field")</span></th>
                                <th style="text-align:left!important;"></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="docTemplateList" class="formDocTemplate" style="display:none;">
        <div class="grid_topbar">
            <p class="job_result" id="numRecords"></p>
            <a href="#" onclick="DeleteDocTemplate()" class="primary pull-right delete_ic" title="Delete Document Template">Delete Document Template</a>
        </div>
        <div class="row">
            <div id="grid" class="col-xs-12">
                <div class="table-responsive">
                    <table id="datatableDocTemplate" class="table table-hover datatableDocTemplate" style="width:100%">
                        <thead>
                            <tr>
                                <th style="background-image:none !important;"><input type="checkbox" id="chkAllDocTemplate" name="select_all"></th>
                                <th><span>@Html.DisplayName("Document Template Name")</span></th>
                                <th style="text-align: right;"><span>@Html.DisplayName("Default")</span></th>
                                <th class="action"><span>@Html.DisplayName("Action")</span></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="pushNotificationList" class="formpushNotification" style="display:none;">
        <div class="grid_topbar">
            <p class="job_result" id="numRecords"></p>
            <a href="#" id="addPushNotification" class="primary pull-right btn icon-btn" title="Add Note"><span class="sprite-img add_ic"></span>Send Notification</a>
        </div>
        <div class="row">
            <div id="grid" class="col-xs-12">
                <div class="table-responsive">
                    <table id="datatablePushNotification" class="table table-hover datatableSendPushNotification" style="width:100%">
                        <thead>
                            <tr>

                                <th><span>@Html.DisplayName("Notification Message")</span></th>
                                <th><span>@Html.DisplayName("Reseller")</span></th>
                                <th><span>@Html.DisplayName("Solar Company")</span></th>
                                <th><span>@Html.DisplayName("Solar Electrician")</span></th>
                                <th><span>@Html.DisplayName("Contractor")</span></th>
                                <th><span>@Html.DisplayName("Job Type")</span></th>
                                <th><span>@Html.DisplayName("Platform")</span></th>


                                <th style="text-align:center!important;"><span>@Html.DisplayName("Created Date")</span></th>

                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade popupTemplateName" tabindex="-1" role="dialog" id="popupAddTemplate">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title">Template</h4>
                </div>
                <div class="modal-body create-job">
                    <form id="addTemplateForm">
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionAddTemplate" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <div class="form-box">
                            @Html.HiddenFor(m => m.checkListTemplate.CheckListTemplateId)
                            @Html.HiddenFor(m => m.checkListTemplate.CopyOfCheckListTemplateId)
                            @Html.HiddenFor(m => m.checkListTemplate.DeleteDefaultItemId)
                            @Html.HiddenFor(m => m.checkListTemplate.SolarCompanyId)
                            @Html.HiddenFor(m => m.checkListTemplate.JobType)
                            <input type="hidden" id="isSaveAsNewTemp" />
                            <div class="clearfix">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.checkListTemplate.CheckListTemplateName, new { @class = "control-label required" })
                                    @Html.TextBoxFor(m => m.checkListTemplate.CheckListTemplateName, new { @class = "form-control", @maxlength = "100" })
                                    @Html.ValidationMessageFor(m => m.checkListTemplate.CheckListTemplateName)
                                </div>
                            </div>
                            <div class="clearfix">
                                <div class="form-group">
                                    <label class="control-label required">Job Type:</label>
                                    <div class="checkbox-box" style="color:#494949;">
                                        @Html.RadioButton("JobType", "1", true) PVD
                                        @Html.RadioButton("JobType", "2", false) SWH
                                    </div>
                                </div>
                            </div>
                            @if (ProjectSession.UserTypeId == 1 || ProjectSession.UserTypeId == 3 || ProjectSession.UserTypeId == 4 || ProjectSession.UserTypeId == 8 || ProjectSession.UserTypeId == 6)
                            {
                                <div class="clearfix">
                                    <div class="form-group">
                                        @Html.CheckBoxFor(m => m.checkListTemplate.IsDefault)
                                        <span>Default </span>
                                    </div>
                                </div>
                                @*<div class="checkbox" style="margin-top:0px !important">
                                        <label>

                                        </label>
                                    </div>*@
                            }
                        </div>
                        <div class="modal-footer" style="border-top:0px !important;">
                            <button type="button" class="btn primary save_ic icon-btn" onclick="addTemplate()"><span class="sprite-img save_ic"></span>Save</button>
                            <button type="button" class="btn default cancel_ic" onclick="clearTemplate()">Clear</button>
                        </div>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
</div>
<div class="modal fade popupTemplateName" tabindex="-1" role="dialog" id="popupCheckListTemplate">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title templateName">Template</h4>
                </div>
                <div class="modal-body">
                    <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegionAddEditItem" style="display: none">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    </div>
                    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionItem" style="display: none">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    </div>
                    @*<form id="checkListTemplateForm"></form>*@
                    <div id="checkListTemplateForm"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade popupCheckListItem" tabindex="-1" role="dialog" id="popupCheckListItem">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                    <img src='@Url.Content("~/images/close-btn.png")' alt="">
                </button>
                <h4 class="modal-title">Check List Item</h4>
            </div>
            <div class="modal-body create-job">
                <form id="checkListItemForm"></form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade popupCustomField" tabindex="-1" role="dialog" id="popupCustomField">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title">Custom Field</h4>
                </div>
                <div class="modal-body create-job">
                    <form id="addCustomFieldForm">
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionCustomField" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <div class="form-box">
                            @Html.HiddenFor(m => m.jobCustomField.JobCustomFieldId)
                            @Html.HiddenFor(m => m.jobCustomField.SolarCompanyId)
                            <div class="clearfix">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.jobCustomField.CustomField, new { @class = "control-label required" })
                                    @Html.TextBoxFor(m => m.jobCustomField.CustomField, new { @class = "form-control", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.jobCustomField.CustomField)
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="border-top:0px !important;">
                            <button type="button" class="btn primary save_ic icon-btn" onclick="addCustomField()"> <span class="sprite-img save_ic"></span>Save</button>
                            <button type="button" class="btn default cancel_ic" onclick="clearCustomField()">Clear</button>
                        </div>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
</div>
<div class="modal fade popupDocTemplate" tabindex="-1" role="dialog" id="popupDocTemplate">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                    <img src='@Url.Content("~/images/close-btn.png")' alt="">
                </button>
                <h4 class="modal-title">Document Template</h4>
            </div>
            <div class="modal-body create-job">
                <form id="addDocTemplateForm">
                    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionDocTemplate" style="display: none">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    </div>
                    <div class="form-box">
                        @Html.HiddenFor(m => m.documentTemplate.DocumentTemplateId)
                        <div class="clearfix">
                            <div class="form-group">
                                @Html.LabelFor(m => m.documentTemplate.DocumentTemplateName, new { @class = "control-label required" })
                                @Html.TextBoxFor(m => m.documentTemplate.DocumentTemplateName, new { @class = "form-control", @maxlength = "250" })
                                @Html.ValidationMessageFor(m => m.documentTemplate.DocumentTemplateName)
                            </div>
                            <div class="form-group">
                                <table class="uf" style="margin-left:-10px;">
                                    <tr>
                                        <td width="70" style="vertical-align:top;">
                                            <div class="fileUpload primary upload_ic">
                                                <span title="Upload Document Template">Upload Document Template</span>
                                                <input id="uploadDocTemplate" type="file" class="upload fileUpload" multiple tabindex="51" accept=".pdf" />
                                            </div>
                                        </td>
                                        <td>
                                            <div class="bxcont col-sm-12">
                                                <table class="table table-striped">
                                                    <tbody id="tblDocTemplate"></tbody>
                                                </table>
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="form-group" id="chkIsDefault" style="display:none;">
                                @Html.CheckBoxFor(m => m.documentTemplate.IsDefault)
                                <span> Default</span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" style="border-top:0px !important;">
                        <button type="button" class="btn primary save_ic icon-btn" onclick="AddDocTemplate()"> <span class="sprite-img save_ic"></span>Save</button>
                        <button type="button" class="btn default cancel_ic" onclick="ClearDocTemplate()">Clear</button>
                    </div>
                </form>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<div class="modal fade popupAddNotification" tabindex="-1" role="dialog" id="popupAddNotification">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title">Add Note</h4>
                </div>
                <div class="modal-body create-job">
                    <form id="addNotificationForm">
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionDocTemplate1" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <div class="form-box">
                            @Html.HiddenFor(m => m.solarCompanyNotification.NotificationId)
                            <div class="clearfix">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.solarCompanyNotification.NotificationTitle, new { @class = "control-label required" })
                                    @Html.TextBoxFor(m => m.solarCompanyNotification.NotificationTitle, new { @class = "form-control", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.solarCompanyNotification.NotificationTitle)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.solarCompanyNotification.NotificationContent, new { @class = "control-label required" })
                                    @Html.TextAreaFor(m => m.solarCompanyNotification.NotificationContent, new { @class = "form-control", @maxlength = "2000", @rows = 6 })
                                    @Html.ValidationMessageFor(m => m.solarCompanyNotification.NotificationContent)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.solarCompanyNotification.ExpiryDate, new { @class = "control-label required" })
                                    <div class="input-group">
                                        @Html.TextBoxFor(m => m.solarCompanyNotification.ExpiryDate, new { @class = "form-control date-pick", @tabindex = 9, @readonly = true, style = "background-color: white;" })
                                        <span class="input-group-addon sprite-img date-picker"></span>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.solarCompanyNotification.ExpiryDate)
                                </div>
                                <div class="form-group">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(m => m.solarCompanyNotification.IsSpecialNotification, new { @class = "form-control" })
                                            Special Notification
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(m => m.solarCompanyNotification.ShowToAll, new { @class = "form-control" })
                                            Show In All Pages
                                        </label>
                                    </div>

                                </div>

                            </div>
                            <div class="modal-footer" style="border-top:0px !important;">
                                <button type="button" class="btn primary save_ic icon-btn" onclick="addNotifications()"> <span class="sprite-img save_ic"></span>Save</button>
                                <button type="button" class="btn default cancel_ic" onclick="clearNotifications()">Clear</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
</div>

<div class="modal fade popupAddPushNotification" tabindex="-1" role="dialog" id="popupAddPushNotification">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title">Add Note</h4>
                </div>
                <div class="modal-body create-job">
                    <form id="addPushNotificationForm">
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionDocTemplate1" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <div class="form-box">
                            @Html.HiddenFor(m => m.pushNotificationSend.pushNotificationId)
                            <div class="clearfix">
                                <div class="form-box">
                                    <div class="row">

                                        @if (ProjectSession.UserTypeId == 1)
                                        {
                                            <div class="col-sm-6">

                                                <div class="form-group">

                                                    <label class="control-label required" id="lblResellerID">Reseller:</label>
                                                    @Html.DropDownListFor(model => model.ResellerID, new List<SelectListItem>(), new { id = "ResellerIDJobSetting", @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.ResellerID)
                                                </div>
                                            </div>
                                        }
                                        @if (ProjectSession.UserTypeId == 1)
                                        {
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="control-label required" id="lblSolarCompanyId">SolarCompany:</label>
                                                    @Html.DropDownListFor(model => model.SolarCompanyId, new List<SelectListItem>(), new { id = "SolarCompanyIdJobSetting", @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.SolarCompanyId)
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="row">

                                        <div class="col-sm-6 form-group">
                                            @*@Html.LabelFor(m => m.BasicDetails.JobType, new { @class = "control-label required" })
                                                @Html.DropDownListFor(m => m.BasicDetails.JobType, new List<SelectListItem> { new SelectListItem() { Text = "Select", Value = "" }, new SelectListItem() { Text = "PVD", Value = "1" }, new SelectListItem() { Text = "SWH", Value = "2" }, new SelectListItem() { Text = "All", Value = "0" } }, new { @class = "form-control", @tabindex = 201, @autofocus = "autofocus" })*@
                                            <label class="control-label required" id="lblJobType" for="JobType">Job Type:</label>
                                            @*@Html.LabelFor(m => m.BasicDetails.JobType, new { @class = "control-label required" })*@
                                            @Html.DropDownListFor(m => m.BasicDetails.JobType, new List<SelectListItem> { new SelectListItem() { Text = "Select", Value = "" }, new SelectListItem() { Text = "PVD", Value = "1" }, new SelectListItem() { Text = "SWH", Value = "2" }, new SelectListItem() { Text = "All", Value = "0" } }, new { @class = "form-control", @tabindex = 201, @autofocus = "autofocus" })

                                            @Html.ValidationMessageFor(m => m.BasicDetails.JobType)
                                        </div>
                                        <div class="form-group col-sm-6">
                                            <label class="control-label required" id="lblsolarElectrician" for="solarElectrician">Solar  Electrician:</label>
                                            @*@Html.LabelFor(m => m.solarElectrician, new { @class = "control-label required" })*@

                                            @Html.DropDownListFor(m => m.solarElectrician, new List<SelectListItem>(), new { id = "solarElectrician", @class = "form-control" })
                                            @*@Html.DropDownListFor(m => m.solarElectrician, new SelectList(Model.solarElectrician, "UserId", "Name"), "Select", new { id = "UserId",@class = "form-control required" })*@
                                            @*@Html.ValidationMessageFor(m => m.solarElectrician)*@

                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-sm-6">
                                            <label class="control-label required" id="lblSolarCompanyId">Contractor:</label>
                                            @Html.DropDownListFor(m => m.solarContractor, new List<SelectListItem>(), new { id = "solarContractor", @class = "form-control" })
                                            @*@Html.DropDownListFor(m => m.solarElectrician, new SelectList(Model.solarElectrician, "UserId", "Name"), "Select", new { id = "UserId",@class = "form-control required" })*@
                                            @*@Html.ValidationMessageFor(m => m.solarContractor)*@

                                        </div>
                                        <div class="col-sm-6 form-group">
                                            @Html.LabelFor(m => m.platform, new { @class = "control-label required" })
                                            @Html.DropDownListFor(m => m.platform, new List<SelectListItem> { new SelectListItem() { Text = "Select", Value = "" }, new SelectListItem() { Text = "Android", Value = "1" }, new SelectListItem() { Text = "ios", Value = "2" }, new SelectListItem() { Text = "All", Value = "0" } }, new { @class = "form-control", @tabindex = 201, @autofocus = "autofocus", @id = "platform" })
                                            @Html.ValidationMessageFor(m => m.platform)
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-12 form-group">

                                            @Html.LabelFor(m => m.pushNotificationSend.Notification, new { @class = "control-label required" })
                                            @Html.TextBoxFor(m => m.pushNotificationSend.Notification, new { @class = "form-control" })

                                            @Html.ValidationMessageFor(m => m.pushNotificationSend.Notification)
                                        </div>
                                    </div>

                                </div>


                            </div>
                        </div>
                        <div class="modal-footer" style="border-top:0px !important;">
                            <button type="button" class="btn primary save_ic icon-btn" onclick="addPushNotifications()"> <span class="sprite-img save_ic"></span>Send</button>
                            <button type="button" class="btn default cancel_ic" onclick="clearpushNotifications()">Clear</button>
                        </div>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
</div>


<div class="modal fade" id="JobsettingViewLog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog modal-lg vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title" id="myModalLabel">
                        Allow Access for all user Log
                        <button type="button" class="close sprite-img" data-dismiss="modal" aria-label="Close" tabindex="3"></button>
                    </h3>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionAllowAcess" style="display: none">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    </div>
                    <div id="AllowForAlluserDiv" class="form-group">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@Html.Partial("~/Views/CheckListItem/_CommonCheckListMethod.cshtml")
@section scripts{
    @*<script src="~/Scripts/jquery-ui-1.0.js"></script>
        <script src="~/Scripts/jquery.fileupload.js"></script>
        <script src="~/Scripts/FormBot.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>*@
    <script src="~/Scripts/set-number.min.js"></script>
    @*@Scripts.Render("~/datatableJs")
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/bootstrap")*@
    @*<script src="~/Scripts/jquery.fileupload.js"></script>*@
    <script src="~/Scripts/jquery.sumoselect.min.js"></script>
    <link href="~/Content/sumoselect.css" rel="stylesheet" />
    <script type="text/javascript">

        var resellerCount = 0, reseller, companies, companyCount = 0;
        var urlGetAllowAcessLog='@Url.Action("GetAllowAcessLog", "JobSetting")';

        $(document).ready(function () {


            $(function () {
                BindSolarCompanyCheckListTemplate();
                GetTemplateList();
                getDefaultSettings();
            });

            if ('@ProjectSession.UserTypeId' == 4)
                            $("#chkIsDefault").show();
            @*if (@ProjectSession.UserTypeId== 1) {
                FillDropDown('solarElectrician', '@Url.Action("GetSolarElectricianForJobType","JobSetting")', 0, true, null);
            }*@

            @*if (@ProjectSession.UserTypeId == 1 || @ProjectSession.UserTypeId == 3)
            {
            //FillDropDown('ResellerID', '@Url.Action("GetReseller", "Reseller")', 0, true, null);
            FillDropDown('SolarCompanyId', '@Url.Action("GetSolarCompanyByResellerId", "JobSetting")?id=' + $('#ResellerID').val(), 0, true, null);
            }*@
             @*$("#ResellerIDJobSetting").change(function () {

                FillDropDown('SolarCompanyIdJobSetting', '@Url.Action("GetSolarCompanyByResellerId", "JobSetting")?id=' + $('#ResellerIDJobSetting').val(), 0, true, null);
             })*@
             $("#popupAddPushNotification #ResellerIDJobSetting").change(function () {
                  FillDropDown('popupAddPushNotification #SolarCompanyIdJobSetting', '@Url.Action("GetSolarCompanyByResellerId", "JobSetting")?id=' + $('#popupAddPushNotification #ResellerIDJobSetting').val(), 0, true, null);
             })
            $("#formCustomField #ResellerIDJobSetting").change(function () {
                FillDropDown('formCustomField #SolarCompanyIdJobSetting', '@Url.Action("GetSolarCompanyByResellerId", "JobSetting")?id=' + $('#formCustomField #ResellerIDJobSetting').val(), 0, true, null);
            })

            window.onload = function () {
                var currentTab = localStorage.getItem('Current_Tab');
                if (! $.cookie("FirstLoad")) {
                    currentTab = null;
                    $.cookie("FirstLoad", "firstSet", { "expires": 7 })
                }

                if (currentTab != null) {
                    $('#' + currentTab).click();
                }
                else {
                    $('#aTemplate').click();
                }
            }


            $('#solarCompanyNotification_ExpiryDate').datepicker({
                format: '@FormBot.Helper.ProjectConfiguration.GetDateFormat',
                autoclose: true,
                startDate: "today"
            }).on('change', function () {
                $(this).valid();
            });

            var today = new Date();
            var yesterday = new Date();
            yesterday.setDate(today.getDate() - 1);
            $('#txtSchRunDate').datepicker({
                format: '@FormBot.Helper.ProjectConfiguration.GetDateFormat',
                autoclose: true,
                endDate: yesterday
            }).on('change', function () {
                $(this).valid();
            });

            $("#btnResetDocTemaplate").click(function(e){
                if('@ProjectSession.UserTypeId' == 1)
                {
                    $("#ddlCat").val('-1');
                    $("#jobType").val(1);
                }
                $("#txtDocTemplateName").val('');
                if ($.fn.DataTable.isDataTable('datatableDocTemplate')) {
                    $(".datatableDocTemplate").dataTable().fnDraw();
                }
            });

            ////////////////////////////////////////
            $('#searchSolarCompany').autocomplete({
                minLength: 0,
                source: function (request, response) {
                    var data=[];
                    $.each(solarCompanyList,function(key,value){
                        if (value.text.toLowerCase().indexOf($("#searchSolarCompany").val().toLowerCase()) > -1 ) {
                            data.push({Title : value.text,id:value.value});
                        }
                    });

                    response($.map(data, function (item) {
                        return { label: item.Title, value: item.Title,id:item.id };
                    }))
                },
                select: function (event, ui) {
                    $("#hdnsolarCompanyid").val(ui.item.id); // save selected id to hidden input
                }
            }).on('focus', function() { $(this).keydown(); });

            $("#searchSolarCompany").focusout(function(){
                var validSolarComapny = 0;
                $.each(solarCompanyList,function(key,value){
                    if (value.text == $("#searchSolarCompany").val()) {
                        validSolarComapny = 1;
                        return false;
                    }
                });
                if(validSolarComapny == 0)
                {
                    $("#hdnsolarCompanyid").val(0);
                }
            });

            $.ui.autocomplete.prototype._renderItem = function (ul, item) {
                var re = new RegExp($.trim(this.term.toLowerCase()));
                var t = item.label.replace(re, "<span style='font-weight:600;'>" + $.trim(this.term.toLowerCase()) +
                    "</span>");
                return $("<li style='font-size:14px;'></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + t + "</a>")
                    .appendTo(ul);
            };


            @*if ('@ProjectSession.UserTypeId' == 1) {
                BindResellerDropdown();
            }*@
            //BindSolarCompanyCheckListTemplate();
            function BindResellerDropdown(className) {
                var IsResellerExist = false;
                var IsResellerchktemplateExist = false;
                $.ajax({
                    type: 'get',
                    url: '@Url.Action("GetReseller", "Reseller")',
                    dataType: 'json',
                    data: '',
                    async: false,
                    success: function (reseller) {
                            $.each(reseller, function (i, res) {
                                $("#ResellerIDJobSetting").append('<option value="' + res.Value + '">' + res.Text + '</option>');
                                $(className + " #ResellerIDJobSetting").append('<option value="' + res.Value + '">' + res.Text + '</option>');
                                if (IsResellerExist == false && res.Value == localStorage.getItem('RequestedSE_ResellerId')) {
                                    IsResellerExist = true;
                                }
                            });
                            if (IsResellerExist) {
                                document.getElementById("ResellerIDJobSetting").value = localStorage.getItem('RequestedSE_ResellerId')
                            }
                            else {
                                $("#ResellerIDJobSetting").val($("#ResellerIDJobSetting option:first").val());
                                localStorage.setItem('RequestedSE_ResellerId', $("#ResellerIDJobSetting option:first").val());
                            }
                            if ($("#ResellerIDJobSetting").val() > 0 && ('@ProjectSession.UserTypeId' == 1)) {
                                BindSolarCompany(document.getElementById("ResellerIDJobSetting").value);
                            }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve Resellers.' + ex);
                    }
                });
            }
            function BindContractor() {

                @*FillDropDown('solarContractor', '@Url.Action("GetContractor", "JobSetting")?JobType=' + $("#BasicDetails_JobType").val() + '&SolarCompanyId=' + $("#SolarCompanyIdJobSetting").val() + '&ResellerId=' + $("#ResellerIDJobSetting").val(), 0, true, null)*@
               FillDropDown('solarContractor', '@Url.Action("GetContractor", "JobSetting")?JobType=' + $("#BasicDetails_JobType").val() + '&SolarCompanyId=' + $("#popupAddPushNotification #SolarCompanyIdJobSetting").val() + '&ResellerId=' + $("#popupAddPushNotification #ResellerIDJobSetting").val(),0,true,null)

            }
            function BindSolarElectrician() {
                @*FillDropDown('solarElectrician', '@Url.Action("GetElectricianOfAllType", "JobSetting")?JobType=' + $("#BasicDetails_JobType").val() + '&SolarCompanyId=' + $("#SolarCompanyIdJobSetting").val() + '&ResellerId=' + $("#ResellerIDJobSetting").val(), 0, true, null);*@
                 FillDropDown('solarElectrician', '@Url.Action("GetElectricianOfAllType", "JobSetting")?JobType=' + $("#BasicDetails_JobType").val() + '&SolarCompanyId=' + $("#popupAddPushNotification #SolarCompanyIdJobSetting").val() + '&ResellerId=' + $("#popupAddPushNotification #ResellerIDJobSetting").val(), 0, true, null);

            }

            function BindSolarCompany(resellerID) {
                $("#searchSolarCompany").val('');
                var IsCompanyExist=false;
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetSolarCompanyByResellerId","SolarCompany")',
                    dataType: 'json',
                    async: false,
                    data: { id: resellerID },
                    success: function (solarcompany) {

                        solarCompanyList=[];

                        $.each(solarcompany, function (i, company) {

                            solarCompanyList.push({ value:company.Value,text:company.Text });
                            if(IsCompanyExist==false && company.Value==localStorage.getItem('RequestedSE_SolarCompanyId')){
                                IsCompanyExist=true;
                            }
                        });
                        if(IsCompanyExist){
                            //document.getElementById("SolarCompanyId").value = localStorage.getItem('RequestedSE_SolarCompanyId')
                            $('#hdnsolarCompanyid').val(localStorage.getItem('RequestedSE_SolarCompanyId'));
                        }
                        else{
                            //$("#SolarCompanyId").val($("#SolarCompanyId option:first").val());
                            $('#hdnsolarCompanyid').val(solarCompanyList.length > 0 ? solarCompanyList[0].value : 0);
                            localStorage.setItem('RequestedSE_SolarCompanyId',$('#hdnsolarCompanyid').val());
                        }

                        if (localStorage.getItem('RequestedSE_SolarCompanyId') == '') {
                            $('#hdnsolarCompanyid').val(solarCompanyList.length > 0 ? solarCompanyList[0].value : 0);
                            localStorage.setItem('RequestedSE_SolarCompanyId',$('#hdnsolarCompanyid').val());
                        }

                        $.each(solarCompanyList,function(key,value){
                            if (value.value ==  localStorage.getItem('RequestedSE_SolarCompanyId')) {
                                $("#searchSolarCompany").val(value.text);
                                $('#hdnsolarCompanyid').val(localStorage.getItem('RequestedSE_SolarCompanyId'));
                            }
                        });

                    },
                    error: function (ex) {
                        alert('Failed to retrieve Solar Companies.' + ex);
                    }
                });
                return false;
            }


            function BindSolarCompanyCheckListTemplate() {
                var isCompanyExsits = false;
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetSolarCompany", "SolarCompany")',
                    dataType: 'json',
                    async: false,
                    data: { },
                    success: function (solarcompany) {

                        $("#SolarCompanyChkTemplate").prepend('<option value="' + 0 + '"> All </option>')
                        $.each(solarcompany, function (i, res) {
                            $("#SolarCompanyChkTemplate").append('<option value="' + res.Value + '">' + res.Text + '</option>');
                            if (isCompanyExsits == false && res.Value == localStorage.getItem('RequestedChktemplate_SolarCompany')){
                                isCompanyExsits=true;
                            }
                        });
                        if (isCompanyExsits) {
                            document.getElementById("SolarCompanyChkTemplate").value = localStorage.getItem('RequestedChktemplate_SolarCompany')
                        }
                        else{
                            $("#SolarCompanyChkTemplate").val($("#SolarCompanyChkTemplate option:first").val());
                            localStorage.setItem('RequestedChktemplate_SolarCompany', $("#SolarCompanyChkTemplate option:first").val());
                        }
                        if ($.fn.dataTable.isDataTable('.datatableTemplateList')) {
                            $(".datatableTemplateList").dataTable().fnDraw();
                        }

                    },
                    error: function (ex) {
                        alert('Failed to retrieve Solar Companies.' + ex);
                    }
                });
                return false;
            }

            $("#ResellerIDJobSetting").change(function () {
                if ($("#ResellerIDJobSetting").val() > 0 && ('@ProjectSession.UserTypeId' == 1)) {
                    BindSolarCompany(document.getElementById("ResellerIDJobSetting").value);
                    $('#searchSolarCompany').focus();
                    //$('#searchSolarCompany').val('');
                }
            });

            $("#SolarCompanyChkTemplate").change(function () {

                localStorage.setItem('RequestedChktemplate_SolarCompany', $("#SolarCompanyChkTemplate").val());
            })
                                    @*$("#SolarCompanyId").change(function () {
                if ($("#SolarCompanyId").val() > 0 && ('@ProjectSession.UserTypeId' == 1)) {
                    BindSolarElectrician();
                    BindContractor();
                  //  $('#searchSolarCompany').focus();
                    //$('#searchSolarCompany').val('');
                }
            });*@
            $("#BasicDetails_JobType").change(function () {
                if ('@ProjectSession.UserTypeId' == 1) {
                    BindSolarElectrician();
                    BindContractor();
                }
                });


            ////////////////////////////////////////

            $("#btnResetDocTemaplate").click(function(e){
                if('@ProjectSession.UserTypeId' == 1)
                {
                    $("#ddlCat").val('-1');
                    $("#jobType").val(1);
                }
                $("#txtDocTemplateName").val('');
                $(".datatableDocTemplate").dataTable().fnDraw();
            });

            if('@ProjectSession.UserTypeId' == 1)
            {
                reseller = $('.resellerData').SumoSelect({ csvDispCount: 3, search: true, searchText: 'Search..', selectAll: true, okCancelInMulti: true });
                companies = $('.solarCompanyData').SumoSelect({ csvDispCount: 3, search: true, searchText: 'Search..', selectAll: true, okCancelInMulti: true });





                $("div#ResellerDiv p.btnOk").click(function () {
                    var i = 0;
                    while (i < companyCount) {
                        $(".solarCompanyData")[0].sumo.remove(0);
                        i++;
                    }
                    GetSolarCompany();
                });

                $("div#SolarCompanyDiv p.btnOk").click(function () {
                    if ($.fn.dataTable.isDataTable()) {
                        $(".datatableDocTemplate").dataTable().fnDraw();
                    }
                });

                $("#ddlCat").change(function(){
                    if($(this).val() == '-1')
                        $("#jobType").show();
                    else
                        $("#jobType").hide();

                    if($(this).val() == "0")
                    {
                        $("#divCustomType").show();
                        $("#chkIsDefault").show();
                        //$("#SolarCompanyDiv").show();
                        //$("#ResellerDiv").show();
                    }
                    else
                    {
                        $("#divCustomType").hide();
                        $("#SolarCompanyDiv").hide();
                        $("#ResellerDiv").hide();
                        $("#chkIsDefault").hide();
                        if ('@ProjectSession.UserTypeId' == 4)
                            $("#chkIsDefault").show();
                    }
                });

                $('input[type=radio][name=CustomType]').change(function () {
                    if($(this).val() == 1)
                    {
                        $("#SolarCompanyDiv").hide();
                        $("#ResellerDiv").hide();
                    }
                    else
                    {
                        GetAllReseller()
                        $("#SolarCompanyDiv").show();
                        $("#ResellerDiv").show();
                    }
                });
            }



            $(".formTemplate").show();
            $(".formCustomField").hide();
            $(".formDocTemplate").hide();
            $(".formJobAction").hide();
            $(".formpushNotification").hide();
            $(".recSettings").hide();
            $("#aTemplate").click(function () {
                $(".formTemplate").show();
                $(".formCustomField").hide();
                $(".formDocTemplate").hide();
                $(".formJobAction").hide();
                $(".recSettings").hide();
                $(".formpushNotification").hide();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
                BindSolarCompanyCheckListTemplate();
                GetTemplateList();
                localStorage.setItem("Current_Tab", 'aTemplate');
            });

            $("#aCustomField").click(function(){
                $(".formTemplate").hide();
                $(".formCustomField").show();
                $(".formDocTemplate").hide();
                $(".formJobAction").hide();
                $(".recSettings").hide();
                $(".formpushNotification").hide();
                if ('@ProjectSession.UserTypeId' == 1 || @ProjectSession.UserTypeId == 3) {

                   // BindResellerDropdown();
                    BindResellerDropdown("");
                    FillDropDown('SolarCompanyIdJobSetting', '@Url.Action("GetSolarCompanyByResellerId", "JobSetting")?id=' + $('#ResellerIDJobSetting').val(), 0, true, null);
                }
                if ('@ProjectSession.UserTypeId ==1') {
                    GetAllReseller();
                }

                GetCustomField();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
                localStorage.setItem("Current_Tab", 'aCustomField');
            });

            $("#aDocTemplate").click(function(){
                $(".formTemplate").hide();
                $(".formCustomField").hide();
                $(".formDocTemplate").show();
                $(".formJobAction").hide();
                $(".recSettings").hide();
                $(".formpushNotification").hide();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
                docTemplateCall();

                if ('@ProjectSession.UserTypeId ==1') {
                    GetStateList();
                }
                localStorage.setItem("Current_Tab", 'aDocTemplate');

            });

            $('#ajobAction').click(function(){
                $(".formTemplate").hide();
                $(".formCustomField").hide();
                $(".formDocTemplate").hide();
                $(".formpushNotification").hide();
                $(".recSettings").hide();
                $(".formJobAction").show();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
                getDefaultSettings();
                AssignDatatable();
                localStorage.setItem("Current_Tab", 'ajobAction');


            });
            $('#apushNotification').click(function () {
                $(".formTemplate").hide();
                $(".formCustomField").hide();
                $(".formDocTemplate").hide();
                $(".formJobAction").hide();
                $(".recSettings").hide();
                $(".formpushNotification").show();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
                PushNotificationDatatable();
                localStorage.setItem("Current_Tab", 'apushNotification');
                if ('@ProjectSession.UserTypeId' == 1 || @ProjectSession.UserTypeId == 3) {
                     BindResellerDropdown(".popupAddPushNotification");
                    FillDropDown('SolarCompanyIdJobSetting', '@Url.Action("GetSolarCompanyByResellerId", "JobSetting")?id=' + $('#ResellerIDJobSetting').val(), 0, true, null);
                }


            });
            $('#aRECStatus').click(function () {
                $(".formTemplate").hide();
                $(".formCustomField").hide();
                $(".formDocTemplate").hide();
                $(".formJobAction").hide();
                $(".formpushNotification").hide();
                $(".recSettings").show();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
            });

        });


        function GetStateList() {
             $.get('@Url.Action("GetStateList", "Job")', function (response) {
                    if (response) {
                        var states = JSON.parse(response).Table;
                        var options = "";
                        for (var i = 0; i < states.length; i++) {
                            if(i == 0)
                            {
                                options += '<option value=' + -1 + '>' + "STC" + '</option>'
                                options += '<option value=' + -2 + '>' + "CES" + '</option>'
                                options += '<option value=' + 0 + '>' + "Custom" + '</option>'
                            }
                            options += '<option value=' + states[i].StateID + '>' + states[i].Name + '</option>'
                        }
                        $('#ddlCat').html('');
                        $('#ddlCat').append(options);
                        $('#ddlCat').change();
                    }
                    if ($.fn.dataTable.isDataTable('#datatableDocTemplate')) {
                        $("#datatableDocTemplate").dataTable().fnDraw();
                    }

                });

        }






        var chkCount=0;
        function GetTemplateList() {
            if (!$.fn.dataTable.isDataTable('.datatableTemplateList')) {
                $('.datatableTemplateList').DataTable({
            iDisplayLength: 10,
            lengthMenu:@ProjectConfiguration.GetPageSize,
            language: {
                sLengthMenu: "Page Size: _MENU_"
            },
            columns: [

                { 'data': 'Id',
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        if(@ProjectSession.UserTypeId == 1)
                        {
                            return '<input type="checkbox" id='+full.Id+'  >';
                        }
                        else if (@ProjectSession.UserTypeId == 4)
                        {
                                if (full.SolarCompanyId == null || full.SolarCompanyId == "")
                                    return '<input type="checkbox" id=' + full.Id + ' disabled=disabled>';
                                else
                                    return '<input type="checkbox" id=' + full.Id + '>';
                        }
                        else if(@ProjectSession.UserTypeId == 8 || @ProjectSession.UserTypeId == 6)
                        {
                            if (full.CreatedBy == ProjectSession_LoggedInUserId)
                                return '<input type="checkbox" id=' + full.Id + '>';
                            else
                                return '<input type="checkbox" id=' + full.Id + ' disabled=disabled>';
                        }
                    }
                },
                    { 'data': 'CheckListTemplateName' ,"orderable": true ,
                        "render": function (data, type, full, meta) {
                            if(full.CheckListTemplateName!=null){
                                var editHref = "javascript:editCheckListTemplate('" + full.Id + "')";
                                if (@ProjectSession.UserTypeId == 6 || @ProjectSession.UserTypeId == 8) {
                                    if (full.CreatedBy == ProjectSession_LoggedInUserId)
                                        return '<a href="#" onclick="' + editHref + '" style="text-decoration:none;">' + full.CheckListTemplateName + '</a>'
                                    else
                                        return '<a href="javascript:;" style="text-decoration:none;">' + full.CheckListTemplateName + '</a>'

                                }
                                if(full.SolarCompanyId == null)
                                {
                                    if(@ProjectSession.UserTypeId == 1 || @ProjectSession.UserTypeId == 3)
                                    {
                                        return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.CheckListTemplateName+'</a>'
                                    }
                                    else
                                    {
                                        return '<a href="javascript:;" style="text-decoration:none;">' + full.CheckListTemplateName +'</a>'
                                    }
                                }
                                else
                                {
                                    return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.CheckListTemplateName+'</a>'
                                }
                            }
                            else{
                                return '';
                            }
                        },
                    },

                        {
                            'data': 'JobType',"orderable": false ,
                            "render": function (data, type, full, meta) {
                                if (full.JobType == 1) {
                                    return 'PVD';
                                }
                                else if (full.JobType == 2) {
                                    return 'SWH';
                                }
                            },
                        },

                       { 'data': 'IsDefault' , "orderable": false  },
                        { 'data': 'CreatedName', "orderable": false },
                        { 'data': 'CompanyName', "orderable": false },
                       { 'data': 'strCreatedDate', "orderable": false },
                       { 'data': 'strModifiedDate', "orderable": false },
                       {
                           'data': 'Id',
                           "render": function (data, type, full, meta) {
                               var editHref ="javascript:OpenCheckListItemPopup('" + full.Id + "')";
                               var imgedit = 'background:url(../Images/edit-icon.png) no-repeat center; text-decoration:none;';
                               //var imgdelete = 'background:url(../Images/delete-icon.png) no-repeat center; text-decoration:none;';
                               //var deleteHref = "javascript:deleteCheckListTemplate('" + full.Id + "')";
                               var returnHTML =  '<a href="' + editHref + '" class="action edit" style="' + imgedit + '" title="Edit">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';  // + '&nbsp;&nbsp;';
                               //returnHTML +=  '<a href="' + deleteHref + '" class="action delete" style="' + imgdelete + '" title="Delete">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                               return returnHTML;
                           },
                           "orderable": false
                       }

            ],

            dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
            initComplete: function (settings, json) {
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");
            },

            bServerSide: true,
            sAjaxSource: '@Url.Action("GetCheckListTemplateList", "CheckListTemplate")',

            "fnDrawCallback": function () {
                chkCount=0;
                $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                $(".paging a.previous").html("&nbsp");
                $(".paging a.next").html("&nbsp");
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");

                if ($(".paging").find("span").length > 1) {
                    $("#datatable_length").show();
                } else if ($(".datatableTemplateList").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                //--------To show display records from total records-------------------
                var table = $('.datatableTemplateList').DataTable();
                var info = table.page.info();

                if(info.recordsTotal==0){
                    $(".formTemplate").find("#numRecords").html('<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b>  Job Part(s) found');
                }
                else {
                    $(".formTemplate").find("#numRecords").html('<b>' + $('.datatableTemplateList >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b>  Job Part(s) found');
                }
                //------------------------------------------------------------------------------------------------------------------------------

                $('[data-toggle="tooltip"]').tooltip();

            },

            "fnServerParams": function (aoData) {
                aoData.push({ "name": "templateName", "value": $("#txtTemplateName").val() });
                aoData.push({ "name": "solarCompanyId", "value": $("#SolarCompanyChkTemplate").val() });
            }
        });

            }
        }
        if ($.fn.dataTable.isDataTable('.datatableTemplateList')) {
            var table = $('.datatableTemplateList').DataTable();
        }


        $('#chkAll').on('click', function () {
            if ($.fn.dataTable.isDataTable('.datatableTemplateList')) {
                var table = $('.datatableTemplateList').DataTable();
            }
            var rows = table.rows({ 'search': 'applied' }).nodes();
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
            $('input[type="checkbox"]').each(function(){
                if($(this).attr('disabled'))
                {
                    $(this).prop('checked', false);
                }
            });
        });

        var chkCount = 0;
        function GetCustomField() {

            if (!$.fn.dataTable.isDataTable('.datatableCustomField'))
            {
                $('.datatableCustomField').DataTable({
            iDisplayLength: 10,
            lengthMenu:@ProjectConfiguration.GetPageSize,
            language: {
                sLengthMenu: "Page Size: _MENU_"
            },
            columns: [

                { 'data': 'Id',
                    "orderable": false,
                    "render": function (data, type, full, meta) {

                        return '<input type="checkbox" id='+full.JobCustomFieldId+'  >';

                    }
                },

                    { 'data': 'CustomField',
                        "orderable": true ,
                        "class" : "alignLeftTD",
                        "render": function (data, type, full, meta) {
                            if(full.CustomField!=null){
                                var editHref ="javascript:editCustomField('" + full.JobCustomFieldId + "')";
                                return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.CustomField+'</a>'
                            }
                            else{
                                return '';
                            }
                        },
                    },

            { 'data': 'Id',
                "orderable": false,
                "render": function (data, type, full, meta) {
                    return '';
                }
            }

            ],

            dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
            initComplete: function (settings, json) {
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");
            },

                    bServerSide: true,

            sAjaxSource: '@Url.Action("JobCustomFieldList", "JobSetting")',

                    "fnDrawCallback": function () {

                chkCount=0;
                $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                $(".paging a.previous").html("&nbsp");
                $(".paging a.next").html("&nbsp");
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");

                if ($(".paging").find("span").length > 1) {
                    $("#datatable_length").show();
                } else if ($(".datatableTemplateList").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                //--------To show display records from total records-------------------
                var table = $('.datatableTemplateList').DataTable();
                var info = table.page.info();

                if(info.recordsTotal==0){
                    document.getElementById("numRecords").innerHTML = '<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b>  Job Part(s) found';
                }
                else{
                    document.getElementById("numRecords").innerHTML = '<b>' + $('.datatableTemplateList >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b>  Job Part(s) found';
                }
                //------------------------------------------------------------------------------------------------------------------------------

                $('[data-toggle="tooltip"]').tooltip();

            },

            "fnServerParams": function (aoData) {

                aoData.push({ "name": "name", "value": $("#txtCustomField").val() },{ "name": "solarcompanyId", "value": $("#hdnsolarCompanyid").val() });
            }
        });

            }
        }
        if ($.fn.dataTable.isDataTable('.datatableCustomField')) {
            var tableCustomField = $('.datatableCustomField').DataTable();
        }


        $('#chkAllCustomField').on('click', function () {
            if ($.fn.dataTable.isDataTable('.datatableCustomField')) {
                var tableCustomField = $('.datatableCustomField').DataTable();
            }
            var rows = tableCustomField.rows({ 'search': 'applied' }).nodes();
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
            $('input[type="checkbox"]').each(function(){
                if($(this).attr('disabled'))
                {
                    $(this).prop('checked', false);
                }
            });
        });

        function docTemplateCall() {

            if(!$.fn.dataTable.isDataTable('#datatableDocTemplate'))
            {
                $('#datatableDocTemplate').DataTable({

            iDisplayLength: 10,
            lengthMenu:@ProjectConfiguration.GetPageSize,
            language: {
                sLengthMenu: "Page Size: _MENU_"
            },
            columns: [
                { 'data': 'Id',
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        if(full.SolarCompanyId == null)
                        {
                            if(@ProjectSession.UserTypeId == 1 || @ProjectSession.UserTypeId == 3)
                            {
                                return '<input type="checkbox" id='+full.Id+'  >';
                            }
                            else
                            {
                                return '<input type="checkbox" id='+full.Id+' disabled=disabled>';
                            }
                        }
                        else
                        {
                            return '<input type="checkbox" id='+full.Id+'  >';
                        }
                    }
                },
                { 'data': 'DocumentTemplateName' ,"orderable": true ,
                    "render": function (data, type, full, meta) {
                        if(full.DocumentTemplateName!=null){

                            var editHref ="javascript:EditDocumentTemplate('" + full.Id + "')";

                            if(full.SolarCompanyId == null)
                            {
                                if(parseInt(@ProjectSession.UserTypeId) == 1 || parseInt(@ProjectSession.UserTypeId) == 3)
                                {
                                    return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.DocumentTemplateName+'</a>'
                                }
                                else
                                {
                                    return '<a href="#" style="text-decoration:none;">'+full.DocumentTemplateName+'</a>'
                                }
                            }
                            else
                            {
                                return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.DocumentTemplateName+'</a>'
                            }
                        }
                        else{
                            return '';
                        }
                    },
                },
                {
                    'data': 'IsDefault' , "orderable": false , "class" : "alignRightTD"
                },
                {
                    'data': 'Id',
                    "render": function (data, type, full, meta) {
                        var editHref ="javascript:OpenDocumentTemplate('" + full.Id + "')";
                        var imgedit = 'background:url(../Images/edit-icon.png) no-repeat center; text-decoration:none;';
                        var returnHTML =  '<a href="' + editHref + '" class="action edit" style="' + imgedit + '" title="Edit">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                        return returnHTML;
                    },
                    "orderable": false
                }
            ],

            dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
            initComplete: function (settings, json) {
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");
            },

            bServerSide: true,
            sAjaxSource: '@Url.Action("GetDocumentTemplateList", "DocumentTemplate")',

            "fnDrawCallback": function () {
                chkCount=0;
                $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                $(".paging a.previous").html("&nbsp");
                $(".paging a.next").html("&nbsp");
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");

                if ($(".paging").find("span").length > 1) {
                    $("#datatable_length").show();
                } else if ($(".datatableDocTemplate").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                //--------To show display records from total records-------------------
                var table = $('.datatableDocTemplate').DataTable();
                var info = table.page.info();

                if(info.recordsTotal==0){
                    document.getElementById("numRecords").innerHTML = '<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b> Document Template found';
                }
                else{
                    document.getElementById("numRecords").innerHTML = '<b>' + $('.datatableDocTemplate >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b> Document Template found';
                }
                //------------------------------------------------------------------------------------------------------------------------------

                $('[data-toggle="tooltip"]').tooltip();

            },

            "fnServerParams": function (aoData) {

                if('@ProjectSession.UserTypeId' == 1){

                    var solarCompanyIds = '';
                    var jobTypeId = 0;
                    var folderTypeId = '';

                    if($("#ddlCat").val() == 0)
                    {
                        if($('input[type=radio][name=CustomType]:checked').val() == 2)
                        {
                            var SCAIds = $('.solarCompanyData').val();
                            if (SCAIds) {
                                solarCompanyIds = SCAIds.join();
                            }
                        }
                        else
                        {
                            solarCompanyIds = null;
                        }

                    }
                    else if($("#ddlCat").val() == -1)
                    {
                        jobTypeId = $("#jobTypeId").val();
                    }

                    aoData.push({ "name": "solarCompanyIds", "value": solarCompanyIds });
                    aoData.push({ "name": "jobType", "value": jobTypeId });
                    aoData.push({ "name": "folderTypeId", "value": $("#ddlCat").val() });
                }

                aoData.push({ "name": "docTemplateName", "value": $("#txtDocTemplateName").val() });
            }
        });

            }
        }

        if ($.fn.dataTable.isDataTable('.datatableDocTemplate')) {
            var tableDocTemplate = $('.datatableDocTemplate').DataTable();
        }


        $('#chkAllDocTemplate').on('click', function () {
            if ($.fn.dataTable.isDataTable('.datatableDocTemplate')) {
                var tableDocTemplate = $('.datatableDocTemplate').DataTable();
            }
            var rows = tableDocTemplate.rows({ 'search': 'applied' }).nodes();
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
            $('input[type="checkbox"]').each(function(){
                if($(this).attr('disabled'))
                {
                    $(this).prop('checked', false);
                }
            });
        });



        $("#addTemplate").click(function () {
            OpenaAddTemplate('','',false);
        });

        $("#addCustomField").click(function(){

            if(('@ProjectSession.UserTypeId' != '1') || ($("#ResellerIDJobSetting").val() > 0 && $("#hdnsolarCompanyid").val() > 0))
            {
                $("#jobCustomField_CustomField").removeClass('input-validation-error');
                $("#jobCustomField_CustomField").next("span").attr('class', 'field-validation-valid');
                $("#jobCustomField_JobCustomFieldId").val(0);
                if('@ProjectSession.UserTypeId' != '1')
                {
                    $("#jobCustomField_SolarCompanyId").val('@ProjectSession.SolarCompanyId');
                }
                else
                {
                    $("#jobCustomField_SolarCompanyId").val($("#hdnsolarCompanyid").val());
                }

                $("#jobCustomField_CustomField").val('');
                $('#popupCustomField').modal({ backdrop: 'static', keyboard: false });
            }
            else
            {
                alert("Please select reseller and solar company first");
            }
        });


        $("#addDocTemplate").click(function () {
            if('@ProjectSession.UserTypeId' == 1)
            {
                if($("#ddlCat").val() == 0)
                {
                    if($('input[type=radio][name=CustomType]:checked').val() == 2)
                    {
                        if($('.solarCompanyData').val() == null || $('.solarCompanyData').val().length != 1)
                        {
                            alert('Please select only one solar company');
                            return false;
                        }
                    }
                }
            }

            $("#uploadDocTemplate").val('');
            $("#documentTemplate_DocumentTemplateName").val('');
            $("#tblDocTemplate").html('');
            $("#errorMsgRegionDocTemplate").hide();
            $('#documentTemplate_DocumentTemplateId').val('');
            document.getElementById('documentTemplate_IsDefault').checked = false;
            $('#popupDocTemplate').modal({ backdrop: 'static', keyboard: false });
        });

        $("#saveJobSetting").click(function () {
            if ($("#jobSettingsForm").valid()) {
                var data = JSON.stringify($('form').serializeToJson());
            }
        });

        Array.prototype.pushArray = function () {
            var toPush = this.concat.apply([], arguments);
            for (var i = 0, len = toPush.length; i < len; ++i) {
                this.push(toPush[i]);
            }
        };
        $.fn.serializeToJson = function () {
            var $form = $(this[0]);

            var items = $form.serializeArray();

            var returnObj = {};
            var nestedObjectNames = [];

            $.each(items, function (i, item) {
                //Split nested objects and assign properties
                //You may want to make this recursive - currently only works one step deep, but that's all I need
                if (item.name.indexOf('.') != -1) {
                    var nameArray = item.name.split('.');
                    if (nestedObjectNames.indexOf(nameArray[0]) < 0) {
                        nestedObjectNames.push(nameArray[0]);
                    }
                    var tempObj = returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] || {};
                    if (!tempObj[nameArray[1]]) {
                        tempObj[nameArray[1]] = item.value;
                    }
                    returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] = tempObj;
                } else if (!returnObj[item.name]) {
                    returnObj[item.name] = item.value;
                }
            });

            return returnObj;
        };

        $('#popupDocTemplate').on('hidden.bs.modal', function (e) {
            IsDocTemplateChange = false;
        });

        function showErrorMessage(message) {
            $(".alert").hide();
            $("#successMsgRegion").hide();
            $("#errorMsgRegion").html(closeButton + message);
            $("#errorMsgRegion").show();
        }

        function showErrorMessageForDocumentTemplate(message) {
            $(".alert").hide();
            //$("#successMsgRegion").hide();
            $("#errorMsgRegionDocTemplate").html(closeButton + message);
            $("#errorMsgRegionDocTemplate").show();
        }

        function showSuccessMessage(message) {
            $(".alert").hide();
            $("#errorMsgRegion").hide();
            $("#successMsgRegion").html(closeButton + message);
            $("#successMsgRegion").show();
        }

        function cancelTemplateName() {
            $('#popupTemplateName').modal('hide');
        }

        function addTemplate() {
            if ($("#addTemplateForm").valid()) {
                if(@ProjectSession.UserTypeId == 1 || @ProjectSession.UserTypeId == 3)
                {
                    $("#checkListTemplate_SolarCompanyId").val($("#hdnsolarCompanyid").val());
                }
                else
                {
                    $("#checkListTemplate_SolarCompanyId").val('@ProjectSession.SolarCompanyId');
                }
                $("#checkListTemplate_JobType").val($("input[name='JobType']:checked").val());
                CommonAddTemplate();
            }
        }



        function deleteCheckListTemplate(templateId) {
            var selectedRows=[];
            $('.datatableTemplateList tbody input[type="checkbox"]').each(function(){
                if($(this).prop('checked')==true){
                    selectedRows.push($(this).attr('id'));
                }
            })
            if(selectedRows!=null && selectedRows.length>0){
                if (confirm('Are you sure you want to delete this record ?')) {
                    $.ajax(
                       {
                           url: '@Url.Action("Delete", "CheckListTemplate")',
                           dataType: 'json',
                           contentType: 'application/json; charset=utf-8',
                           type: 'get',
                           //data: { id: templateId},
                           data: {checkListTemplateIds: JSON.stringify(selectedRows)},
                           success: function (response) {
                               if (response.id && response.id > 0) {
                                   showSuccessMessage("CheckList template has been deleted successfully.");
                                   $("#chkAll").prop('checked',false);
                                   $(".datatableTemplateList").dataTable().fnDraw();
                               }
                               else {
                                   if (response.error.toLowerCase() == 'sessiontimeout')
                                       window.location.href = '@Url.Action("Logout", "Account")';
                                   else
                                       showErrorMessage(response.error);
                               }
                           },
                           error: function () {
                               showErrorMessage("CheckList template has not been deleted.");
                           }
                       });
                }
                else
                {
                    if(selectedRows==null || selectedRows.length == 0)
                        alert('Please select any check list template to remove.');
                }
            };
        }


        function SearchTemplate() {
            $(".datatableTemplateList").dataTable().fnDraw();
        }

        function SearchCustomField() {
            $(".datatableCustomField").dataTable().fnDraw();
        }

        function SearchDocTemaplate() {
            $(".datatableDocTemplate").dataTable().fnDraw();
        }

        function ResetSearchFilters() {
            $("#txtTemplateName").val('');
            $(".datatableTemplateList").dataTable().fnDraw();
        }

        function ResetSearchCustomField() {
            $("#txtCustomField").val('');
            $(".datatableCustomField").dataTable().fnDraw();
        }

        function ResetDocTemaplate() {
            $("#txtDocTemplateName").val('');
            $(".datatableDocTemplate").dataTable().fnDraw();
        }

        function editCheckListTemplate(templateId) {
            event.preventDefault();
            $.ajax(
                   {
                       url: '@Url.Action("GetCheckListTemplateData", "CheckListTemplate")',
                       dataType: 'json',
                       contentType: 'application/json; charset=utf-8',
                       type: 'get',
                       data: { id: templateId},
                       success: function (response) {
                           if (response.data) {

                               $("#checkListTemplate_CheckListTemplateId").val(response.data.CheckListTemplateId);
                               $("#checkListTemplate_CheckListTemplateName").val(response.data.CheckListTemplateName);
                               if(response.data.IsDefault == true)
                                   $("#checkListTemplate_IsDefault").prop("checked",true);
                               else
                                   $("#checkListTemplate_IsDefault").prop("checked",false);

                               $("input[name='JobType'][value='"+response.data.JobType+"']").prop("checked",true);

                               $('#popupAddTemplate').modal({ backdrop: 'static', keyboard: false });
                           }
                           else {
                               showErrorMessage(response.error);
                           }
                       },
                       error: function () {
                           showErrorMessage("CheckList template has not been opened.");
                       }
                   });
        }

        function OpenCheckListItemPopup(templateId,isTemplateChange) {
            $(".alert").hide();
            $("#successMsgRegionAddEditItem").hide();
            $("#errorMsgRegionItem").hide();
            CommonOpenCheckListItemPopup(templateId,true,0,isTemplateChange);
        }

        function OpenaAddTemplate(templateId, itemId, isSaveAsNewTemp = true) {
            CommonOpenaAddTemplate(templateId, itemId, isSaveAsNewTemp);
        }

        function addCustomField() {
            if ($("#addCustomFieldForm").valid()) {
                var data = JSON.stringify($('#addCustomFieldForm').serializeToJson());
                var id = $("#jobCustomField_JobCustomFieldId").val();
                $.ajax(
               {
                   url: '@Url.Action("SaveCustomField", "JobSetting")',
                   dataType: 'json',
                   contentType: 'application/json; charset=utf-8',
                   type: 'post',
                   data: data,
                   success: function (response) {
                       if (response.id && response.id > 0) {
                           $('#popupCustomField').modal('toggle');
                           $(".datatableCustomField").dataTable().fnDraw();
                           if(id > 0)
                               showSuccessMessage("Custom field has been updated successfully.");
                           else
                               showSuccessMessage("Custom field has been added successfully.");
                       }
                       else {
                           if (response.error.toLowerCase() == 'sessiontimeout')
                               window.location.href = '@Url.Action("Logout", "Account")';
                           else
                               showErrorMessage(response.error);
                       }
                   },
                   error: function () {
                       if(id > 0)
                           showErrorMessage("Custom field has not been updated.");
                       else
                           showErrorMessage("Custom field has not been added.");
                   }
               });
            }
        }

        function clearCustomField() {
            $("#jobCustomField_CustomField").val('');
        }

        function editCustomField(jobCustomFieldId) {
            $.ajax(
                   {
                       url: '@Url.Action("GetCustomField", "JobSetting")',
                       dataType: 'json',
                       contentType: 'application/json; charset=utf-8',
                       type: 'get',
                       data: { jobCustomFieldId: jobCustomFieldId},
                       success: function (response) {
                           if (response.data) {
                               $("#jobCustomField_JobCustomFieldId").val(response.data.JobCustomFieldId);
                               $("#jobCustomField_CustomField").val(response.data.CustomField);
                               $("#jobCustomField_SolarCompanyId").val(response.data.SolarCompanyId);
                               $('#popupCustomField').modal({ backdrop: 'static', keyboard: false });
                           }
                           else {
                               showErrorMessage(response.error);
                           }
                       },
                       error: function () {
                           showErrorMessage("Custom field has not been opened.");
                       }
                   });
        }

        function deleteCustomField(templateId) {
            var selectedRows=[];
            $('.datatableCustomField tbody input[type="checkbox"]').each(function(){
                if($(this).prop('checked')==true){
                    selectedRows.push($(this).attr('id'));
                }
            })
            if(selectedRows!=null && selectedRows.length>0){
                if (confirm('Are you sure you want to delete this record ?')) {
                    $.ajax(
                       {
                           url: '@Url.Action("CustomFieldDelete", "JobSetting")',
                           dataType: 'json',
                           contentType: 'application/json; charset=utf-8',
                           type: 'get',
                           data: {jobCustomFieldIds: selectedRows.join(',')},
                           success: function (response) {
                               if (response.id && response.id > 0) {
                                   showSuccessMessage("Custom field has been deleted successfully.");
                                   $("#chkAllCustomField").prop('checked',false);
                                   $(".datatableCustomField").dataTable().fnDraw();
                               }
                               else {
                                   if(response.error)
                                   {
                                       if (response.error.toLowerCase() == 'sessiontimeout')
                                           window.location.href = '@Url.Action("Logout", "Account")';
                                       else
                                           showErrorMessage(response.error);
                                   }
                                   else
                                       showErrorMessage("Custom field has not been deleted.");
                               }
                           },
                           error: function () {
                               showErrorMessage("Custom field has not been deleted.");
                           }
                       });
                }
            }
            else
            {
                if(selectedRows==null || selectedRows.length == 0)
                    alert('Please select any custom field.');
            }
        }

        var IsDocTemplateChange = false;

        $("#uploadDocTemplate").on('change',function(){
            var fileUpload = $("#uploadDocTemplate").get(0);
            var files = fileUpload.files;

            if(files.length > 0){
                IsDocTemplateChange = true;
                var appendContent = '<tr style="margin-top:30px"><td class="col-sm-8" style="color:#494949;border-bottom:0px !important">'+ files[0].name +'</td></tr>';
                $('#tblDocTemplate').html(appendContent);
            }
        });

        function AddDocTemplate() {
            if ($("#addDocTemplateForm").valid()) {

                //Checking whether FormData is available in browser
                if (window.FormData !== undefined) {

                    var docTemplateId = $('#documentTemplate_DocumentTemplateId').val(),
                    docTemplateName = $('#documentTemplate_DocumentTemplateName').val(),
                    stateid = 0,
                    jobTypeId = 0,
                    solarCompanyIds = '';

                    if('@ProjectSession.UserTypeId' == 1)
                    {
                        stateid = parseInt($('#ddlCat option:selected').val());
                        if(stateid == -1){
                            jobTypeId = parseInt($('#jobTypeId option:selected').val());
                        }
                        else if(stateid == 0){

                            if($('input[type=radio][name=CustomType]:checked').val() == 2)
                            {
                                $.each($('.solarCompanyData').val(), function( index, value ) {
                                    solarCompanyIds += value + ',';
                                })
                                solarCompanyIds = solarCompanyIds.substring(0, solarCompanyIds.length -1);
                            }

                        }
                    }

                    var fileUpload = $("#uploadDocTemplate").get(0);
                    var files = fileUpload.files;
                    var fileData = new FormData();

                    if(files.length > 0) {
                        // Create FormData object
                        fileData.append(files[0].name, files[0]);
                    }
                    else if(parseInt(docTemplateId) > 0 && (IsDocTemplateChange == false)) {

                    }
                    else {
                        alert("No document selected. Please add a document template");
                        return false;
                    }

                    var isDefault = document.getElementById('documentTemplate_IsDefault').checked;
                    $.ajax({
                        url: '@Url.Action("SaveDocumentTemplate", "DocumentTemplate")' +
                            '?docTemplateId=' + docTemplateId +'&docTemplateName=' + docTemplateName + '&IsDocTemplateChange=' + IsDocTemplateChange +
                            '&stateID=' + stateid + '&jobTypeID=' + jobTypeId + '&solarCompanyIDs=' + solarCompanyIds + '&isDefault=' + isDefault,
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: fileData,
                        success: function (response) {
                            if (response.id && response.id > 0) {
                                $('#popupDocTemplate').modal('toggle');
                                $(".datatableDocTemplate").dataTable().fnDraw();
                                if(docTemplateId == response.id)
                                    showSuccessMessage("Document Template has been updated successfully.");
                                else
                                    showSuccessMessage("Document Template has been added successfully.");

                                IsDocTemplateChange = false;
                            }
                            else {
                                if (response.error.toLowerCase() == 'sessiontimeout')
                                    window.location.href = '@Url.Action("Logout", "Account")';
                                else
                                    showErrorMessageForDocumentTemplate(response.error);
                            }
                        },
                        error: function () {
                            if(docTemplateId > 0)
                                showErrorMessage("Document Template has not been updated.");
                            else
                                showErrorMessage("Document Template has not been added.");
                        }
                    });
                }
            }
            else {
                alert("FormData is not supported.");
            }
        }

        function OpenDocumentTemplate(id) {
            window.open('@Url.Action("OpenDocumentTemplate", "JobSetting")?id='+ id, '_blank');
        }

        function EditDocumentTemplate(docTemplateId)
        {

            $.ajax({
                url: '@Url.Action("GetDocumentTemplate", "DocumentTemplate")',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                type: 'get',
                data: { id: docTemplateId},
                success: function (response) {
                    if (response.model) {
                        $("#documentTemplate_DocumentTemplateId").val(response.model.DocumentTemplateId);
                        $("#documentTemplate_DocumentTemplateName").val(response.model.DocumentTemplateName);

                        var appendContent = '<tr style="margin-top:30px"><td class="col-sm-8" style="color:#494949;border-bottom:0px !important">'+ response.model.FileName +'</td></tr>';

                        $('#tblDocTemplate').html(appendContent);
                        if (response.model.IsDefault == true) {
                            document.getElementById('documentTemplate_IsDefault').checked = true;
                        } else {
                            document.getElementById('documentTemplate_IsDefault').checked = false;
                        }
                        $("#errorMsgRegionDocTemplate").hide();
                        $('#popupDocTemplate').modal({ backdrop: 'static', keyboard: false });
                    }
                    else {
                        showErrorMessage(response.error);
                    }
                },
                error: function () {
                    showErrorMessage("Document Template has not been opened.");
                }
            });
        }

        function DeleteDocTemplate() {
            var selectedRows=[];
            $('.datatableDocTemplate tbody input[type="checkbox"]').each(function(){
                if($(this).prop('checked')==true){
                    selectedRows.push($(this).attr('id'));
                }
            })
            if(selectedRows!=null && selectedRows.length>0){
                if (confirm('Are you sure you want to delete this record ?')) {
                    $.ajax({
                        url: '@Url.Action("DeleteDocumentTemplate", "DocumentTemplate")',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        type: 'get',
                        data: { docTemplateIds: JSON.stringify(selectedRows)},
                        success: function (response) {
                            if (response.id && response.id > 0) {
                                showSuccessMessage("Document Template has been deleted successfully.");
                                $("#chkAllCustomField").prop('checked',false);
                                $(".datatableDocTemplate").dataTable().fnDraw();
                            }
                            else {
                                if(response.error)
                                {
                                    if (response.error.toLowerCase() == 'sessiontimeout')
                                        window.location.href = '@Url.Action("Logout", "Account")';
                                    else
                                        showErrorMessage(response.error);
                                }
                                else
                                    showErrorMessage("Document Template has not been deleted.");
                            }
                        },
                        error: function () {
                            showErrorMessage("Document Template has not been deleted.");
                        }
                    });
                }
            }
            else
            {
                if(selectedRows==null || selectedRows.length == 0)
                    alert('Please select any Document Template.');
            }
        }

        function GetAllReseller() {

            $.ajax({
                url: '@Url.Action("GetReseller", "Reseller")',
                type: "GET",
                dataType: "json",
                data: '',
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    if (result != null && result.length > 0) {
                        resellerCount = result.length;
                        for (var i = 0; i < result.length; i++) {
                            $('.resellerData')[0].sumo.add(result[i].Value, result[i].Text);
                        }
                        //$('.resellerData')[0].sumo.selectAll();
                    }
                    else
                        resellerCount = 0;

                        GetSolarCompany();
                },
                error: function (e) {
                    console.log(e);
                }
            });
            return false;
        }

        function GetSolarCompany() {
            var resellerIds = '';
            var RA = $('.resellerData').val();
            if (RA) {
                resellerIds = RA.join();
            }

            $.ajax({
                url: '@Url.Action("GetSolarCompanyOfSelectedReseller", "FormBotReport")',
                type: "GET",
                dataType: "json",
                data: { resellerIds: resellerIds},
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    if (result != null && result.length > 0) {
                        companyCount = result.length;
                        for (var i = 0; i < result.length; i++) {
                            $('.solarCompanyData')[0].sumo.add(result[i].Value, result[i].Text);
                        }
                        //$('.solarCompanyData')[0].sumo.selectAll();
                    }
                    else
                        companyCount = 0;

                },
                error: function (e) {
                    console.log(e);
                }
            });
        }


        function getDefaultSettings(){
            $.ajax({
                url: '@Url.Action("GetDefaultSettings", "JobSetting")',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                type: 'get',

                success: function (response) {
                    if (response.status) {

                        var data = JSON.parse(response.data);

                        $('#onOffSwitchPreApproval').prop('checked',data.IsPreapproval);
                        $('#onOffSwitchConnection').prop('checked',data.IsConnection);
                        $('#onOffSwitchAllowTrade').prop('checked', data.IsAllowTrade);
                        $('#onOffSwitchAllowSPV').prop('checked', data.GlobalisAllowedSPV);
                        $('#onOffSwitchAllowCreateJobNotification').prop('checked', data.IsCreateJobNotification);

                        $('#onOffSwitchAllowAllUsers').prop('checked', data.IsAllowedAccessToAllUsers);
                        $("#lblSchedulerRunDate").html(data.LastSyncDate);
                        $("#txtSchRunDate").val(data.LastSyncDate);
                        //showSuccessMessage("JobAction has been Updated Successfully.");
                    }
                    else {
                        if(response.error)
                        {
                            if (response.error.toLowerCase() == 'sessiontimeout')
                                window.location.href = '@Url.Action("Logout", "Account")';
                            else
                                showErrorMessage(response.error);
                        }
                        else{}
                        // showErrorMessage("Custom field has not been deleted.");
                    }
                },
                error: function () {
                    // showErrorMessage("Custom field has not been deleted.");
                }
            });
        }

        $('#btnSaveDefault').click(function(e){
            e.preventDefault();
            var data = { IsPreapproval :$('#onOffSwitchPreApproval').prop('checked'),
                IsConnection : $('#onOffSwitchConnection').prop('checked'),
                IsAllowTrade : $('#onOffSwitchAllowTrade').prop('checked') ,
                IsCreateJobNotification: $('#onOffSwitchAllowCreateJobNotification').prop('checked'),
                GlobalisAllowedSPV: $('#onOffSwitchAllowSPV').prop('checked'),
                IsAllowedAccessToAllUsers: $('#onOffSwitchAllowAllUsers').prop('checked')
            };

            $.ajax(
              {
                  url: '@Url.Action("SaveDefault", "JobSetting")',
                  dataType: 'json',
                  contentType: 'application/json; charset=utf-8',
                  type: 'post',
                  data: JSON.stringify(data),
                  success: function (response) {
                      if (response.status) {
                          showSuccessMessage("JobAction has been Updated Successfully.");
                      }
                      else {
                          if(response.error)
                          {
                              if (response.error.toLowerCase() == 'sessiontimeout')
                                  window.location.href = '@Url.Action("Logout", "Account")';
                              else
                                  showErrorMessage(response.error);
                          }
                          else{}
                          //showErrorMessage("Custom field has not been deleted.");
                      }
                  },
                  error: function () {
                      //showErrorMessage("Custom field has not been deleted.");
                  }
              });

        });

        $("#addNotification").click(function () {

            $("#solarCompanyNotification_NotificationId").val(0);
            $("#solarCompanyNotification_NotificationTitle").val('');
            $("#solarCompanyNotification_NotificationContent").val('');
            $("#solarCompanyNotification_ExpiryDate").val('');

            $('#popupAddNotification').modal({ backdrop: 'static', keyboard: false });



        });
        $("#addPushNotification").click(function () {
            $("#pushNotificationSend_pushNotificationId").val(0);
            $("#pushNotificationSend_Notification").val('');
            $('#popupAddPushNotification').modal({ backdrop: 'static', keyboard: false });

        })

        function SearchNotification() {
            $(".datatableSolarCompanyNotification").dataTable().fnDraw();
        }

        function ResetNotificationFilters() {
            $("#txtNotification").val('');
            $(".datatableSolarCompanyNotification").dataTable().fnDraw();
        }
        function SearchPushNotification() {
            $(".datatableSendPushNotification").dataTable().fnDraw();
        }

        function ResetPushNotificationFilters() {
            $("#txtPushNotification").val('');
            $(".datatableSendPushNotification").dataTable().fnDraw();
        }
        function addPushNotifications() {
            if ($("#addPushNotificationForm").valid()) {
                //var pushnotificationModel = ($('#addPushNotificationForm').serializeToJson().pushNotificationSend);
                //var jobsettingModel = ($('#addPushNotificationForm').serializeToJson().JobSetting);
                var JsonData = {
                    //Notification: ($('#pushNotificationSend_Notification').val()),
                    //ResellerId: parseInt($('#ResellerIDJobSetting').val()),
                    //SolarCompanyId: parseInt($('#SolarCompanyIdJobSetting').val()),
                    //ElectricianId: parseInt($('#solarElectrician').val()),
                    //ContractorId: parseInt($('#solarContractor').val()),
                    //JobType: parseInt($('#BasicDetails_JobType').val()),
                    //Platform: parseInt($('#platform').val()),

                    Notification: ($('#popupAddPushNotification #pushNotificationSend_Notification').val()),
                    ResellerId: parseInt($('#popupAddPushNotification #ResellerIDJobSetting').val()),
                    SolarCompanyId: parseInt($('#popupAddPushNotification #SolarCompanyIdJobSetting').val()),
                    ElectricianId: parseInt($('#popupAddPushNotification #solarElectrician').val()),
                    ContractorId: parseInt($('#popupAddPushNotification #solarContractor').val()),
                    JobType: parseInt($('#popupAddPushNotification #BasicDetails_JobType').val()),
                    Platform: parseInt($('#popupAddPushNotification #platform').val()),


                }


                $.ajax({
                    url: '@Url.Action("SavePushNotification", "JobSetting")',
                    type: 'post',
                    dataType: 'Json',
                    data: (JsonData),

                    success: function (response) {

                        if (response == true) {
                            $('#popupAddPushNotification').modal('toggle');
                            $(".datatableSendPushNotification").dataTable().fnDraw();

                            showSuccessMessage("Notification has been sent successfully.");
                        }
                         else {
                            if (response.error.toLowerCase() == 'sessiontimeout')
                                window.location.href = '@Url.Action("Logout", "Account")';
                            else
                                showErrorMessage(response.error);
                        }
                        },

                    error: function () {
                            showErrorMessage("Notification has not been send.");
                    }
                });

            }
        }
        function clearpushNotifications() {
            $("#pushNotificationSend_pushNotificationId").val(0);
            //$("#ResellerIDJobSetting").val('');
            //$("#SolarCompanyIdJobSetting").val('');
            $("#popupAddPushNotification #ResellerIDJobSetting").val('');
            $("#popupAddPushNotification #SolarCompanyIdJobSetting").val('');
            $("#BasicDetails_JobType").val('');
            $("#solarElectrician").val('');
            $("#solarContractor").val('');
            $("#platform").val('');
            $("#pushNotificationSend_Notification").val('');
        }

        function addNotifications() {

            if ($("#addNotificationForm").valid()) {

                var JsonData = {
                    NotificationId: ($('#solarCompanyNotification_NotificationId').val()),
                    NotificationTitle: ($('#solarCompanyNotification_NotificationTitle').val()),
                    NotificationContent: htmlEncode($('#solarCompanyNotification_NotificationContent').val()),
                    ExpiryDate: ($('#solarCompanyNotification_ExpiryDate').val()),
                    ShowToAll: ($('#solarCompanyNotification_ShowToAll').is(":checked")),
                    IsSpecialNotification: ($('#solarCompanyNotification_IsSpecialNotification').is(":checked"))

                }

               //var data = JSON.stringify($('#addNotificationForm').serializeToJson());
                var id = $("#solarCompanyNotification_NotificationId").val();
                $.ajax({
                    url: '@Url.Action("SaveNotification", "JobSetting")',
                    dataType: 'json',
                    type: 'post',
                    data: (JsonData),
                    success: function (response) {

                        if (response.id && response.id > 0) {

                            $('#popupAddNotification').modal('toggle');
                            $(".datatableSolarCompanyNotification").dataTable().fnDraw();
                            if(id > 0)
                                showSuccessMessage("Notification has been updated successfully.");
                            else
                                showSuccessMessage("Notification has been added successfully.");
                        }
                        else {
                            if (response.error.toLowerCase() == 'sessiontimeout')
                                window.location.href = '@Url.Action("Logout", "Account")';
                            else
                                showErrorMessage(response.error);
                        }
                    },
                    error: function () {
                        if(id > 0)
                            showErrorMessage("Notification has not been updated.");
                        else
                            showErrorMessage("Notification has not been added.");
                    }
                });

            }
        }

        function clearNotifications() {
            $("#solarCompanyNotification_NotificationId").val(0);
            $("#solarCompanyNotification_NotificationTitle").val('');
            $("#solarCompanyNotification_NotificationContent").val('');
            $("#solarCompanyNotification_ExpiryDate").val('');
        }

        function AssignDatatable() {
            if(!$.fn.DataTable.isDataTable('#datatable1'))
            {
                var chkNotificationCount=0;
                $('#datatable1').DataTable({
                    iDisplayLength: 10,
                    lengthMenu:@ProjectConfiguration.GetPageSize,
                    language: {
                        sLengthMenu: "Page Size: _MENU_"
                    },
                    columns: [

                        { 'data': 'NotificationId',
                            "orderable": false,
                            "render": function (data, type, full, meta) {
                                return '<input type="checkbox" id='+full.NotificationId+'  >';

                            }
                        },

                        { 'data': 'NotificationTitle',
                            "orderable": true ,
                            "class" : "alignLeftTD",
                            "render": function (data, type, full, meta) {
                                if(full.NotificationTitle!=null){
                                    var editHref ="javascript:editNotification('" + full.NotificationId + "')";
                                    return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.NotificationTitle+'</a>'
                                }
                                else{
                                    return '';
                                }
                            },
                        },

                          { 'data': 'NotificationId',
                              "orderable": false,
                              "render": function (data, type, full, meta) {
                                  var editHref = "javascript:editNotification('" + full.NotificationId + "','" + full.NotificationTitle + "','"  + full.NotificationContent + "','"+ full.ExpiryDate + "')";
                                  var imgedit = 'background:url(../Images/edit-icon.png) no-repeat center; text-decoration:none;';
                                  //var imgdelete = 'background:url(../Images/delete-icon.png) no-repeat center; text-decoration:none;';
                                  //var deleteHref = "javascript:DeleteNotification('" + full.NotificationId + "')";
                                  var returnHTML =  '<a href="' + editHref + '" class="action edit" style="' + imgedit + '" title="Edit">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                                  //returnHTML +=  '<a href="' + deleteHref + '" class="action delete" style="' + imgdelete + '" title="Delete">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                                  return returnHTML;
                              }
                          }
                    ],

                    dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
                    initComplete: function (settings, json) {
                        $('.grid-bottom span:first').attr('id', 'spanMain');
                        $("#spanMain span").html("");
                        $(".ellipsis").html("...");
                    },

                    bServerSide: true,
                    sAjaxSource: '@Url.Action("SolarCompanyNotificationList", "JobSetting")',

                    "fnDrawCallback": function () {

                        chkNotificationCount=0;
                        $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                        $(".paging a.previous").html("&nbsp");
                        $(".paging a.next").html("&nbsp");
                        $('.grid-bottom span:first').attr('id', 'spanMain');
                        $("#spanMain span").html("");
                        $(".ellipsis").html("...");

                        if ($(".paging").find("span").length > 1) {
                            $("#datatable_length").show();
                        } else if ($(".datatableSolarCompanyNotification").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                        //--------To show display records from total records-------------------
                        var table = $('.datatableSolarCompanyNotification').DataTable();
                        var info = table.page.info();

                        if(info.recordsTotal==0){
                            $(".formJobAction").find("#numRecords").html('<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b>  Notification(s) found');
                        }
                        else{
                            $(".formJobAction").find("#numRecords").html('<b>' + $('.datatableSolarCompanyNotification >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b>  Notification(s) found');
                        }

                        //------------------------------------------------------------------------------------------------------------------------------

                        $('[data-toggle="tooltip"]').tooltip();
                    },

                    "fnServerParams": function (aoData) {
                        aoData.push({ "name": "name", "value": $("#txtNotification").val() });
                    }

                });

                $('#chkAllSolarCompanyNotification').change(function (e) {
                    $('.datatableSolarCompanyNotification').children('tbody').children('tr').find('input[type="checkbox"]').prop('checked',this.checked);
                });

            }
        }

        function PushNotificationDatatable() {
            if (!$.fn.DataTable.isDataTable('#datatablePushNotification'))
            {
                var chkNotificationCount=0;
                $('#datatablePushNotification').DataTable({
                    iDisplayLength: 10,
                    lengthMenu:@ProjectConfiguration.GetPageSize,
                    language: {
                        sLengthMenu: "Page Size: _MENU_"
                    },
                    columns: [



                        { 'data': 'Notification',
                            "orderable": true ,
                            "class": "alignNotificationData",

                            "render": function (data, type, full, meta) {
                                if(full.Notification!=null){
                                    return full.Notification;
                                }
                                else{
                                    return '';
                                }
                            },
                        }
                        ,
                        {
                            'data': 'ResellerName',

                            "render": function (data, type, full, meta) {
                                return full.ResellerName;
                            }
                        },
                        {
                            'data': 'CompanyName',
                            "render": function (data, type, full, meta) { return full.CompanyName; }
                        },
                        {
                            'data': 'Solar Electrician',
                            "render": function (data, type, full, meta) { return full.SolarElectrician; }
                        },
                        {
                            'data': 'Contractor',
                            "render": function (data, type, full, meta) { return full.Contractor; }
                        },
                        {
                            'data': 'Job Type',
                            "render": function (data, type, full, meta) {
                                if (full.JobType == 0)
                                    return 'All';
                                else if (full.JobType == 1)
                                    return 'PVD';
                                else
                                    return 'SWH';
                            }
                        },
                        {
                            'data': 'Platform',
                            "render": function (data, type, full, meta) {
                                if (full.Platform == 0)
                                    return 'All';
                                else if (full.Platform == 1)
                                    return 'Android';
                                else
                                    return 'ios';
                            }
                        },

                        {
                            'data': 'StrCreateDate',
                            "class":"alignRightTD",
                            "orderable": false,
                            "render": function (data, type, full, meta) {
                                return full.StrCreateDate;
                            }
                          }
                    ],

                    dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
                    initComplete: function (settings, json) {
                        $('.grid-bottom span:first').attr('id', 'spanMain');
                        $("#spanMain span").html("");
                        $(".ellipsis").html("...");
                    },

                    bServerSide: true,
                    sAjaxSource: '@Url.Action("PushNotificationList", "JobSetting")',

                    "fnDrawCallback": function () {

                        chkNotificationCount=0;
                        $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                        $(".paging a.previous").html("&nbsp");
                        $(".paging a.next").html("&nbsp");
                        $('.grid-bottom span:first').attr('id', 'spanMain');
                        $("#spanMain span").html("");
                        $(".ellipsis").html("...");

                        if ($(".paging").find("span").length > 1) {
                            $("#datatable_length").show();
                        } else if ($(".datatableSendPushNotification").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                        //--------To show display records from total records-------------------
                        var table = $('.datatableSendPushNotification').DataTable();
                        var info = table.page.info();

                        if(info.recordsTotal==0){
                            $(".formpushNotification").find("#numRecords").html('<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b>  Notification(s) found');
                        }
                        else{
                            $(".formpushNotification ").find("#numRecords").html('<b>' + $('.datatableSendPushNotification >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b>  Notification(s) found');
                        }

                        //------------------------------------------------------------------------------------------------------------------------------

                        $('[data-toggle="tooltip"]').tooltip();
                    },

                    "fnServerParams": function (aoData) {
                        aoData.push({ "name": "name", "value": $("#txtPushNotification").val() });
                    }

                });



            }
        }



        function editNotification(notificationId) {
            $.ajax({
                url: '@Url.Action("GetNotification", "JobSetting")',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                type: 'get',
                data: { notificationId: notificationId},
                success: function (response) {
                    if (response.data) {
                        var expiryDate = moment(response.data.StrExpiryDate).format('@ProjectConfiguration.GetDateFormat'.toUpperCase());

                        $("#solarCompanyNotification_NotificationId").val(response.data.NotificationId);
                        $("#solarCompanyNotification_NotificationTitle").val(response.data.NotificationTitle);
                        $("#solarCompanyNotification_NotificationContent").val(response.data.NotificationContent);
                        $("#solarCompanyNotification_ExpiryDate").val(expiryDate);
                        $("#solarCompanyNotification_ExpiryDate").datepicker("update", expiryDate);
                        $('#popupAddNotification').modal({ backdrop: 'static', keyboard: false });
                    }
                    else {
                        showErrorMessage(response.error);
                    }
                },
                error: function () {
                    showErrorMessage("Notification has not been opened.");
                }
            });
        }

        function deleteNotificationList(notificationIds) {

            var selectedRows=[];
            $('.datatableSolarCompanyNotification tbody input[type="checkbox"]').each(function(){
                if($(this).prop('checked')==true){
                    selectedRows.push($(this).attr('id'));
                }
            })
            if(selectedRows!=null && selectedRows.length>0){
                if (confirm('Are you sure you want to delete this record ?')) {
                    $.ajax(
                       {
                           url: '@Url.Action("DeleteNotification", "JobSetting")',
                           dataType: 'json',
                           contentType: 'application/json; charset=utf-8',
                           type: 'get',
                           data: {notificationIds: selectedRows.join(",") },
                           success: function (response) {
                               if (response.status) {
                                   showSuccessMessage("Notification(s) has been deleted successfully.");
                                   $("#chkAllSolarCompanyNotification").prop('checked',false);
                                   $(".datatableSolarCompanyNotification").dataTable().fnDraw();
                               }
                               else {
                                   if (response.error.toLowerCase() == 'sessiontimeout')
                                       window.location.href = '@Url.Action("Logout", "Account")';
                                   else
                                       showErrorMessage(response.error);
                               }
                           },
                           error: function () {

                               showErrorMessage("Notification has not been deleted.");
                           }
                       });
                }
            }
            else
            {
                if(selectedRows==null || selectedRows.length == 0)
                    alert('Please select any notification to remove.');
            }
        }



        @*function DeleteNotification(NotificationId ){

                    var result = confirm("Are you sure you want to delete this notification ?");
                    if (result) {
                        $.ajax({
                            url: '@Url.Action("DeleteNotification", "JobSetting")',
                            type: "POST",
                            async: false,
                            data: JSON.stringify({ NotificationId: NotificationId }),
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                if (data.success) {
                                    $('#successMsgRegion').show();
                                    $(".datatableSolarCompanyNotification").dataTable().fnDraw();
                                }
                            },
                        });
                    }
                }*@

        function GetAllowAcessLog()
        {
            $("#JobsettingViewLog").modal({ backdrop: 'static', keyboard: false });
            $.ajax({
                url: urlGetAllowAcessLog,
                type: 'GET',
                contentType: 'JSON',
                success: function (result) {
                    $("#AllowForAlluserDiv").empty();
                    if (result.length > 0) {
                        for (var i = 0; i < result.length; i++) {
                            $("#AllowForAlluserDiv").append(' <div style="width: 12px; height: 12px; background-color: rgba(30, 121, 204, 0.21); display: inline-block; border-radius: 6px;"></div><span>'+result[i].HistoryMessage + ' ' + result[i].UserName + ' on ' + result[i].strModifiedDate + '</span><br/>' )
                        }
                    }
                    $("#errorMsgRegionAllowAcess").hide();
                },
                error: function (result) {
                    alert(result);
                }
            });
            //$("#AllowForAlluserDiv").load(, function () {
            //    $("#errorMsgRegionAllowAcess").hide();
            //})
        }

        function RunFailureScheduler() {
            if ($("#txtSchRunDate").val() != null && $("#txtSchRunDate").val() != "") {
                var today = new Date();


                var scheduledate = new Date($("#txtSchRunDate").val());
                scheduledate = addDaysfn(scheduledate, 1);
                scheduledate = moment(scheduledate).format("YYYY-MM-DD");
                if (scheduledate >= (moment(today).format("YYYY-MM-DD"))) {
                    showErrorMessage("Date must be from yesterday backwards");
                    return;
                }
                $.ajax({
                    url: '@Url.Action("RunScheduler", "STCInvoice")',
                    type: 'GET',
                    contentType: 'JSON',
                    data: { scheduleDate: $("#txtSchRunDate").val() },
                    success: function (result) {
                        $("#txtSchRunDate").val(result.LastSyncDate);
                        $("#lblSchedulerRunDate").html(result.LastSyncDate);
                        showSuccessMessage("Process Successfully completed");
                    },
                    error: function (result) {
                        showErrorMessage("Something happend cannot fetch REC Status data.");
                    }
                });
            }
        }
        function addDaysfn(date, days) {
            var result = new Date(date);
            result.setDate(result.getDate() + days);
            return result;
        }
    </script>
}
