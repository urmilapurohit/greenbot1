@model FormBot.Entity.VEEC.VEECSetting
@using FormBot.Helper;
@{
    ViewBag.Title = "Settings";
}
@*@{
    ////Todo
    bool isAddEditVeecScheduling = false;
    bool isDeleteVeecScheduling = false;
    bool isVeecSchedulingView = true;


    if (TempData.ContainsKey(SystemEnums.TempDataKey.RoleMenu.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>)TempData[SystemEnums.TempDataKey.RoleMenu.ToString()]).ForEach(d =>
        {
            if (d.MenuId == (int)SystemEnums.MenuId.JobSchedulingAddEdit) { isAddEditVeecScheduling = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.JobSchedulingDelete) { isDeleteVeecScheduling = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.JobSchedulingView) { isVeecSchedulingView = true; }
        });
    }
}*@

<div id="msgSection">
    @Html.RenderMessages()
</div>


<style type="text/css">
    th.action,
    .table-responsive tr > td:last-child {
        width: 120px;
        text-align: center !important;
    }

    .alignRightTD {
        text-align: right !important;
    }

    .alignLeftTD {
        text-align: left !important;
    }

    .SumoSelect {
        display: block !important;
        width: 100% !important;
    }
</style>

<div class="container-fluid create-job">
    <div class="title formTemplate">
        <h1>CheckList Template</h1>
        <a href="#" id="addTemplate" class="primary pull-right btn icon-btn" title="Add Template"><span class="sprite-img add_ic"></span> Add Template</a>
    </div>
   
    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>

    <ul class="create-job-menu" style="margin-bottom:10px;">
        <li class="active"><a id="aTemplate" href="javascript:void(0)" title="VEEC Setting" style="text-decoration:none;">VEEC Setting</a></li>
       
    </ul>

    <form class="form-block formTemplate" style="margin-top:10px;">
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Name:</label>
                <input type="text" id="txtTemplateName" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>
        <div class="form-group col-xs-12">
            <input type="button" id="btnSearch" value="Search" class="primary search_ic" onclick="SearchTemplate();">
            <div class="default btn icon-btn" onclick="ResetSearchFilters();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnReset" value="Reset" class="">
            </div>
        </div>
    </form>

    <div id="templateList" class="formTemplate">
        <div class="grid_topbar">
            <p class="job_result" id="numRecords"></p>
            <a href="#" onclick="deleteCheckListTemplate()" class="primary pull-right" title="Delete Template">Delete Template</a>
        </div>

        <div class="row">
            <div id="grid" class="col-xs-12">
                <div class="table-responsive">
                    <table id="datatable" class="table table-hover datatableTemplateList">
                        <thead>
                            <tr>
                                <th style="background-image:none !important;"><input type="checkbox" id="chkAll" name="select_all"></th>
                                <th><span>@Html.DisplayName("CheckList Template Name")</span></th>
                                <th style="text-align: right;"><span>@Html.DisplayName("Default")</span></th>
                                <th class="action"><span>@Html.DisplayName("Action")</span></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
<div class="modal fade popupTemplateName modal-center" tabindex="-1" role="dialog" id="popupAddTemplate">
        <div class="modal-dialog">
            <div class="modal-content modal-lg">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title">Template</h4>
                </div>
                <div class="modal-body create-job">
                    <form id="addVEECTemplateForm">
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionAddTemplate" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>

                        <div class="form-box">

                            @Html.HiddenFor(m => m.veecCheckListTemplate.VEECCheckListTemplateId)
                            @Html.HiddenFor(m => m.veecCheckListTemplate.CopyOfCheckListTemplateId)
                            @Html.HiddenFor(m => m.veecCheckListTemplate.DeleteDefaultItemId)
                            @Html.HiddenFor(m => m.veecCheckListTemplate.SolarCompanyId)

                            <div class="clearfix">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.veecCheckListTemplate.VEECCheckListTemplateName, new { @class = "control-label required" })
                                    @Html.TextBoxFor(m => m.veecCheckListTemplate.VEECCheckListTemplateName, new { @class = "form-control", @maxlength = "100" })
                                    @Html.ValidationMessageFor(m => m.veecCheckListTemplate.VEECCheckListTemplateName)
                                </div>
                            </div>
                            @if (ProjectSession.UserTypeId == 1 || ProjectSession.UserTypeId == 3)
                            {
                                <div class="checkbox" style="margin-top:0px !important">
                                    <label>
                                        @Html.CheckBoxFor(m => m.veecCheckListTemplate.IsDefault) Default
                                    </label>
                                </div>
                            }
                        </div>
                        <div class="modal-footer" style="border-top:0px !important;">
                            <button type="button" class="btn primary save_ic" onclick="addTemplate()">Save</button>
                            <button type="button" class="btn default cancel_ic" onclick="clearTemplate()">Clear</button>
                        </div>
                    </form>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    
</div>

    <div class="modal fade popupTemplateName" tabindex="-1" role="dialog" id="popupCheckListTemplate">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                            <img src='@Url.Content("~/images/close-btn.png")' alt="">
                        </button>
                        <h4 class="modal-title templateName">Template</h4>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegionAddEditItem" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionItem" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        @*<form id="checkListTemplateForm"></form>*@
                        <div id="checkListTemplateForm"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade popupCheckListItem" tabindex="-1" role="dialog" id="popupCheckListItem">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title">Check List Item</h4>
                </div>
                <div class="modal-body create-job">
                    <form id="checkListItemForm"></form>
                </div>
            </div>
        </div>
    </div>

@Html.Partial("~/Views/VEECCheckListItem/_VEECCommonCheckListMethod.cshtml")

@section scripts{
    <script src="~/Scripts/jquery.sumoselect.min.js"></script>
    <script src="~/Scripts/set-number.min.js"></script>
    <link href="~/Content/sumoselect.css" rel="stylesheet" />
    <script type="text/javascript">

        var resellerCount = 0, reseller, companies, companyCount = 0;

        $(document).ready(function () {
            $(".veecSchdulingTemplate").hide();
            $.ui.autocomplete.prototype._renderItem = function (ul, item) {
                var re = new RegExp($.trim(this.term.toLowerCase()));
                var t = item.label.replace(re, "<span style='font-weight:600;'>" + $.trim(this.term.toLowerCase()) +
                    "</span>");
                return $("<li style='font-size:14px;'></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + t + "</a>")
                    .appendTo(ul);
            };

            $('#chkAll').on('click', function () {
                var rows = table.rows({ 'search': 'applied' }).nodes();
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
                $('input[type="checkbox"]').each(function(){
                    if($(this).attr('disabled'))
                    {
                        $(this).prop('checked', false);
                    }
                });
            });

            $("#aVeecSchudling").click(function(){
                $(".formTemplate").hide();
                $(".veecSchdulingTemplate").show();
                //$(".formCustomField").show();
                //$(".formDocTemplate").hide();
                //$(".formJobAction").hide();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
            });
            $("#aTemplate").click(function(){
                $(".formTemplate").show();
                $(".veecSchdulingTemplate").hide();
                //$(".formCustomField").show();
                //$(".formDocTemplate").hide();
                //$(".formJobAction").hide();
                $(this).closest('ul').find('.active').removeClass('active');
                $(this).closest('li').addClass('active');
            });

        });

        function editCheckListTemplate(templateId) {
            
            $.ajax(
                   {
                       url: '@Url.Action("GetVEECCheckListTemplateData", "VEECCheckListTemplate")',
                       dataType: 'json',
                       contentType: 'application/json; charset=utf-8',
                       type: 'get',
                       data: { id: templateId},
                       success: function (response) {
                           if (response.data) {

                               $("#veecCheckListTemplate_VEECCheckListTemplateId").val(response.data.VEECCheckListTemplateId);
                               $("#veecCheckListTemplate_VEECCheckListTemplateName").val(response.data.VEECCheckListTemplateName);
                               if(response.data.IsDefault == true)
                                   $("#veecCheckListTemplate_IsDefault").prop("checked",true);
                               else
                                   $("#veecCheckListTemplate_IsDefault").prop("checked",false);

                               $("input[name='JobType'][value='"+response.data.JobType+"']").prop("checked",true);

                               $('#popupAddTemplate').modal({ backdrop: 'static', keyboard: false });
                           }
                           else {
                               showErrorMessage(response.error);
                           }
                       },
                       error: function () {
                           showErrorMessage("CheckList template has not been opened.");
                       }
                   });
        }

        $('.datatableTemplateList').DataTable({
            iDisplayLength: 10,
            lengthMenu:@ProjectConfiguration.GetPageSize,
            language: {
                sLengthMenu: "Page Size: _MENU_"
            },
            columns: [

                { 'data': 'Id',
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        if(full.SolarCompanyId == null)
                        {
                            if(@ProjectSession.UserTypeId == 1 || @ProjectSession.UserTypeId == 3)
                            {
                                return '<input type="checkbox" id='+full.Id+'  >';
                            }
                            else
                            {
                                return '<input type="checkbox" id='+full.Id+' disabled=disabled>';
                            }
                        }
                        else
                        {
                            return '<input type="checkbox" id='+full.Id+'  >';
                        }
                    }
                },

                    { 'data': 'VEECCheckListTemplateName' ,"orderable": true ,
                    "render": function (data, type, full, meta) {
                        
                        if(full.VEECCheckListTemplateName!=null){

                                var editHref ="javascript:editCheckListTemplate('" + full.Id + "')";

                                if(full.SolarCompanyId == null)
                                {
                                    if(@ProjectSession.UserTypeId == 1 || @ProjectSession.UserTypeId == 3)
                                    {
                                        return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.VEECCheckListTemplateName+'</a>'
                                    }
                                    else
                                    {
                                        return '<a href="#" style="text-decoration:none;">'+full.VEECCheckListTemplateName+'</a>'
                                    }
                                }
                                else
                                {
                                    return '<a href="#" onclick="'+editHref+'" style="text-decoration:none;">'+full.VEECCheckListTemplateName+'</a>'
                                }
                            }
                            else{
                                return '';
                            }
                        },
                    },



                         { 'data': 'IsDefault' , "orderable": false , "class" : "alignRightTD" },

                       {
                           'data': 'Id',
                           "render": function (data, type, full, meta) {

                               var editHref ="javascript:OpenCheckListItemPopup('" + full.Id + "')";
                               var imgedit = 'background:url(../Images/edit-icon.png) no-repeat center; text-decoration:none;';
                               var returnHTML =  '<a href="' + editHref + '" class="action edit" style="' + imgedit + '" title="Edit">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                               return returnHTML;
                           },
                           "orderable": false
                       }

            ],

            dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
            initComplete: function (settings, json) {
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");
            },

            bServerSide: true,
            sAjaxSource: '@Url.Action("GetCheckListTemplateList", "VEECCheckListTemplate")',

            "fnDrawCallback": function () {
                chkCount=0;
                $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                $(".paging a.previous").html("&nbsp");
                $(".paging a.next").html("&nbsp");
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");

                if ($(".paging").find("span").length > 1) {
                    $("#datatable_length").show();
                } else if ($(".datatableTemplateList").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                //--------To show display records from total records-------------------
                var table = $('.datatableTemplateList').DataTable();
                var info = table.page.info();

                if(info.recordsTotal==0){
                    document.getElementById("numRecords").innerHTML = '<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b>  Job Part(s) found';
                }
                else{
                    document.getElementById("numRecords").innerHTML = '<b>' + $('.datatableTemplateList >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b>  Job Part(s) found';
                }
                //------------------------------------------------------------------------------------------------------------------------------

                $('[data-toggle="tooltip"]').tooltip();

            },

            "fnServerParams": function (aoData) {

                if('@ProjectSession.UserTypeId' == 1 || '@ProjectSession.UserTypeId' == 3){
                    aoData.push({ "name": "solarCompanyId", "value": $("#hdnsolarCompanyid").val() });
                }

                aoData.push({ "name": "templateName", "value": $("#txtTemplateName").val() });
            }
        });

        var table = $('.datatableTemplateList').DataTable();

        $("#addTemplate").click(function () {
            
            OpenaAddTemplate();
        });

        $.fn.serializeToJson = function () {
            var $form = $(this[0]);

            var items = $form.serializeArray();

            var returnObj = {};
            var nestedObjectNames = [];

            $.each(items, function (i, item) {
                //Split nested objects and assign properties
                //You may want to make this recursive - currently only works one step deep, but that's all I need
                if (item.name.indexOf('.') != -1) {
                    var nameArray = item.name.split('.');
                    if (nestedObjectNames.indexOf(nameArray[0]) < 0) {
                        nestedObjectNames.push(nameArray[0]);
                    }
                    var tempObj = returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] || {};
                    if (!tempObj[nameArray[1]]) {
                        tempObj[nameArray[1]] = item.value;
                    }
                    returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] = tempObj;
                } else if (!returnObj[item.name]) {
                    returnObj[item.name] = item.value;
                }
            });

            return returnObj;
        };

        function OpenCheckListItemPopup(templateId,isTemplateChange) {
            
            $(".alert").hide();
            $("#successMsgRegionAddEditItem").hide();
            $("#errorMsgRegionItem").hide();
            CommonOpenCheckListItemPopup(templateId,true,0,isTemplateChange);
        }

        function OpenaAddTemplate(templateId,itemId) {
            
            CommonOpenaAddTemplate(templateId,itemId);
        }

        function SearchTemplate() {
            $(".datatableTemplateList").dataTable().fnDraw();
        }

        function ResetSearchFilters() {
            $("#txtTemplateName").val('');
            $(".datatableTemplateList").dataTable().fnDraw();
        }

        function deleteCheckListTemplate(templateId) {
            var selectedRows=[];
            $('.datatableTemplateList tbody input[type="checkbox"]').each(function(){
                if($(this).prop('checked')==true){
                    selectedRows.push($(this).attr('id'));
                }
            })
            if(selectedRows!=null && selectedRows.length>0){
                if (confirm('Are you sure you want to delete this record ?')) {
                    $.ajax(
                       {
                           url: '@Url.Action("Delete", "CheckListTemplate")',
                           dataType: 'json',
                           contentType: 'application/json; charset=utf-8',
                           type: 'get',
                           //data: { id: templateId},
                           data: {checkListTemplateIds: JSON.stringify(selectedRows)},
                           success: function (response) {
                               if (response.id && response.id > 0) {
                                   showSuccessMessage("CheckList template has been deleted successfully.");
                                   $("#chkAll").prop('checked',false);
                                   $(".datatableTemplateList").dataTable().fnDraw();
                               }
                               else {
                                   if (response.error.toLowerCase() == 'sessiontimeout')
                                       window.location.href = '@Url.Action("Logout", "Account")';
                                   else
                                       showErrorMessage(response.error);
                               }
                           },
                           error: function () {
                               showErrorMessage("CheckList template has not been deleted.");
                           }
                       });
                }
                else
                {
                    if(selectedRows==null || selectedRows.length == 0)
                        alert('Please select any check list template to remove.');
                }
            };
        }

        function addTemplate() {
            
            if ($("#addVEECTemplateForm").valid()) {
                $("#veecCheckListTemplate_SolarCompanyId").val('');
                @*if(@ProjectSession.UserTypeId == 1 || @ProjectSession.UserTypeId == 3)
                {
                    $("#checkListTemplate_SolarCompanyId").val($("#hdnsolarCompanyid").val());
                }
                else
                {
                    $("#checkListTemplate_SolarCompanyId").val('@ProjectSession.SolarCompanyId');
                }*@
                CommonAddTemplate();
            }
        }

        function showSuccessMessage(message) {
            $(".alert").hide();
            $("#errorMsgRegion").hide();
            $("#successMsgRegion").html(closeButton + message);
            $("#successMsgRegion").show();
        }

        function showErrorMessage(message) {
            $(".alert").hide();
            $("#successMsgRegion").hide();
            $("#errorMsgRegion").html(closeButton + message);
            $("#errorMsgRegion").show();
        }

        function deleteCheckListTemplate(templateId) {
            var selectedRows=[];
            $('.datatableTemplateList tbody input[type="checkbox"]').each(function(){
                if($(this).prop('checked')==true){
                    selectedRows.push($(this).attr('id'));
                }
            })
            if(selectedRows!=null && selectedRows.length>0){
                if (confirm('Are you sure you want to delete this record ?')) {
                    $.ajax(
                       {
                           url: '@Url.Action("Delete", "VEECCheckListTemplate")',
                           dataType: 'json',
                           contentType: 'application/json; charset=utf-8',
                           type: 'get',
                           //data: { id: templateId},
                           data: {checkListTemplateIds: JSON.stringify(selectedRows)},
                           success: function (response) {
                               if (response.id && response.id > 0) {
                                   showSuccessMessage("CheckList template has been deleted successfully.");
                                   $("#chkAll").prop('checked',false);
                                   $(".datatableTemplateList").dataTable().fnDraw();
                               }
                               else {
                                   if (response.error.toLowerCase() == 'sessiontimeout')
                                       window.location.href = '@Url.Action("Logout", "Account")';
                                   else
                                       showErrorMessage(response.error);
                               }
                           },
                           error: function () {
                               showErrorMessage("CheckList template has not been deleted.");
                           }
                       });
                }
                else
                {
                    if(selectedRows==null || selectedRows.length == 0)
                        alert('Please select any check list template to remove.');
                }
            };
        }


    </script>
}
