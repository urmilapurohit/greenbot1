@model FormBot.Entity.FormBotReport
@{
    Layout = null;
}
<div class="form-group">
    <div class="rep_spacer"></div>
    <div class="form-group">
        <label>Chart Types:</label>
        @Html.DropDownListFor(m => m.ChartType, new List<SelectListItem>
                                     {
                                        new SelectListItem{ Text="Combo Bar Chart", Value = "bar" },
                                        new SelectListItem{ Text="Pie Chart", Value = "pie" }
                                     }, new { @id = "drdChartType", @class = "form-control" }
                            )
    </div>
</div>
<div class="form-group">
    <div class="rep_spacer"></div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label">Start Date:</label>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", @readonly = "readonly", @placeholder = "Start", @id = "txtFromDate", @tabindex = "7" })
                    <span class="input-group-addon sprite-img date-picker"></span>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label">End Date:</label>
                <div class="input-group">
                    @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", @readonly = "readonly", @placeholder = "End", @id = "txtToDate", @tabindex = "8" })
                    <span class="input-group-addon sprite-img date-picker"></span>
                </div>
            </div>
        </div>
    </div>
</div>
@if (FormBot.Helper.ProjectSession.UserTypeId != 4)
{
    <div class="rep_spacer"></div>
    <div class="form-group">
        <label class="control-label">Filters:</label>
        <div class="rep-list">
            <ul>
                @if (FormBot.Helper.ProjectSession.UserTypeId == 1)
                {
                    <li><a href="javascript:void(0);" id="ResellerID" onclick="Reseller();">Reseller<span id="cntResellers">0</span></a></li>
                }
                @if (FormBot.Helper.ProjectSession.UserTypeId == 1 || FormBot.Helper.ProjectSession.UserTypeId == 2)
                {
                    <li><a href="javascript:void(0);" id="RAMID" onclick="RAM();">RAM Users<span id="cntRAM">0</span></a></li>
                    <li><a href="javascript:void(0);" id="UserID" onclick="Users();">Solar Company<span id="cntUsers">0</span></a></li>
                }
            </ul>
        </div>
        <label class="control-label">Restriction:</label>
        <ul id="Restrictions" class="control-label">
            @if (FormBot.Helper.ProjectSession.UserTypeId == 1)
            {
                <li>
                    Maximum 1 Reseller can be  selected.
                </li>
            }
            @if (FormBot.Helper.ProjectSession.UserTypeId == 1 || FormBot.Helper.ProjectSession.UserTypeId == 2)
            {
                <li>
                    Maximum 1 Reseller Account Manager can be selected.
                </li>
                <li>
                    Maximum 1 Solar Company can be selected.
                </li>
            }
        </ul>
    </div>
}

<div class="rep-btn">
    <input type="button" onclick="RunReport();" tabindex="18" id="btnJobStatusBarReport" class="primary report_ic" autofocus="" value="Run Report" name="Submit" style="pointer-events: auto; opacity: 1;">
    <div class="default btn icon-btn" onclick="ResetSearchFilters();">
        <span class="sprite-img reset_ic"></span>
        <input type="button" id="btnReset" value="Reset Filters" class="">
    </div>
    </div>

<div class="modal fade" id="popupUsers" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">

                <button type="button" class="close" id="closeUsers">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Solar Company</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="AvailableUsers">0/1</label> Selected
                    </label>
                </div>
                @if (FormBot.Helper.ProjectSession.UserTypeId != 4)
                {
                    <div class="form-border">
                        @Html.Action("_SolarCompany", "FormBotReport")
                    </div>
                }
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="popupReseller" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">
                <button type="button" class="close" id="closeResellers">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Reseller</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="ResellerUsers">0/1</label> Selected
                    </label>
                </div>
                <div class="form-border">
                    @Html.Action("_Reseller", "FormBotReport")
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="popupRAM" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">
                <button type="button" class="close" id="closeRAM">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">RAM Users</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="AvailableRAM">0/1</label> Selected
                    </label>
                </div>
                <div class="form-border">
                    @Html.Action("_RAMView", "FormBotReport")
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var dateFormat = '@FormBot.Helper.ProjectConfiguration.GetDateFormat';
    var dateFormatMoment = '@FormBot.Helper.ProjectConfiguration.GetDateFormat.ToUpper()';
    $(document).ready(function () {
        document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'none';
        $('#btnJobStatusBarReport').css('opacity', '0.5');
        $('#txtFromDate').datepicker({
            format: dateFormat,
            autoclose: true
        }).on('changeDate', function () {
            if ($("#txtToDate").val() != '') {
                var fromDate = new Date(ConvertDateToTick($("#txtFromDate").val(), dateFormat));
                var toDate = new Date(ConvertDateToTick($("#txtToDate").val(), dateFormat));
                if (fromDate > toDate) {
                    $("#txtToDate").val('');
                    document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'none';
                    $('#btnJobStatusBarReport').css('opacity', '0.5');
                }
            }

            var tickStartDate = ConvertDateToTick($("#txtFromDate").val(), dateFormat);
            tDate = moment(tickStartDate).format("MM/DD/YYYY");
            if ($('#txtToDate').data('datepicker')) {
                $('#txtToDate').data('datepicker').setStartDate(new Date(tDate));
            }
        });
        $("#txtToDate").datepicker({
            format: dateFormat,
            autoclose: true
        });
        $('#txtFromDate').val('');
        $('#txtToDate').val('');
    });

    $("#txtToDate").change(function () {
        if ($("#txtToDate").val() != '') {
            //if ($("#hdnUsers").length > 0 || $("#hdnResellers").length > 0 || $('#hdnRAM').length > 0) {
            if ($("#hdnUsers").val() != "" || $("#hdnResellers").val() != "" || $('#hdnRAM').val() != "") {
                document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'auto';
                $('#btnJobStatusBarReport').css('opacity', '1');
            }
            //}
        }
    });

    function Users() {
        $('#popupUsers').modal({ backdrop: 'static', keyboard: false });
        $('#SCABit').val('1');
        $('#AvailableUsers').html($('#LstUsersAssignedUser option').length + '/' + $('#SCABit').val());
        document.getElementById('ResellerID').style.pointerEvents = 'auto';
        $('#ResellerID').css('opacity', '1');
    }

    function RAM() {
        $('#popupRAM').modal({ backdrop: 'static', keyboard: false });
        $('#RAMBit').val('1');
        $('#AvailableRAM').html($('#LstRAMAssignedUser option').length + '/' + $('#RAMBit').val());
    }

    function Reseller() {
        $('#popupReseller').modal({ backdrop: 'static', keyboard: false });
        $('#ResellerBit').val('1');
        $('#ResellerUsers').html($('#LstResellerAssignedUser option').length + '/' + $('#ResellerBit').val());
        document.getElementById('UserID').style.pointerEvents = 'auto';
        $('#UserID').css('opacity', '1');
    }

    function RunReport() {
        var data = JSON.stringify($('#FormBotReportDetails').serializeToJson());
        $.ajax({
            url: '@Url.Action("GetRECFailureReasonsReportsList", "FormBotReport")',
            type: "POST",
            dataType: "json",
            data: data,
            async: true,
            processData: false,
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $('#divGrid').show();
                BindGrid(result.lstRecord);
                BindChart(result.lstChartRecord);
            },
            error: function (e) {
                console.log(e);
            }
        });
        return false;
    }

    $.fn.serializeToJson = function () {
        var $form = $(this[0]);

        var items = $form.serializeArray();
        var returnObj = {};
        var nestedObjectNames = [];

        $.each(items, function (i, item) {
            //Split nested objects and assign properties
            //You may want to make this recursive - currently only works one step deep, but that's all I need
            if (item.name.indexOf('.') != -1) {
                var nameArray = item.name.split('.');
                if (nestedObjectNames.indexOf(nameArray[0]) < 0) {
                    nestedObjectNames.push(nameArray[0]);
                }
                var tempObj = returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] || {};
                if (!tempObj[nameArray[1]]) {
                    tempObj[nameArray[1]] = item.value;
                }
                returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] = tempObj;
            } else if (!returnObj[item.name]) {
                returnObj[item.name] = item.value;
            }
        });

        return returnObj;
    };

    function BindGrid(result) {
        $('#chartbox').hide();
        if ($('#datatable')) {
            var table = $('#datatable').DataTable();
            table.destroy();
        }
        var tableHeaders = '';
        var tableFooters = '';
        var tableColumns = [];

        tableColumns.push("Reseller Name");
        tableColumns.push("Company Name");
        tableColumns.push("Account Manager");
        tableColumns.push("Status");
        tableColumns.push("Ref Number");
        tableFooters = '<th></th><th></th><th></th><th style="text-align:right;"></th><th></th>';

        $.each(tableColumns, function (i, val) {
            tableHeaders += "<th><span>" + val + "</span></th>";
        });
        $("#displayTable").empty();
        $("#displayTable").append('<table id="datatable" class="table table-hover"><thead><tr>' + tableHeaders + '</tr></thead><tfoot><tr>' + tableFooters + '</tr></tfoot></table>');

        columnsArray = [
             {
                 'data': 'ResellerName',
                 "orderable": true
             },
            {
                'data': 'CompanyName',
                "orderable": true
            },
             {
                 'data': 'Account_Manager',
                 "orderable": true
             },
            {
                'data': 'Status',
                "orderable": true
            },
            {
                'data': 'RefNumber',
                "orderable": true
            },
        ];

        $('#datatable').DataTable({
            data: result,
            paging: false,
            searching: false,
            retrieve: true,
            columns: columnsArray,
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'excel',
                    footer: true
                }
            ],
            order: [[0, "asc"]],
            footerCallback: function (row, data, start, end, display) {
                if (data.toString() != "") {
                    var api = this.api(), data;
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i * 1 :
                            typeof i === 'number' ?
                            i : 0;
                    };
                    NewTotal = api
                       .column(1)
                       .data()
                       .reduce(function (a, b) {
                           return intVal(a) + intVal(b);
                       }, 0);
                    // Update footer
                    $(api.column(1).footer()).html(
                        NewTotal
                    );
                    var table = $('#datatable').DataTable();
                    var info = table.page.info();                    
                    $(api.column(4).footer()).html(
                       'Total: ' + info.recordsTotal
                    );

                } else {
                    $('#datatable tfoot').remove();
                }
            }
        });
        $('#datatable_length').hide();
        $('#datatable_info').hide();
        //$('#datatable tr th').attr('class', 'sorting_disabled table-header');
        //$('#datatable tbody tr td:nth-child(2)').attr('style', 'text-align:right;');

        //$('#datatable thead tr th:nth-child(2)').attr('style', 'text-align:right;');

        //$('#datatable tfoot tr th:nth-child(2)').attr('style', 'text-align:right;');

        $('#datatable th:first').attr('style', 'width:15% !important;');
        $('#datatable th:nth-child(2)').attr('style', 'width:15% !important;');
        $('#datatable th:nth-child(3)').attr('style', 'width:15% !important;');
        $('#datatable th:nth-child(4)').attr('style', 'width:35% !important;');
        $('#datatable th:nth-child(5)').attr('style', 'width:35% !important;');
        $('.buttons-excel').addClass('primary pull-right');
        $('.buttons-excel').html('<span>Export to Excel</span>');
    }
    function BindChart(resultData) {
        var chartType = $('#drdChartType').val();
        var groupedData = {};
        var xAxis = ['xAxis'];
        var data1 = ['Amount of Failure'];
        var result = [];
        //var dataGroup = ['PreApprovals', 'Connections', 'STCSubmission', 'TotalJob'];

        for (var i = 0; i < resultData.length; i++) {
            var item = resultData[i];
            xAxis.push(item.Status);
            data1.push(item.AmountOfFailure);
        }        

        result.push(xAxis);
        result.push(data1);

        $('#chartbox').css('display', 'block');
        chartdiv = c3.generate({
            data: {
                columns: result,
                type: chartType,
                x: 'xAxis'
                //, groups: [dataGroup]
            },
            axis: {
                x: {
                    tick: {
                        multiline: true,
                    },
                    type: 'category',
                    categories: xAxis
                },

            },
            bar: {
                width: {
                    ratio: 0.3,
                    max: 30
                },
            },
            tooltip: {
                format: {
                    value: function (value, ratio, id, index) {
                        if (chartType == 'pie') {
                            return value + ' (' + (ratio * 100).toFixed(2) + '%)';
                        }
                        else
                            return value;
                    }
                }
            }
        });
    }
    function ResetSearchFilters() {
        $('#txtFromDate').val('');
        $('#txtToDate').val('');
        $('#drdChartType').val('bar');
        $('#cntUsers').html('0');
        $('#cntResellers').html('0');
        $("#hdnUsers").val('');
        $('#hdnResellers').val('');
        $('#hdnRAM').val('');
        $('#cntRAM').html('0');

        $('#LstUsersAssignedUser option').each(function () {
            $(this).remove().appendTo("#LstUsers");
        });
        $('#LstResellerAssignedUser option').each(function () {
            $(this).remove().appendTo("#LstReseller");
        });

        $('#LstRAMAssignedUser option').each(function () {
            $(this).remove().appendTo("#LstRAM");
        });

        document.getElementById('ResellerID').style.pointerEvents = 'auto';
        $('#ResellerID').css('opacity', '1');

        document.getElementById('UserID').style.pointerEvents = 'auto';
        $('#UserID').css('opacity', '1');


        document.getElementById('RAMID').style.pointerEvents = 'auto';
        $('#RAMID').css('opacity', '1');

        document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'none';
        $('#btnJobStatusBarReport').css('opacity', '0.5');
    }
</script>
<style>
    .table-header {
        border-bottom: 2px solid #ddd !important;
        color: #808080 !important;
        background-color: #f5f5f5;
    }

    #datatable {
        border: 3px solid #e4e4e4 !important;
    }

        #datatable thead tr {
            border: 3px solid #e4e4e4;
        }

        #datatable th {
            color: #383838 !important;
            font-family: "OpenSansSemibold" !important;
            font-size: 13px !important;
            background: #f8f8f8 none repeat scroll 0 0 !important;
            padding: 10px 9px !important;
        }

    .dt-button {
        margin-bottom: 5px;
    }

    /*.find_job_leftpanel.active {
        margin-left: -379px !important;
    }

    .jtoggle.active {
        right: -60px !important;
    }*/
</style>
