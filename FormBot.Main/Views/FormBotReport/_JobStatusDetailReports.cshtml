@model FormBot.Entity.FormBotReport
@{
    Layout = null;
}
<div class="form-group">
    <div class="form-group">
        <p class="rep-text"><strong>Description: </strong> <span id="Description">This report Will show jobs statuses count of pre-approvals, connections and STC submissions for users selected.</span>
    </div>
    <div class="rep_spacer"></div>
    <div class="form-group">
        <label>Filters For Deleted Jobs:</label>
        @Html.DropDownListFor(m => m.DeletedFilter, new List<SelectListItem>
                                     {
                                         new SelectListItem{ Text="Exclude", Value = "2" },
                                        new SelectListItem{ Text="Include", Value = "1" },
                                        new SelectListItem{ Text="Show Only Deleted Job", Value = "3" },
                                     }, new { @id = "drdDelete", @class = "form-control" }
                            )
    </div>
    <div class="form-group">
        <label>Chart Types:</label>
        @Html.DropDownListFor(m => m.DeletedFilter, new List<SelectListItem>
                                     {
                                        new SelectListItem{ Text="Bar Chart", Value = "bar" },
                                        new SelectListItem{ Text="Combo Bar Chart", Value = "ComboBar" }
                                     }, new { @id = "drdChartType", @class = "form-control" }
                            )
    </div>
</div>
<br />

<div class="rep_spacer"></div>
<div class="form-group">
    <label class="control-label">Date Range:</label>
    <div class="btn-group btn-group-justified" role="group" id="DateGroups">
        <div class="btn-group" role="group">
            <button onclick="setLBD();" type="button" class="btn btn-default" tabindex="2">LBD</button>
        </div>
        <div class="btn-group" role="group">
            <button onclick="setMTD();" type="button" class="btn primary" tabindex="3" id="btnMTD">MTD</button>
        </div>
        <div class="btn-group" role="group">
            <button class="btn btn-default" type="button" onclick="setPM();" tabindex="4">PM</button>
        </div>
        <div class="btn-group" role="group">
            <button class="btn btn-default" type="button" onclick="setCFY();" tabindex="5">CFY</button>
        </div>
        <div class="btn-group" role="group">
            <button class="btn btn-default" type="button" onclick="set12M();" tabindex="6">12M</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            <label class="control-label">Start Date:</label>
            <div class="input-group">
                @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", @readonly = "readonly", @placeholder = "Start", @id = "txtFromDate", @tabindex = "7" })
                <span class="input-group-addon sprite-img date-picker"></span>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            <label class="control-label">End Date:</label>
            <div class="input-group">
                @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", @readonly = "readonly", @placeholder = "End", @id = "txtToDate", @tabindex = "8" })
                <span class="input-group-addon sprite-img date-picker"></span>
            </div>
        </div>
    </div>
</div>
<div class="form-group">
    <label class="control-label">Filters:</label>
    <div class="rep-list">
        <ul>
            @if (FormBot.Helper.ProjectSession.UserTypeId == 1)
            {
                <li><a href="javascript:void(0);" id="ResellerID" onclick="Reseller();">Reseller<span id="cntResellers">0</span></a></li>
            }
            @if (FormBot.Helper.ProjectSession.UserTypeId == 1 || FormBot.Helper.ProjectSession.UserTypeId == 2)
            {
                <li><a href="javascript:void(0);" id="UserID" onclick="Users();">Solar Company<span id="cntUsers">0</span></a></li>
            }
            @*<li><a href="javascript:void(0);" id="PreapprovalID" onclick="Preapprovals();">Preapprovals<span id="cntPreapprovals">0</span></a></li>
                <li><a href="javascript:void(0);" id="ConnectionID" onclick="Connections();">Connections<span id="cntConnections">0</span></a></li>
                <li><a href="javascript:void(0);" id="STCsubmissionID" onclick="STCsubmission();">STC submission<span id="cntSTCSubmissions">0</span></a></li>*@
        </ul>
    </div>
    @if (FormBot.Helper.ProjectSession.UserTypeId == 1)
    {
        <label class="control-label">Restriction:</label>
        <ul id="Restrictions" class="control-label">
            <li>
                Minimum 1 Reseller or Solar Company must be selected.
            </li>
        </ul>
    }
    else if (FormBot.Helper.ProjectSession.UserTypeId == 2)
    {
        <label class="control-label">Restriction:</label>
        <ul id="Restrictions" class="control-label">
            <li>
                Minimum 1 Solar Company must be selected.
            </li>
        </ul>
    }
</div>
<div class="rep-btn">
    <input type="button" onclick="RunReport();" tabindex="18" id="btnJobStatusBarReport" class="primary report_ic" autofocus="" value="Run Report" name="Submit" style="pointer-events: auto; opacity: 1;">
    <div class="default btn icon-btn" onclick="ResetSearchFilters();">
        <span class="sprite-img reset_ic"></span>
        <input type="button" id="btnReset" value="Reset Filters" class="">
    </div>
    </div>

<div class="modal fade" id="popupReseller" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">
                <button type="button" class="close" id="closeResellers">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Reseller</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="ResellerUsers">0</label> Selected
                    </label>
                </div>
                <div class="form-border">
                    @Html.Action("_Reseller", "FormBotReport")
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popupUsers" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">

                <button type="button" class="close" id="closeUsers">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Solar Company</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="AvailableUsers">0</label> Selected
                    </label>
                </div>
                <div class="form-border" id="divSolarCompanyies">
                    @*@Html.Action("_SolarCompany", "FormBotReport")*@
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popupPreapproval" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">

                <button type="button" class="close" id="closePreapproval">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Preapprovals Status</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="AvailablePreapprovals">0</label> Selected
                    </label>
                </div>
                <div class="form-border">
                    @Html.Action("_Preapproval", "FormBotReport")
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popupConnection" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">

                <button type="button" class="close" id="closeConnection">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Connection Status</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="AvailableConnection">0</label> Selected
                    </label>
                </div>
                <div class="form-border">
                    @Html.Action("_Connection", "FormBotReport")
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popupStcSubmission" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content" style="margin:50px;">
            <div class="modal-header ">

                <button type="button" class="close" id="closeStcSubmission">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">STC Submission Status</h4>
            </div>
            <div class="modal-body">
                <div class="col-sm-12" style="text-align:center">
                    <label class="control-label">
                        Available <label class="control-label" id="AvailableStcSubmission">0</label> Selected
                    </label>
                </div>
                <div class="form-border">
                    @Html.Action("_STCSubmission", "FormBotReport", new { report = "JobStatusBarDetailsReport" })
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var dateFormat = '@FormBot.Helper.ProjectConfiguration.GetDateFormat';
    var dateFormatMoment = '@FormBot.Helper.ProjectConfiguration.GetDateFormat.ToUpper()';
    $(document).ready(function () {
        $('#txtFromDate').datepicker({
            format: dateFormat,
            autoclose: true
        }).on('changeDate', function () {
            if ($("#txtToDate").val() != '') {
                var fromDate = new Date(ConvertDateToTick($("#txtFromDate").val(), dateFormat));
                var toDate = new Date(ConvertDateToTick($("#txtToDate").val(), dateFormat));
                if (fromDate > toDate) {
                    $("#txtToDate").val('');
                }
            }
            var tickStartDate = ConvertDateToTick($("#txtFromDate").val(), dateFormat);
            tDate = moment(tickStartDate).format("MM/DD/YYYY");
            if ($('#txtToDate').data('datepicker')) {
                $('#txtToDate').data('datepicker').setStartDate(new Date(tDate));
            }
        });
        $("#txtToDate").datepicker({
            format: dateFormat,
            autoclose: true
        });
        setMTD();

        if ($('#LstUsersAssignedUser option').length == 0) {
            document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'none';
            $('#btnJobStatusBarReport').css('opacity', '0.5');
        }
        else {
            document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'auto';
            $('#btnJobStatusBarReport').css('opacity', '1');
        }

        if ('@FormBot.Helper.ProjectSession.UserTypeId' == '4') {
            document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'auto';
            $('#btnJobStatusBarReport').css('opacity', '1');
        }
    });

    function Reseller() {
        $('#popupReseller').modal({ backdrop: 'static', keyboard: false });
        $('#ResellerBit').val('0');
        $('#ResellerUsers').html($('#LstResellerAssignedUser option').length);

        //if($("#UserID").length >0)
        //{
        //    document.getElementById('UserID').style.pointerEvents = 'none';
        //    $('#UserID').css('opacity', '0.5');
        //}
    }
    function Users() {
        //$('#popupUsers').modal({ backdrop: 'static', keyboard: false });
        //$('#AvailableUsers').html($('#LstUsersAssignedUser option').length);
        //$('#SCABit').val('0');

        //if($("#ResellerID").length>0)
        //{
        //    document.getElementById('ResellerID').style.pointerEvents = 'none';
        //    $('#ResellerID').css('opacity', '0.5');
        //}

        var url = '@Url.Action("_SolarCompany", "FormBotReport")';
        url += '?hdnResellers=' + $("#hdnResellers").val();
        var assignedUsers = $("#hdnUsers").val();

        $.ajaxSetup({ cache: false });
        $('#divSolarCompanyies').load(url, function () {
            $('#popupUsers').modal({ backdrop: 'static', keyboard: false });
            $('#AvailableUsers').html($('#LstUsersAssignedUser option').length + '/' + $('#SCABit').val());
            $('#SCABit').val('0');
            SetSelectedSolarCompanies(assignedUsers);
            //document.getElementById('ResellerID').style.pointerEvents = 'none';
            //$('#ResellerID').css('opacity', '0.5');
        });
    }

    function SetSelectedSolarCompanies(assignedUsers) {
        if (assignedUsers != "" && assignedUsers != null) {
            var array = assignedUsers.split(',');
            for (var i = 0; i < array.length; i++) {
                if (array[i].length > 0) {
                    $('#LstUsers option[value=' + array[i] + ']').attr("selected", true);
                }
            }
            $("#btnLtoR_SCA").click();
        }
    }

    function Preapprovals() {
        $('#popupPreapproval').modal({ backdrop: 'static', keyboard: false });
        $('#AvailablePreapprovals').html($('#LstPreapprovalAssigned option').length);
        $('#PreBit').val('0');
    }
    function Connections() {
        $('#popupConnection').modal({ backdrop: 'static', keyboard: false });
        $('#AvailableConnection').html($('#LstConnectionAssigned option').length);
        $('#CONBit').val('0');
    }
    function STCsubmission() {
        $('#popupStcSubmission').modal({ backdrop: 'static', keyboard: false });
        $('#AvailableStcSubmission').html($('#LstAvailableStcSubmissionAssigned option').length);
        $('#STCBit').val('0');
    }

    function setMTD() {
        removeStartDate();

        var d = new Date();
        d.setDate(d.getDate() - (d.getDate() - 1));

        var d1 = new Date();
        d1.setDate(d1.getDate() - 1);

        var tickStartDate = Date.parse(d);
        fDate = moment(tickStartDate).format(dateFormatMoment);
        var tickEndDate = Date.parse(d1);
        tDate = moment(tickEndDate).format(dateFormatMoment);
        $("#txtFromDate").val(fDate);
        $("#txtToDate").val(tDate);
        $("#txtFromDate").datepicker("update", fDate);
        $("#txtToDate").datepicker("update", tDate);
    }

    function setPM() {
        removeStartDate();

        var d = new Date();
        d.setDate(1);
        d.setMonth(d.getMonth() - 1);

        var d1 = new Date();
        d1.setDate(d1.getDate() - (d1.getDate()));

        var tickStartDate = Date.parse(d);
        fDate = moment(tickStartDate).format(dateFormatMoment);
        var tickEndDate = Date.parse(d1);
        tDate = moment(tickEndDate).format(dateFormatMoment);
        $("#txtFromDate").val(fDate);
        $("#txtToDate").val(tDate);
        $("#txtFromDate").datepicker("update", fDate);
        $("#txtToDate").datepicker("update", tDate);
    }

    function setCFY() {
        removeStartDate();

        var d2 = new Date();
        var d = new Date(d2.getFullYear(), d2.getMonth(), "1");
        d.setDate(1);

        if (d2.getMonth() < 7) {
            d.setYear(d.getFullYear() - 1);
            d.setMonth(6);
        } else {
            d.setMonth(6);
        }
        var d1 = new Date();
        d1.setDate(d1.getDate() - 1);

        var tickStartDate = Date.parse(d);
        fDate = moment(tickStartDate).format(dateFormatMoment);
        var tickEndDate = Date.parse(d1);
        tDate = moment(tickEndDate).format(dateFormatMoment);
        $("#txtFromDate").val(fDate);
        $("#txtToDate").val(tDate);
        $("#txtFromDate").datepicker("update", fDate);
        $("#txtToDate").datepicker("update", tDate);
    }

    function set12M() {
        removeStartDate();

        var d = new Date();
        d.setYear(d.getFullYear() - 1);
        d.setDate(d.getDate() - 1);

        var d1 = new Date();
        d1.setDate(d1.getDate() - 1);

        var tickStartDate = Date.parse(d);
        fDate = moment(tickStartDate).format(dateFormatMoment);
        var tickEndDate = Date.parse(d1);
        tDate = moment(tickEndDate).format(dateFormatMoment);
        $("#txtFromDate").val(fDate);
        $("#txtToDate").val(tDate);
        $("#txtFromDate").datepicker("update", fDate);
        $("#txtToDate").datepicker("update", tDate);
    }

    function removeStartDate() {
        var d = new Date();
        d.setDate(d.getDate() - 730);
        $('#txtToDate').data('datepicker').setStartDate(d);
    }

    function setLBD() {
        removeStartDate();

        var d = new Date();
        d.setDate(d.getDate() - 1);

        var tickStartDate = Date.parse(d);
        fDate = moment(tickStartDate).format(dateFormatMoment);

        $("#txtFromDate").val(fDate);
        $("#txtFromDate").datepicker("update", fDate);
        $("#txtToDate").val(fDate);
        $("#txtToDate").datepicker("update", fDate);
    }
    $("#DateGroups").on("click", "button", function () {
        $('#DateGroups').each(function () {
            $(this).find('button').each(function () {
                $(this).removeClass("primary");
                $(this).addClass("btn-default");
            });
        });

        $(this).addClass("primary");
        $(this).removeClass("btn-default");
    });
    function RunReport() {
        // disable this preapproval connection and stcsubmission selection list and pass all statuses for each type
        $("#hdnPreapproval").val("1,2,3,4,5");
        $("#hdnConnection").val("6,7,8,9");
        $("#hdnSTCSubmission").val("10,11,12,13,14,15,16,17,18,19,20,21,22");
        var data = JSON.stringify($('#FormBotReportDetails').serializeToJson());
        $.ajax({
            url: '@Url.Action("GetJobStatusDetailReportsList", "FormBotReport")',
            type: "POST",
            dataType: "json",
            data: data,
            async: true,
            processData: false,
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $('#divGrid').show();
                BindGrid(result.lstJobDetailsRecord);
                BindChart(result.lstJobDetailsRecord);
            },
            error: function (e) {
                console.log(e);
            }
        });
        return false;
    }

    $.fn.serializeToJson = function () {
        var $form = $(this[0]);

        var items = $form.serializeArray();
        var returnObj = {};
        var nestedObjectNames = [];

        $.each(items, function (i, item) {
            //Split nested objects and assign properties
            //You may want to make this recursive - currently only works one step deep, but that's all I need
            if (item.name.indexOf('.') != -1) {
                var nameArray = item.name.split('.');
                if (nestedObjectNames.indexOf(nameArray[0]) < 0) {
                    nestedObjectNames.push(nameArray[0]);
                }
                var tempObj = returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] || {};
                if (!tempObj[nameArray[1]]) {
                    tempObj[nameArray[1]] = item.value;
                }
                returnObj[nestedObjectNames[nestedObjectNames.indexOf(nameArray[0])]] = tempObj;
            } else if (!returnObj[item.name]) {
                returnObj[item.name] = item.value;
            }
        });

        return returnObj;
    };

    function BindGrid(result) {
        if ($('#datatable')) {
            var table = $('#datatable').DataTable();
            table.destroy();
        }
        var tableHeaders = '';
        var tableFooters = '';
        var tableColumns = [];
        //report 6
        //if ($('#ReportID').val() == 2)
        if ($('#LstUsersAssignedUser option').length == 0) {
            tableColumns.push("Reseller");
            tableColumns.push("Solar Company");
            //tableColumns.push("Reference - Owner Name");
            //tableColumns.push("Creation Date");
            tableColumns.push("Preapprovals");
            tableColumns.push("Connections");
            tableColumns.push("STC Submission");
            //tableFooters = '<th style="text-align:right;"></th><th></th><th></th><th></th><th></th><th></th><th></th>';
            tableFooters = '';
        }
        else {
            tableColumns.push("Reseller");
            tableColumns.push("Solar Company");
            //tableColumns.push("Reference - Owner Name");
            //tableColumns.push("Creation Date");
            tableColumns.push("Preapprovals");
            tableColumns.push("Connections");
            tableColumns.push("STC Submission");
            //tableFooters = '<th style="text-align:right;"></th><th></th><th></th><th></th><th></th><th></th><th></th>';
            tableFooters = '';
        }
        $.each(tableColumns, function (i, val) {
            tableHeaders += "<th><span>" + val + "</span></th>";
        });
        $("#displayTable").empty();
        //$("#displayTable").append('<table id="datatable" class="table table-hover"><thead><tr>' + tableHeaders + '</tr></thead><tfoot><tr>' + tableFooters + '</tr></tfoot></table>');
        $("#displayTable").append('<table id="datatable" class="table table-hover"><thead><tr>' + tableHeaders + '</tr></thead></table>');

        getColumn($('#LstUsersAssignedUser option').length);

        $('#datatable').DataTable({
            data: result,
            paging: false,
            searching: false,
            retrieve: true,
            columns: [
               {
                   'data': 'ResellerName',
                   "orderable": true
               },
               {
                   'data': 'CompanyName',
                   "orderable": true
               },
               @*{
                   'data': 'Owner_Name',
                   "orderable": true,
                   "render": function (data, type, full, meta) {

                       if (full.Owner_Name != null) {
                           var url = '@Url.Action("Index", "Job")' + "/" + full.ID;
                           return '<a href="' + url + '" style="text-decoration:none;">' + full.Owner_Name + '</a>'
                       }
                       else {
                           return '';
                       }
                   },
               },
               {
                   'data': 'creationDate',
                   "orderable": true
               },*@
               {
                   'data': 'PreapprovalStatus',
                   "orderable": true
               },
               {
                   'data': 'ConnectionStatus',
                   "orderable": true
               },
               {
                   'data': 'STCSubmissioinStatus',
                   "orderable": true
               }
            ],
            dom: 'Bfrtip',
            //buttons: ['excel'],
            buttons: [
                {
                    extend: 'excel',
                    footer: true
                }
            ],
            order: [[0, "asc"]],
            footerCallback: function (row, data, start, end, display) {
                if (data.toString() != "") {
                    var api = this.api(), data;
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i * 1 :
                            typeof i === 'number' ?
                            i : 0;
                    };
                }
            }
        });

        $('#datatable th:first').attr('style', 'width:20% !important;');
        $('#datatable thead tr th:nth-child(2)').attr('style', 'width:20% !important;');
        $('#datatable thead tr th:nth-child(3)').attr('style', 'width:20% !important;');

        $('#datatable_length').hide();
        $('#datatable_info').hide();

        //$('#datatable tr th').attr('class', 'sorting_disabled table-header');
        $('.buttons-excel').addClass('primary pull-right');
        $('.buttons-excel').html('<span>Export to Excel</span>');
    }
    function getColumn(id) {

        columnsArray = [
           {
               'data': 'ResellerName',
               "orderable": true
           },
           {
               'data': 'CompanyName',
               "orderable": true
           },
           //{
           //    'data': 'Owner_Name',
           //    "orderable": true
           //},
           //{
           //    'data': 'creationDate',
           //    "orderable": true
           //},
           {
               'data': 'PreapprovalStatus',
               "orderable": true
           },
           {
               'data': 'ConnectionStatus',
               "orderable": true
           },
           {
               'data': 'STCSubmissioinStatus',
               "orderable": true
           }
        ];
    }

    function ResetSearchFilters() {
        $('#cntUsers').html('0');
        $('#cntResellers').html('0');
        $('#cntPreapprovals').html('0');
        $('#cntConnections').html('0');
        $('#cntSTCSubmissions').html('0');
        $("#hdnUsers").val('');
        $('#hdnResellers').val('');
        $("#hdnPreapproval").val('');
        $('#hdnConnection').val('');
        $('#hdnSTCSubmission').val('');
        $('#drdDelete').val('1');
        $('#drdChartType').val('bar');

        $('#LstUsersAssignedUser option').each(function () {
            $(this).remove().appendTo("#LstUsers");
        });
        $('#LstResellerAssignedUser option').each(function () {
            $(this).remove().appendTo("#LstReseller");
        });
        $('#LstPreapprovalAssigned option').each(function () {
            $(this).remove().appendTo("#LstPreapproval");
        });
        $('#LstConnectionAssigned option').each(function () {
            $(this).remove().appendTo("#LstConnection");
        });
        $('#LstSTCSubmissionAssigned option').each(function () {
            $(this).remove().appendTo("#LstSTCSubmission");
        });

        setMTD();
        $('#DateGroups').each(function () {
            $(this).find('button').each(function () {
                $(this).removeClass("primary");
                $(this).addClass("btn-default");
            });
        });

        $('#btnMTD').addClass("primary");
        $('#btnMTD').removeClass("btn-default");

        if ($("#ResellerID").length > 0) {
            document.getElementById('ResellerID').style.pointerEvents = 'auto';
            $('#ResellerID').css('opacity', '1');
        }
        if ($("#UserID").length > 0) {
            document.getElementById('UserID').style.pointerEvents = 'auto';
            $('#UserID').css('opacity', '1');
        }

        document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'auto';
        $('#btnJobStatusBarReport').css('opacity', '1');
        if ($('#minSCA').val() > 0 && $('#LstUsersAssignedUser option').length == 0) {
            document.getElementById('btnJobStatusBarReport').style.pointerEvents = 'none';
            $('#btnJobStatusBarReport').css('opacity', '0.5');
        }
    }

    //function disableSC() {
    //    //disable solar company button
    //    if ($('#UserID').length > 0) {
    //        if ($('#LstResellerAssignedUser option').length > 0) {
    //            document.getElementById('UserID').style.pointerEvents = 'none';
    //            $('#UserID').css('opacity', '0.5');
    //        }
    //        else {
    //            document.getElementById('UserID').style.pointerEvents = 'auto';
    //            $('#UserID').css('opacity', '1');
    //        }
    //    }
    //}

    //function disableReseller() {
    //    //disable solar company button
    //    if ($('#ResellerID').length > 0) {
    //        if ($('#LstUsersAssignedUser option').length > 0) {
    //            document.getElementById('ResellerID').style.pointerEvents = 'none';
    //            $('#ResellerID').css('opacity', '0.5');
    //        }
    //        else {
    //            document.getElementById('ResellerID').style.pointerEvents = 'auto';
    //            $('#ResellerID').css('opacity', '1');
    //        }
    //    }
    //}
    //charts
    function BindChart(resultData) {
        //var chartType = $('#drdChartType').val();
        var chartType = 'bar';
        var groupedData = {};
        var xAxis = ['xAxis'];
        var data1 = ['PreApprovals'];
        var data2 = ['Connections'];
        var data3 = ['STC Submission'];
        var data4 = ['TotalJob'];
        var result = [];
        var dataGroup = [];

        if ($('#drdChartType').val() == 'ComboBar') {
            dataGroup = ['PreApprovals', 'Connections', 'STCSubmission'];
        }
        //var dataGroup = ['PreApprovals', 'Connections', 'STCSubmission', 'TotalJob'];
        if ($('#LstUsersAssignedUser option').length == 0) {
            for (var i = 0; i < resultData.length; i++) {
                var item = resultData[i];
                var xax = item.CompanyName;
                //xAxis.push(item.CompanyName);
                //data1.push(item.count_PreApprovals);
                //data2.push(item.count_Connections);
                //data3.push(item.count_STC_Submission);
                //data4.push(item.TotalJob);
                xAxis.push(xax);
                data1.push(item.PreApproval);
                data2.push(item.Connection);
                data3.push(item.STCsubmission);
                data4.push(item.TotalJob);
            }
        }
        else {
            for (var i = 0; i < resultData.length; i++) {
                var item = resultData[i];
                var xax = item.CompanyName;
                //xAxis.push(item.ResellerName);
                //data1.push(item.count_PreApprovals);
                //data2.push(item.count_Connections);
                //data3.push(item.count_STC_Submission);
                xAxis.push(xax);
                data1.push(item.PreApproval);
                data2.push(item.Connection);
                data3.push(item.STCsubmission);
                data4.push(item.TotalJob);
                //data4.push(item.TotalJob);
            }
        }
        result.push(xAxis);
        result.push(data1);
        result.push(data2);
        result.push(data3);
        result.push(data4);

        $('#chartbox').css('display', 'block');
        chartdiv = c3.generate({
            data: {
                columns: result,
                type: chartType,
                x: 'xAxis'
                , groups: [dataGroup]
            },
            axis: {
                x: {
                    type: 'category',
                    categories: xAxis
                }
            },
            bar: {
                width: {
                    ratio: 0.3,
                    max: 30
                },
            },
            tooltip: {
                format: {
                    value: function (value, ratio, id, index) {
                        if (chartType == 'pie') {
                            return value + ' (' + (ratio * 100).toFixed(2) + '%)';
                        }
                        else
                            return value;
                    }
                }
            }
        });
    }
</script>
<style>
    .table-header {
        border-bottom: 2px solid #ddd !important;
        color: #808080 !important;
        background-color: #f5f5f5;
    }

    #datatable {
        border: 3px solid #e4e4e4 !important;
    }

        #datatable thead tr {
            border: 3px solid #e4e4e4;
        }

        #datatable th {
            color: #383838 !important;
            font-family: "OpenSansSemibold" !important;
            font-size: 13px !important;
            background: #f8f8f8 none repeat scroll 0 0 !important;
            padding: 10px 9px !important;
        }

    .dt-button {
        margin-bottom: 5px;
    }

    /*.find_job_leftpanel.active {
        margin-left: -379px !important;
    }

    .jtoggle.active {
        right: -60px !important;
    }*/
</style>
