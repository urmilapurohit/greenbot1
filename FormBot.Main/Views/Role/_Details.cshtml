@using FormBot.Main
@model FormBot.Entity.RoleView
@using FormBot.Helper

<div class="title">
    @if (Model.RoleId > 0)
    {
        <h1>Edit Role</h1>
        <a href="@Url.Action("Index", "Role")" title="Back" class="back-btn pull-right"><img src="~/Images/back-icon.png" alt="" />Back</a>
    }
    else
    {
        <h1>Create Role</h1>
        <a href="@Url.Action("Index", "Role")" title="Back" class="back-btn pull-right"><img src="~/Images/back-icon.png" alt="" />Back</a>
    }
</div>

@{
    bool isEdit = false;

    if (TempData.ContainsKey(SystemEnums.TempDataKey.RoleMenu.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>)TempData[SystemEnums.TempDataKey.RoleMenu.ToString()]).ForEach(d =>
        {
            if (d.MenuId == (int)SystemEnums.MenuId.RoleEdit.GetHashCode()) { isEdit = true; }
        });
    }
}

<div id="msgSection">
    @Html.RenderMessages()
</div>
<div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegion" style="display: none">
    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
</div>

@Html.HiddenFor(model => model.RoleId)
@Html.HiddenFor(model => model.Rights, new { id = "hdnRights" })
@Html.HiddenFor(model => model.CreatedByUsertype)

<div class="row">

    <div class="col-sm-6">
        <div class="form-group">
            <label class="control-label required">Name:</label>
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @tabindex = "1", @maxlength = 50, @autofocus = "autofocus" })
            @Html.ValidationMessageFor(model => model.Name)
        </div>
    </div>
    @if (ProjectSession.UserTypeId == (int)SystemEnums.UserType.FormBotSuperAdmin || ProjectSession.UserTypeId == (int)SystemEnums.UserType.ResellerAdmin || ProjectSession.UserTypeId == (int)SystemEnums.UserType.SolarSubContractorAdmin || ProjectSession.UserTypeId == (int)SystemEnums.UserType.SolarCompanyAdmin)
    {
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label">User Type:</label>

                @if (ProjectSession.UserTypeId == (int)SystemEnums.UserType.SolarSubContractorAdmin || ProjectSession.UserTypeId == (int)SystemEnums.UserType.SolarCompanyAdmin || ProjectSession.UserTypeId == (int)SystemEnums.UserType.ResellerAdmin)
                {
                    @Html.DropDownListFor(model => model.UserType, new List<SelectListItem>(), new { id = "drpUserType", @class = "form-control", @tabindex = "2" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.UserType, new List<SelectListItem>(), new { id = "drpUserType", @class = "form-control", @tabindex = "2" })
                }
            </div>
        </div>
    }
</div>

<br />

<h1 class="title">Access </h1>
<div class="row" id="dynamicRole">
    @if (Model.UserType > 0)
    {
        @Html.DynamicRoleBinding(Model.UserType)
    }
    else
    {
        @Html.DynamicRoleBinding()
    }
</div>

@if (ProjectSession.UserTypeId == 1)
{
    <div id="InvoiceTab" class="SAASUSERINVOICER" style="display:none;">
        <div class="row">
            <div class="col-sm-6 col-md-3">
                <div class="form-group">
                    <input type="hidden" id="hdSelectedInvoicerId" value="@Model.SelectedInvoicer" />
                    @Html.LabelFor(m => m.Invoicer, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.Invoicer, new List<SelectListItem>(), new { @class = "form-control valid", id = "Invoicer" })
                </div>
            </div>
        </div>
    </div>
}

<div class="tab_bottomrow">
    @if (Model.RoleId > 0)
    {
        if (isEdit && (ProjectSession.UserTypeId == 1 || ProjectSession.UserTypeId == 3))
        {
            <text><button class="btn primary icon-btn" type="submit" id="btnSubmit" tabindex="3"><span class="sprite-img save_ic"></span> Save</button>&nbsp; &nbsp;</text>
        }
        else
        {
            if ((isEdit && Model.CreatedByUsertype != 1) && (isEdit && Model.CreatedByUsertype != 3))
            {
                <text><button class="btn primary icon-btn" type="submit" id="btnSubmit" tabindex="3"><span class="sprite-img save_ic"></span> Save</button>&nbsp; &nbsp;</text> }
        }

    }
    else
    {
        <text><button class="btn primary icon-btn" type="submit" id="btnSubmit" tabindex="3"><span class="sprite-img save_ic"></span> Save</button>&nbsp; &nbsp;</text>
    }
    <button class="default cancel_ic" tabindex="4" type="button" id="btnReset">Cancel</button>
</div>
<script>
    $(document).ready(function () {
        if ('@ProjectSession.UserTypeId' == '6' || '@ProjectSession.UserTypeId' == '4') {
            setTimeout(function () {
                $("#drpUserType").prop("disabled", true);
                document.getElementById("drpUserType").value = '8';
            }, 1000);
        }

        if('@ProjectSession.UserTypeId' == '2'){
            setTimeout(function () {
                $("#drpUserType").prop("disabled", true);
                document.getElementById("drpUserType").value = '5';
            }, 1000);
        }
    });
</script>