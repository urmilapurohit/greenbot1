@model FormBot.Entity.JobSchedulingPhotos
@using System.IO;

@using FormBot.Helper;
@{
    string withlocationclass = "";
    string IsUnderInstallationArea = "";
    bool isAllowAccesstoUploadGPSPhoto = false;
    bool isUploadPhotoAfterTrade = false;
    bool isAllowVisibleInstallerSelfiePhoto = false;

    if (TempData.ContainsKey(SystemEnums.TempDataKey.RoleMenu.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>)TempData[SystemEnums.TempDataKey.RoleMenu.ToString()]).ForEach(d =>
        {

            if (d.MenuId == (int)SystemEnums.MenuId.IsAllowAccesstoUploadGPSPhoto.GetHashCode()) { isAllowAccesstoUploadGPSPhoto = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.UploadPhotoAfterTrade.GetHashCode()) { isUploadPhotoAfterTrade = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.IsAllowVisibleInstallerSelfiePhoto.GetHashCode()) { isAllowVisibleInstallerSelfiePhoto = true; }
        });
    }
}




<style type="text/css">
    .deleteJobVisit {
        background: #EDD6D6 !important;
    }

    .option-list li {
        float: left;
        /*position: relative;*/
        padding-right: 10px;
    }

    .deleteInfo {
        color: #6b6b6b;
        font-size: 12px;
        padding-right: 20px;
        background: url('../Images/ic-info.png') no-repeat 100% center;
        position: absolute;
        top: 14px;
        right: 35px;
        cursor: default !important;
        z-index: 1;
    }

    #mdlSlideShow .modal {
        text-align: center;
    }

    .disableNavigation {
        pointer-events: none;
        cursor: not-allowed;
    }



    #mdlSlideShow .modal-dialog {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
    }

    .arrow-next {
        display: block;
        float: right;
        width: 32px;
        height: 32px;
        text-align: right;
        outline: none;
        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=70);
        opacity: 0.7;
        background-position: -180px -236px;
        cursor: pointer;
    }

    .arrow-nextSelfie {
        display: block;
        float: right;
        width: 32px;
        height: 32px;
        text-align: right;
        outline: none;
        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=70);
        opacity: 0.7;
        background-position: -180px -236px;
        cursor: pointer;
    }

    .arrow-prevSelfie {
        display: block;
        float: right;
        width: 32px;
        height: 32px;
        text-align: right;
        outline: none;
        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=70);
        opacity: 0.7;
        background-position: -135px -236px;
        cursor: pointer;
    }

    .arrow-prev {
        display: block;
        float: right;
        width: 32px;
        height: 32px;
        text-align: right;
        outline: none;
        filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=70);
        opacity: 0.7;
        background-position: -135px -236px;
        cursor: pointer;
    }

    .lb-dataContainer .lb-details {
    }

    .lb-dataContainer {
        z-index: 9999;
        /*position: fixed;*/
        /*padding: 10px;*/
        bottom: 10px;
        left: 0px;
        right: 0px;
    }

    .lb-dataContainer-selfie {
        z-index: 9999;
        /*position: fixed;*/
        /*padding: 10px;*/
        bottom: 10px;
        left: 0px;
        right: 0px;
    }

    .lb-closeContainer {
        background-color: rgb(0, 0, 0) !important;
        border-radius: 50px;
        width: auto;
        margin: auto;
        display: inline-block;
        padding: 15px;
    }

        .lb-closeContainer > a {
            margin: 0 15px;
            opacity: 1;
        }

            .lb-closeContainer > a:hover {
                opacity: 0.5;
            }

    .lb-closeContainerSelfie {
        background-color: rgb(0, 0, 0) !important;
        border-radius: 50px;
        width: auto;
        margin: auto;
        display: inline-block;
        padding: 15px;
    }

        .lb-closeContainerSelfie > a {
            margin: 0 15px;
            opacity: 1;
        }

            .lb-closeContainerSelfie > a:hover {
                opacity: 0.5;
            }

    /*.lb-container img {
        width: auto !important;
        height: auto !important;
        border: 2px solid #fff;
    }*/

    .HideOverflow {
        overflow: hidden;
    }

    #lightbox {
        position: fixed !important;
        top: 50% !important;
        left: 50% !important;
        /* bring your own prefixes */
        transform: translate(-50%, -50%) !important;
    }

    #MapPopup {
        z-index: 9999999 !important;
    }

    .with-IsUnderInstallationArea {
        color: red !important;
    }

    #restorebtn {
        background-image: url(../../image.png) !important;
        background-repeat: no-repeat;
        background-position: 2px 6px;
        padding: 0px 14px 0 31px !important;
        background-size: 25px;
    }

    #lnkRestore {
        float: none;
        text-align: center;
        margin-left: 0px;
        width: 100%;
    }
</style>
<script>
    function resizeImage() {
        $('body').addClass('HideOverflow');
    }
</script>



@if (Model.lstVisitCheckListItem != null && Model.lstVisitCheckListItem.Count > 0)
{
    for (int k = 0; k < Model.lstVisitCheckListItem.Count; k++)
    {
        <div class="panel">
            <div class="panel-heading" role="photo-subtab" id="headingpanel-01@(k)">
                <input type="checkbox" class="visit-list-check parentInput" data-jobscid="@Model.jobSchedulingId" data-cid="@Model.lstVisitCheckListItem[k].VisitCheckListItemId" data-folder="@Model.lstVisitCheckListItem[k].FolderName" data-ct="@Model.lstVisitCheckListItem[k].CheckListClassTypeId" data-loc="@Model.lstVisitCheckListItem[k].PDFLocationId" data-nm="@Model.lstVisitCheckListItem[k].CaptureUploadImagePDFName" data-PhotoTypeId="@Model.lstVisitCheckListItem[k].CheckListPhotoTypeId">

                <a role="button" data-toggle="collapse" data-parent="#inner-panel" href="#panel-serial@(k + Model.lstVisitCheckListItem[k].VisitCheckListItemId)" data-name="@Model.lstVisitCheckListItem[k].FolderName" aria-expanded="false" aria-controls="panel-serial@(k + Model.lstVisitCheckListItem[k].VisitCheckListItemId)">
                    @Model.lstVisitCheckListItem[k].FolderName (<span class="color-text totalCount">@Model.lstVisitCheckListItem[k].VisitedCount</span><span class="color-text">/@Model.lstVisitCheckListItem[k].TotalCount</span>)
                </a>





                @*<a role="button" style="@(Model.lstVisitCheckListItem[k].Isdeleted? "color:red" : "")" data-toggle="collapse" data-parent="#inner-panel" href="#panel-serial@(k + Model.lstVisitCheckListItem[k].VisitCheckListItemId)" data-name="@Model.lstVisitCheckListItem[k].FolderName" aria-expanded="false" aria-controls="panel-serial@(k + Model.lstVisitCheckListItem[k].VisitCheckListItemId)">
                        @Model.lstVisitCheckListItem[k].FolderName (<span class="color-text totalCount">@Model.lstVisitCheckListItem[k].VisitedCount</span><span class="color-text">/@Model.lstVisitCheckListItem[k].TotalCount</span>)
                    </a>*@
            </div>
            <div id="photolist">
                <div id="panel-serial@(k + Model.lstVisitCheckListItem[k].VisitCheckListItemId)" class="panel-collapse collapse in photo-Collapse" role="photo-subtab" aria-labelledby="headingpanel-01@(k)">
                    <ul class="panel-body" style="display: grid;">
                        @if (Model.lstVisitCheckListItem[k].lstCheckListPhoto != null && Model.lstVisitCheckListItem[k].lstCheckListPhoto.Count > 0)
                        {
                            for (int j = 0; j < Model.lstVisitCheckListItem[k].lstCheckListPhoto.Count; j++)
                            {
                                <li id="checklistItemPhoto@(j)" role="button" data-path="@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Path" data-vclid="@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].VisitCheckListPhotoId" data-vsid="@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].VisitSignatureId">
                                    <input type="checkbox" class="visit-list-check">
                                    @{
                                        if (!string.IsNullOrEmpty(Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Latitude)
                                                && !string.IsNullOrEmpty(Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Longitude)
                                                && (Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Latitude != "0"
                                                || Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Longitude != "0"))
                                        {
                                            withlocationclass = "with-location";
                                        }

                                        else
                                        {
                                            withlocationclass = "";
                                        }
                                        if ((Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].IsUnderInstallationArea) == "False")
                                        {
                                            IsUnderInstallationArea = "with-IsUnderInstallationArea";
                                        }
                                        else
                                        {
                                            IsUnderInstallationArea = "";
                                        }

                                    }
                                    <a class="@withlocationclass @IsUnderInstallationArea" data-date="@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].CreatedDate" data-lat="@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Latitude" data-lon="@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Longitude" data-IsUnderInstallationArea="@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].IsUnderInstallationArea"
                                       onclick="viewimgonPage('@Path.Combine(FormBot.Helper.ProjectSession.UploadedDocumentPath, Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Path)','@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].VisitCheckListPhotoId');"
                                       title=" " data-PhotoTypeId="@Model.lstVisitCheckListItem[k].CheckListPhotoTypeId">@Model.lstVisitCheckListItem[k].lstCheckListPhoto[j].Name  <span></span></a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

        </div>
    }
}
<!-- ====================== -->



<div class="modal fade" id="popuponuploadphoto" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div>
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <input type="hidden" id="hdnUploadPhoto" value="true" />
                    @*<button type="button" class="close sprite-img" aria-label="Close" id="btnClosepopupboxUploadPhoto"></button>*@
                    <h4 class="modal-title" id="myModalLabel">WARNING</h4>
                </div>
                <div class="modal-body">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <p>This solar job is considered a part of CER's Solar Panel Validation.</p>
                        <br />
                        <p>By adding photos that are not captured using the Greenbot Installers APP you are forfeiting your right to be considered as part of this validation.</p>
                        <br />
                        <p>Do you wish to continue?</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn primary btnYes" id="btnYes"><span></span>YES</button>
                    <button type="button" class="btn default" id="btnClosepopupboxUploadPhoto"><span></span>CANCEL</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="restoreChecklistItmes">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title"> Restore Checklist items </h4>
            </div>
            <div class="modal-body" id="restoreChecklistItmesdata">


            </div>
            <div class="modal-footer" style="padding:15px;margin-top:0px">
                <input class="btn primary icon-btn" type="button" id="restorebtn" value="Restore" style="float:none;padding-left:15px">

                <input type="button" class="btn default cancel_ic" id="cancelbtn" value="Cancel">

            </div>
        </div>
    </div>
</div>
@*<script src="https://requirejs.org/docs/release/2.3.5/minified/require.js"></script>*@
<script>

    var uploadPath = '@FormBot.Helper.ProjectSession.UploadedDocumentPath',
      
        BaseURL = '@FormBot.Helper.ProjectConfiguration.ProjectImagePath' + 'Job/',
        USERID = '@ProjectSession.LoggedInUserId',
        ELECUSERID = '@ProjectSession.LoggedInUserId',
        urlDownloadJobPhotos = '@Url.Action("DownloadJobPhotos", "Job")',
        urlGetIsSPV = '@Url.Action("GetSPVRequired", "Job")',
        urlDeleteCheckListPhotos = '@Url.Action("DeleteCheckListPhotos", "Job")',
        urlSaveImage = '@Url.Action("SaveImage", "Job")',
        urlGenerateAllImagesOfVisistInPdf = '@Url.Action("GenerateAllImagesOfVisistInPdf", "Job")',
        urldeletedChecklist = '@Url.Action("DeletedCheckListItem", "Job")?jobId=',
        urlreloadphoto = '@Url.Action("ReloadJobPhotoTabular", "Job")?jobId=',
        urlrestoreDeletedVisit='@Url.Action("RestoreDeletedVisit", "Job")'
        urlIgnore200mtrValidation = '@Url.Action("SPVIgnore200mtrValidation", "Job")',
            isAllowAccesstoUploadGPSPhoto = '@isAllowAccesstoUploadGPSPhoto';
    var urlRestoreDataforReferenceAndDefault = '@Url.Action("RestoreDataforReferenceAndDefault", "Job")?vcphotoId=';   
    var isUploadPhotoAfterTrade = '@isUploadPhotoAfterTrade';
    var isAllowVisibleInstallerSelfie = '@isAllowVisibleInstallerSelfiePhoto';
</script>
@*<script src="~/Scripts/View/Job/_JobPhotosNewTabular.dev.js"></script>*@
@*<script src="~/Scripts/View/Job/_DocumentsAndPhotosTabular.js"></script>
<script src="~/Scripts/View/Job/_JobPhotosNewTabular.min.js"></script>*@
@*<script>
        $(document).ready(function () {
            $("#photolist").hide();
            load
        });
    </script>*@

