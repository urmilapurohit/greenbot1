@model FormBot.Entity.JobNotes
@using FormBot.Entity
@using FormBot.Helper
@{
    ViewBag.Title = "Create Job";
}
@{
    ////Todo
    bool isAdd = false;
    bool isDelete = false;

    if (TempData.ContainsKey(SystemEnums.TempDataKey.RoleMenu.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>)TempData[SystemEnums.TempDataKey.RoleMenu.ToString()]).ForEach(d =>
        {
            if (d.MenuId == (int)SystemEnums.MenuId.JobNoteAdd.GetHashCode()) { isAdd = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.JobNoteDelete.GetHashCode()) { isDelete = true; }
        });
    }
}
<div id="msgSection">
    @Html.RenderMessages()
</div>

<form id="jobNotes">
    <div class="container-fluid">

        <div class="alert alert-danger alert-dismissible" role="alert" id="popuperrorMsgRegion" style="display: none">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        </div>
        <div class="alert alert-success alert-dismissible" role="alert" id="popupsuccessMsgRegion" style="display: none">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        </div>
        @if (ProjectSession.UserTypeId == 4 || ProjectSession.UserTypeId == 8 || ProjectSession.UserTypeId == 6 || ProjectSession.UserTypeId == 9 || ProjectSession.UserTypeId == 7)
        {
            if (isAdd)
            {
                <input type="hidden" name="JobTitle" value="" id="hdnJobTitle" />
                <div class="row form-block" style="margin-left:0px;">
                    <div class="col-sm-12" style="margin-top: -10px;">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Notes, new { @class = "control-label required" })
                            @Html.TextAreaFor(model => model.Notes, new { id = "Notes", @class = "form-control", @maxlength = 1000, @tabindex = 1, @rows = "4", @autofocus = "autofocus" })
                            @Html.ValidationMessageFor(m => m.Notes)
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <input type="button" name="btnSaveNotes" id="btnSaveNotes" value="Save" class="primary topmargbtn save_ic" style="margin-top:-10px;margin-bottom:10px;" tabindex="2" onclick="onclickEvent();">
                        <input type="button" id="btnReset" value="Reset" class="default reset_ic" tabindex="3" onclick='$("#Notes").val("");'>
                    </div>
                </div>
            }
        }
        <div class="title nobotmarg">
            <h3>Notes List</h3>
        </div>
        <div id="dvIndividual" class="table-responsive dvIndividual" style="" onscroll="javascript: scrolldvIndividual(this);">
            <table id="tblCase" class="tblCase">
                <tbody class="scrollContent" id="tblScroll" style="height: 5%">
                    @if (Model.PagedList != null)
                    {
                        var Cnt = 0;
                        foreach (var item in Model.PagedList)
                        {
                            <tr class="notesTR color">
                                <td colspan="2" class="notes">@Html.Raw(@item.Notes)</td>
                                @if (isDelete)
                                {
                                    <td style="text-align:center;width:34px;"><a href="javascript:DeleteJobNotes('@item.JobNotesID')" style="background:url(../../Images/delete-icon.png) no-repeat center; text-decoration:none;" title="Delete">&nbsp; &nbsp; &nbsp; &nbsp;</a></td>
                                }
                            </tr>
                            <tr class="createdTR color1">
                                <td class="createdBy"><b style="color:#555;">Created By : </b>@item.Created</td>
                                <td class="createdDate"><b style="color:#555;">Created Date : </b>@item.CreatedDate</td>
                                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</form>

<style>
    .notes {
        padding-top: 8px;
        padding-left: 5px;
    }

    .notesTR {
        border: none;
        padding: 10px 20px;
        height: 34px;
        background-color: #f8f8f8;
    }

    .createdTR {
        border-bottom: 1px solid #c8c8c8;
        padding: 0px 20px;
        height: 34px;
        background-color: #f8f8f8;
    }

    .createdBy {
        border: none;
        padding-left: 5px;
        padding-top: 5px;
    }

    .tblCase {
        width: 100%;
        background: #fff;
        margin: 0px;
        overflow-y: auto;
    }

    .createdDate {
        border: none;
        padding-top: 5px;
    }

    .dvIndividual {
        border-bottom-width: 0px;
        height: 350px;
        border-color: #c8c8c8;
        border: none;
    }
</style>
