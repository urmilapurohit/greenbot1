@model FormBot.Entity.FCOGroup
@using FormBot.Helper;
@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    bool isAdd = false, isEdit = false, isDelete = false;

    if (TempData.ContainsKey(SystemEnums.TempDataKey.RoleMenu.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>)TempData[SystemEnums.TempDataKey.RoleMenu.ToString()]).ForEach(d =>
        {
            if (d.MenuId == (int)SystemEnums.MenuId.FCOAdd.GetHashCode()) { isAdd = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.FCOEdit.GetHashCode()) { isEdit = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.FCODelete.GetHashCode()) { isDelete = true; }
        });
    }
}
<div id="msgSection">
    @Html.RenderMessages()
</div>
<div class="container-fluid">
    <div class="title">
        <h1>Compliance Groups</h1>
        @if (isAdd)
        {
            <a href="@Url.Action("Create", "FCOGroup")" class="primary pull-right" style="text-decoration:none;"><img src="../images/ic-plus.png" alt="" />Create FCO Group</a>
        }
    </div>
    <div class="alert alert-success alert-dismissible" role="alert" id="errorMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>

    <form class="form-block" style="margin-bottom:10px;">
        <div class="col-sm-2">
            <div class="form-group">
                <label class="control-label">Group Name:</label>
                <input type="text" id="txtGroupName1" style="display:none;">
                <input type="text" id="txtGroupName" class="form-control" onkeyup="if (event.keyCode == 13){ document.getElementById('btnSearch').click();}">
            </div>
        </div>
        <div class="form-group col-xs-5" style="margin-left:5px;margin-top:28px;">
            <input type="button" id="btnSearch" value="Search" class="primary search_ic" onclick="SearchFCOGroupUsers();">
            <div class="default btn icon-btn" onclick="ResetSearchFilters();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnReset" value="Reset" class="" >
            </div>
            </div>
    </form>
    <br />
    <div class="grid_topbar">
        <p class="job_result" id="numRecords"></p>
    </div>
    <div class="row">
        <div id="grid" class="col-xs-12">
            <!-- Grid start -->
            <div class="table-responsive">
                <table id="datatable" class="table table-hover">
                    <thead>
                        <tr>
                            <th width="10%"><span>@Html.DisplayName("Group Name ")</span></th>
                            <th width="10%"><span>@Html.DisplayName("Assigned FCO User")</span></th>
                            <th width="2%" class="action">@Html.DisplayName("Action")</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
@Styles.Render("~/datatableCSS")
@section scripts{
    @*<script src="~/Scripts/jquery-ui-1.0.js"></script>
    <script src="~/Scripts/jquery.fileupload.js"></script>
    <script src="~/Scripts/FormBot.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    @Scripts.Render("~/datatableJs")
    @Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $(document).ready(function () {
            $("#datatable").removeAttr("style");
            $("#txtGroupName").focus();
            $('#datatable').DataTable({
                iDisplayLength: 10,
                lengthMenu:@FormBot.Helper.ProjectConfiguration.GetPageSize,
                language: {
                    sLengthMenu: "Page Size: _MENU_"
                },
                columns: [
                        { 'data': 'GroupName', "orderable": true },
                        { 'data': 'AssignFCOUser' },
                        {
                            'data': 'Id',
                            "render": function (data, type, full, meta) {

                                imgedit = 'background:url(../Images/edit-icon.png) no-repeat center; text-decoration:none;';
                                var editHref = ("@Url.Action("Edit", "FCOGroup")" + "/" + full.Id);
                                imgdelete = 'background:url(../Images/delete-icon.png) no-repeat center; text-decoration:none;';
                                var deleteHref = "javascript:deleteRole('" + full.Id + "')";
                                var returnHTML = '';
                                @if(isEdit)
                                {
                                    <text>
                                returnHTML +='<a href="' + editHref + '" class="ic-edit" style="' + imgedit + '" title="Edit">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>' + '&nbsp;&nbsp;' ;
                                </text>
                                }
                                @if(isDelete)
                                 {
                                     <text>
                                returnHTML +='<a href="' + deleteHref + '" class="ic-edit" style="' + imgdelete + '" title="Delete">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                                </text>
                                 }
                                return returnHTML;
                            },
                            "orderable": false
                        },
                ],
                dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
                initComplete: function (settings, json) {
                    $('.grid-bottom span:first').attr('id', 'spanMain');
                    $("#spanMain span").html("");
                    $(".ellipsis").html("...");
                },
                bServerSide: true,
                sAjaxSource: '@Url.Action("GetFCOGroupList", "FCOGroup")',
                "fnDrawCallback": function () {
                    $(".paging a.previous").html("&nbsp");
                    $(".paging a.next").html("&nbsp");
                    $('.grid-bottom span:first').attr('id', 'spanMain');
                    $("#spanMain span").html("");
                    $(".ellipsis").html("...");

                    if ($(".paging").find("span").length > 1) {
                        $("#datatable_length").show();
                    } else if ($("#datatable").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }
                    //--------To show display records from total records-------------------
                    var table = $('#datatable').DataTable();
                    var info = table.page.info();
                    if(info.recordsTotal==0){
                        document.getElementById("numRecords").innerHTML = '<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b> FCO Group(s) found';
                    }
                    else{
                        document.getElementById("numRecords").innerHTML = '<b>' + $('#datatable >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b> FCO Group(s) found';
                    }
                    //------------------------------------------------------------------------------------------------------------------------------

                },

                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "groupName", "value": $("#txtGroupName").val() });
                }
            });
        });

        function deleteRole(id) {
            var result = confirm("Are you sure you want to delete this record ?");
            if (result) {
                $.ajax({
                    url: '@Url.Action("Delete", "FCOGroup")',
                    type: "POST",
                    async: false,
                    data: JSON.stringify({ id: id }),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.success) {
                            $(".alert").hide();
                            $("#errorMsgRegion").html(closeButton + "User deleted successfully.");
                            $("#errorMsgRegion").show();
                            $("#datatable").dataTable().fnDraw();
                        }
                    },
                });
            }
        }

        function SearchFCOGroupUsers() {
            $("#datatable").dataTable().fnDraw();
        }

        function CreateFCOGroup() {
            window.location.href = '@Url.Action("Create","FCOGroup")';
        }

        $('#btnSearch').click(function (e) {
            e.preventDefault();
            e.stopPropagation();
            SearchFCOGroupUsers1();
        });

        function SearchFCOGroupUsers1() {
            var groupName = $("#txtGroupName").val();
            Searching(groupName);
        }

        function Searching(groupName) {
            var GroupName = groupName;
            var dTable = $("#datatable").dataTable();
            var dSettings = dTable.fnSettings();
            dSettings.sAjaxSource = '@Url.Action("GetFCOGroupList", "FCOGroup")' + '?groupName=' + groupName;
            $('#datatable').DataTable().ajax.reload();
        }
        $("#txtGroupName").keypress(function (e) {
            if (e.which == 13) {
                $('#btnSearch').click();
            }
        });
        function ResetSearchFilters() {
            $("#txtGroupName").val('');
            Searching('');
            $("#datatable").dataTable().fnDraw();
        }
    </script>
}
