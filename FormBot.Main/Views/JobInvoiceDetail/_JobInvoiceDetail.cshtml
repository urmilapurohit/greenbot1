@model FormBot.Entity.Job.JobInvoice
@using FormBot.Helper;
@{
    Layout = null;
    //FormBot.Helper.Helper.Common.WriteErrorLog("Partial view header");
}

@*@Styles.Render("~/Content/css")
    @Styles.Render("~/datatableCSS")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/datatableJs")*@

@*@Scripts.Render("~/bundles/bootstrap")*@


@*<script src="~/Scripts/Calendar/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <link href="~/Content/datepicker.css" rel="stylesheet" />*@


<style>
    .hide_column {
        display: none;
    }

    .vertical-alignment-helper {
        display: table;
        height: 100%;
        width: 100%;
    }

    .invoice_delete_ic {
        background-image: url("/images/ic-trash-wh.png") !important;
        background-position: 6px 9px;
        background-repeat: no-repeat;
        float: right !important;
        padding: 0 10px 0 28px !important;
    }

    .vertical-align-center {
        display: table-cell;
        vertical-align: middle;
    }

    .modal-content {
        width: inherit;
        height: inherit;
        margin: 0 auto;
    }

    #grid .table-responsive td.dt-right {
        text-align: right;
    }

    .datatableParts tbody tr {
        cursor: pointer;
    }
</style>


<script>
    $(function () {

        $("#updateInvoice").click(function () {
            console.log("save")
            var invoiceID = '';
            if ($("#hdnJobInvoiceID"))
                invoiceID = $("#hdnJobInvoiceID").val();
            if (invoiceID != 0) {
                var invoiceStatus = '0';
                if ($("#drdInvoiceStatus"))
                    invoiceStatus = $("#drdInvoiceStatus").val();

                var url = '@Url.Action("updateInvoiceNumber", "JobInvoiceDetail")?invoiceID=' + invoiceID +
                         '&invoiceNumber=' + $("#InvoiceNumber").val() +
                        '&status=' + invoiceStatus;
                $.ajax(
                   {
                       url: url,
                       method: 'POST',
                       cache: false,
                       success: function (success) {
                           if (success.result == '1') {
                               $(".alert").hide();
                               $("#successMsgRegion").html("Invoice detail updated successfully.");
                               $("#successMsgRegion").show();

                               jobInvoiceDetail.loadData(invoiceID);
                           } else {
                               $(".alert").hide();
                               $("#errorMsgRegion").html("Invalid invoice status.");
                               $("#errorMsgRegion").show();

                               jobInvoiceDetail.loadData(invoiceID);
                           }

                       },
                       error: function (success) {
                           $(".alert").hide();
                           $("#errorMsgRegion").html("Please try again.");
                           $("#errorMsgRegion").show();

                       }
                   });
            }
            else {
                $(".alert").hide();
                $("#errorMsgRegion").html("First add invoice component and try again.");
                $("#errorMsgRegion").show();

            }
        });


    });
</script>
<div class="container-fluid">

    <div class="row">
        @Html.Hidden("hdnJobInvoiceID", "0")
        @Html.HiddenFor(m => m.XeroApprovedDate, new { @id = "hdnXeroApprovedDate" })
        @Html.Hidden("hdnInvoiceToUserType", (string)ViewBag.UserType)

        <div class="col-sm-12">
            <br />
            <div id="grid">
                <div class="grid_rightform">
                    <div class="grfp">
                        <div class="form-inline">
                            <div class="form-group">


                                <label for="exampleInputName2">Status:</label>
                                @Html.DropDownListFor(m => m.Status, new List<SelectListItem>
                                     {
                                        new SelectListItem{ Text="Outstanding", Value = "4" },
                                        new SelectListItem{ Text="Partial Payment", Value = "3" },
                                        new SelectListItem{ Text="Paid", Value = "1" },
                                        new SelectListItem{ Text="Cancelled", Value = "2" }
                                     }, new { @id = "drdInvoiceStatus", @class = "form-control wth150 mrr10" }
                            )

                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail2">Invoice:</label>
                                @Html.TextBoxFor(m => m.InvoiceNumber, new { @class = "form-control wth150" })
                            </div>
                            <div class="form-group">
                                <div class="btn primary icon-btn dropdown-toggle pad-13" id="updateInvoice">
                                    <span class="sprite-img save_ic" style="left:3px !important;"></span>
                                    <input class="" type="button">
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
                <br />
                <div class="invoice-omponents">
                    <div role="group" class="btn-group">
                        <button aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" class="btn primary dropdown-toggle ic_plus" type="button">
                            Add Invoice Components<span class="caret"></span>
                        </button>


                        <ul class="dropdown-menu">
                            @{if (Model != null && Model.XeroApprovedDate == null)
                            {
                                <li><a href="javascript:void(0);" id="AddTime">Add Time</a></li>
                                <li><a href="javascript:void(0);" id="addEditParts">Add Part</a></li>
                            }
                            }

                            <li><a href="javascript:void(0);" id="addPayments">Add Payment</a></li>
                        </ul>
                    </div>
                    <div class="btn-group" role="group">
                        <button id="btnInvoiceAction" type="button" class="btn primary dropdown-toggle action-btn"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            Action<span class="caret"></span>
                        </button>

                        <ul class="dropdown-menu">

                            @{
                                if (!ViewBag.isXero)
                                {
                                    <li><a id="generateInvoice">Generate Invoice</a></li>
                                }
                            }

                            @{ if (ViewBag.isXero)
                             {
                                <li>
                                    <a href="javascript:void(0);" onclick="submitInvoiceDetail.submitXeroApprove()">
                                        Send approved invoice to XERO
                                    </a>
                                </li>
                                 if (Model != null && Model.XeroApprovedDate == null)
                                 {
                                    <li>
                                        <a href="javascript:void(0);" onclick="submitInvoiceDetail.submitXeroDraft()">
                                            Send draft invoice to XERO
                                        </a>
                                    </li>
                                 }
                             }
                            }
                            @*<li>
                                    <a href="javascript:void(0);" onclick="submitInvoiceDetail.submitXeroApprove()">
                                        Send approved invoice to XERO
                                    </a>
                                </li>
                                @{if (Model != null && Model.XeroApprovedDate == null)
                                {
                                    <li>
                                        <a href="javascript:void(0);" onclick="submitInvoiceDetail.submitXeroDraft()">
                                            Send draft invoice to XERO
                                        </a>
                                    </li>
                                }
                                }*@

                            <li><a id="exportCSV">Export .CSV</a></li>
                        </ul>
                        <input class="btn primary dropdown-toggle invoice_delete_ic btn_notext" type="button" id="btnDeleteInvoice" onclick="deleteInvoiceDetial()">
                    </div>


                    <div class="form-inline">
                        <div class="form-group">


                            <label for="exampleInputName2">Invoiced :</label>
                            <select id="drdInvoiced" class="form-control">
                                <option value="0">All</option>
                                <option value="1">Yes</option>
                                <option value="2">No</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail2">Show Charge :</label>
                            <select id="drdInvoiceType" class="form-control">
                                <option value="0">All</option>
                                <option value="2">Time</option>
                                <option value="1">Parts</option>
                                <option value="3">Payments</option>
                            </select>
                        </div>

                    </div>









                </div>

                <!-- Grid start -->
                <div class="table-responsive">
                    <table id="invoiceDetailListTable" class="table table-hover">
                        <thead>
                            <tr>
                                <th style="text-align:center; width:5% !important"><span>@Html.CheckBox("chkall", new { id = "chkAll" }) </span></th>
                                <th width="10%"><span>@Html.DisplayName("Time Start") </span></th>
                                <th width="10%"><span>@Html.DisplayName("Type")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Description") </span></th>
                                <th width="10%"><span>@Html.DisplayName("Staff")</span></th>
                                @*<th width="10%"><span>@Html.DisplayName("Job Visit")</span></th>*@
                                <th width="10%"><span>@Html.DisplayName("Quantity")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Price/Rate")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Sub Total")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Cost")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Profit")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Margin (%)")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Tax")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Total")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Billable")</span></th>
                                <th width="10%"><span>@Html.DisplayName("Invoiced")</span></th>
                                <th style="display:none;"><span>@Html.DisplayName("JobInvoiceDetailID")</span></th>
                                <th style="display:none;"><span>@Html.DisplayName("JobInvoiceType")</span></th>
                                <th style="display:none;"><span>@Html.DisplayName("Payments")</span></th>
                                <th style="display:none;"><span>@Html.DisplayName("Remaining")</span></th>
                                <th style="display:none;"><span>@Html.DisplayName("TaxAmountConsider")</span></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <td width="60%" colspan="5"></td>
                                <td colspan="2" style="text-align:right;"> <strong>Summary</strong><em class="i-icon"><img alt="" src="/images/i-icon.png"></em></td>
                                <td class="dt-right"><label class="clslblSubTotalFooter">  @ViewBag.SubTotal  </label></td>
                                <td class="dt-right"><label class="clslblCostFooter"> @ViewBag.Cost  </label></td>
                                <td class="dt-right"><label class="clslblProfitFooter"> @ViewBag.Profit </label></td>
                                <td class="dt-right"><label class="clslblMarginFooter"> @ViewBag.Margin</td>
                                <td>&nbsp;</td>
                                <td align="right">
                                    @{

                                        //Working code
                                        if (ViewBag.PDFFound != null)
                                        {
                                            //var showPdf = "none";
                                            //var filename = @ViewBag.Filename;
                                            ////FormBot.Helper.Helper.Common.WriteErrorLog(System.IO.Path.Combine(ProjectSession.ProofDocumentsURL.Replace("/", "") + "\\JobDocuments" + "\\" + Model.JobId + "\\" + "Invoice\\Report\\" + filename));
                                            //if (System.IO.File.Exists(System.IO.Path.Combine(ProjectSession.ProofDocumentsURL.Replace("/", "") + "\\JobDocuments" + "\\" + Model.JobId + "\\" + "Invoice\\Report\\" + filename)) == true)
                                            //    showPdf = "block";

                                            <img id="imgPDFIcon" src="/images/pdf.png" style="cursor: pointer; display: block !important; " filename="@ViewBag.Filename" title="Download" onclick="DownloadReport(this)" />
                                        }
                                    }
                                </td>
                            </tr>
                        </tfoot>





                    </table>

                    <table id="invoceDetailSummary" style="display:none;">
                        <tr>
                            <td width="60%" colspan="6"></td>
                            <td colspan="2" style="text-align:right;"> <strong>Summary</strong><em class="i-icon"><img alt="" src="/images/i-icon.png"></em></td>
                            <td class="dt-right">@ViewBag.SubTotal</td>
                            <td class="dt-right">@ViewBag.Cost</td>
                            <td class="dt-right">@ViewBag.Profit</td>
                            <td class="dt-right">@ViewBag.Margin</td>
                            <td>&nbsp;</td>
                            <td align="right">
                                @{

                                    if (ViewBag.PDFFound != null)
                                    {
                                        var showPdf = "none";
                                        var filename = @Model.FileName + ".pdf";
                                        if (System.IO.File.Exists(System.IO.Path.Combine(ProjectSession.ProofDocumentsURL.Replace("/", "") + "\\JobDocuments" + "\\" + Model.JobId + "\\" + "Invoice\\Report\\" + filename)) == true)
                                            showPdf = "block";

                                        <img src="/images/pdf.png" style="cursor:pointer;display:@showPdf" filename="@filename" title="Download" onclick="DownloadReport(this)" />
                                    }
                                }
                            </td>


                            <td colspan="2">
                                <div class="btn-group dropup" role="group">
                                    <button id="btnInvoiceAction" type="button" class="btn primary dropdown-toggle action-btn"
                                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                        Action<span class="caret"></span>
                                    </button>

                                    <ul class="dropdown-menu">
                                        @{
                                            if (!ViewBag.isXero)
                                            {
                                                <li><a id="generateInvoice">Generate Invoice</a></li>
                                            }
                                        }


                                        @{ if (ViewBag.isXero)
                                         {
                                            <li>
                                                <a href="javascript:void(0);" onclick="submitInvoiceDetail.submitXeroApprove()">
                                                    Send approved invoice to XERO
                                                </a>
                                            </li>
                                             if (Model != null && Model.XeroApprovedDate == null)
                                             {
                                                <li>
                                                    <a href="javascript:void(0);" onclick="submitInvoiceDetail.submitXeroDraft()">
                                                        Send draft invoice to XERO
                                                    </a>
                                                </li>
                                             }
                                         }
                                        }

                                        <li><a id="exportCSV">Export .CSV</a></li>


                                    </ul>
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>





            </div>
        </div>
    </div>

    <div class="row">

        <div class="col-sm-6 col-md-4">
            <div class="form-inline  invoice-to">
                <div class="form-group">
                    <label for="exampleInputName2">Invoice to :</label>
                    @{
                        if (ViewBag.UserList != null)
                        {
                            @Html.DropDownList("drpInvoiceTo", (SelectList)ViewBag.UserList, new { @class = "form-control" })
                        }
                    }
                </div>
                <div class="form-group">
                    @{
                        string invoiceBtnValue = "Send Invoice";
                        if (Model.Sent == true)
                        {
                            invoiceBtnValue = "Resend Invoice";
                        }
                    }
                    <input type="button" class="default resend-invoice resend_ic" onclick="submitInvoiceDetail.sendInvoice()" value="@invoiceBtnValue">
                </div>
                <div class="clear"></div>
                @if (ViewBag.InvoiceToUserDetail != null)
                {
                    <p>@ViewBag.InvoiceToUserDetail</p>
                }
                @{if (Model != null && Model.InvoiceSentDate != null)
                {
                    @Html.Raw("<span class='last-invoice-text'>last invoice sent (" + Model.InvoiceSentDate.Value.ToString(ProjectConfiguration.GetDateFormat.Replace('m', 'M'))
                  + "&nbsp;" + Convert.ToDateTime(Model.InvoiceSentDate).ToString("HH:mm tt") + ")</span>");
                }

                }
                @if (ViewBag.InvoiceToUserId != null)
                {
                    @Html.Hidden("hdnInvoiceToUserId", (Int32)ViewBag.InvoiceToUserId)
                }
                @if (ViewBag.InvoiceToEmailId != null)
                {
                    @Html.Hidden("hdnInvoiceToEmailId", (string)ViewBag.InvoiceToEmailId)
                }
                @Html.Hidden("hdnFileExist", Model.FileExist)
            </div>
        </div>

        <div class="col-sm-6 col-md-8">
            <div class="Profitability">
                <table id="invoceDetailSummary2" border="0" collapse="0">
                    <tbody>
                        <tr>
                            <td class="label">Job Profitability</td>
                            <td><span class="total">Total</span></td>
                        </tr>
                        <tr>
                            <td class="label">Billable</td>
                            <td> <label class="clslblSubTotal1"> @ViewBag.SubTotal </label></td>
                        </tr>
                        <tr>
                            <td class="label">Actual Cost</td>
                            <td><label class="clslblTotalActualCost"> @ViewBag.Cost </label></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td class="label">Profit</td>
                            <td><label class="clslblTotalProfit_TotalMargin"> @ViewBag.Profit / @ViewBag.Margin % </label></td>
                        </tr>
                    </tfoot>

                </table>

                <table id="invoceDetailSummary3" border="0" collapse="0">
                    <tbody>
                        @*<tr>
                                <td></td>
                                <td><span class="total">Total</span></td>
                            </tr>*@
                        <tr>
                            <td class="label">Billable</td>
                            <td id=""> <label class="clslblSubTotal2">@ViewBag.SubTotal </label></td>
                        </tr>
                        <tr>
                            <td class="label">Tax</td>
                            <td id=""><label class="clslblTax"> @ViewBag.Tax </label></td>
                        </tr>
                        <tr>
                            <td class="label">Total</td>
                            <td id=""><label class="clslblSummaryTotal"> @ViewBag.SummaryTotal </label></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td class="label">Payments</td>
                            <td id=""><label class="clslblPayments"> @ViewBag.Payments </label></td>
                        </tr>
                        <tr>
                            <td class="label">Remaining</td>
                            <td id=""> <label class="clslblTotalRemaining"> @ViewBag.Ramaning </label></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade add-part-modal" tabindex="-1" role="dialog" id="popupAddTime">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="frmAddTime"></form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade add-part-modal" tabindex="-1" role="dialog" id="popupAddEditPart">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <div class="modal-header">

                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src="~/images/close-btn.png" alt="">
                    </button>
                    <h4 class="modal-title">Add/Edit Part</h4>

                </div>
                <div class="modal-body">

                    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionForInvoice" style="display: none">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    </div>
                    <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegionInvoice" style="display: none">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    </div>

                    <div class="form-box">
                        <div class="row">
                            <div class="col-lg-6" id="addEditPartContent">

                            </div>
                            <div class="col-lg-6" id="jobPartListContent">

                            </div>
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn default cancel_ic" data-dismiss="modal" tabindex="14">Cancel</button>
                    <button type="button" class="btn primary icon-btn" id="btnJobPartSave" tabindex="13"> <span class="sprite-img save_ic"></span> Save</button>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade add-part-modal" tabindex="-1" role="dialog" id="popupAddPayment">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="frmAddPayment"></form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="popupProof" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header ">
                    <button type="button" class="close" aria-label="Close" id="btnClosepopupProof">
                        <img src="~/images/close-btn.png" alt="">
                    </button>
                    <h4 class="modal-title" id="myModalLabel">View File</h4>
                </div>
                <div class="modal-body fixheight">
                    <div class="form-border">
                        <div>
                            @*<img src="" id="imgViewImage" class="" style="display:block;margin:0 auto;" />*@

                            <img src="" id="imgViewImage" class="img-responsive" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="dialog-ConnectZero"></div>

@*<div class="modal fade add-part-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header ">
                        <button type="button" class="close" aria-label="Close" id="btnClosepopupProof">
                            <img src="~/images/close-btn.png" alt="">
                        </button>
                        <h4 class="modal-title" id="myModalLabel">View File</h4>
                    </div>
                    <div class="modal-body fixheight">
                        <div class="form-border">
                            <div>
                                <img src="" id="imgViewImage" class="" style="display:block;margin:0 auto;" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@

<script>

    var logoWidth = 0, logoHeight = 0;

    $("#btnJobPartSave").click(function (e) {
        e.preventDefault();
        SaveInvoiceDetail();
    });
    $("#btnClosepopupProof").click(function () {
        $('#popupProof').modal('hide');
    });


    $(function () {



        $("#AddTime").click(function () {
            loadAddTime('');
        });

        $("#addEditParts").click(function () {

            var jobId = $("#BasicDetails_JobID").val();
            @*alert("Username:" + '@ProjectSession.LoggedInName')
            alert("UserID:" + '@ProjectSession.LoggedInUserId')*@
            GetJobInvoiceDetailById(0, jobId);
        });
    });

    function loadAddTime(jobInvoiceDetailID) {
        var jobId = $("#BasicDetails_JobID").val();

        $.ajax({
            url: '@Url.Action("GetJobTimeById", "JobInvoiceDetail")?jobId=' + $("#BasicDetails_JobID").val() + '&jobInvoiceDetailID=' + jobInvoiceDetailID,
            dataType: 'html',
            method: "get",
            success: function (data) {
                $("#frmAddTime").html(data);
                setTimeout(function () {
                    $('#IsBillable').focus();
                }, 1000);
            }
        });

        if ($("#InvoiceNumber")) {
            $("#InvoiceNumber").val();
        }
        else
            $("#InvoiceNumber").val("123");

        $("#popupAddTime").modal();
    }

    //Payment click

    $("#addPayments").click(function () {
        var JobInvoiceDetailId = "";
        PaymentPopup(JobInvoiceDetailId);
    });

    function PaymentPopup(JobInvoiceDetailId) {
        var InvoiceNumber;
        var jobId = $("#BasicDetails_JobID").val();
        var jobInvoiceId = $("#hdnJobInvoiceID").val();
        $("#JobInvoiceID").val(jobInvoiceId);
        if ($("#InvoiceNumber")) {
            $("#InvoiceNumber").val();
            InvoiceNumber = $("#InvoiceNumber").val();
        }
        else
            InvoiceNumber = $("#InvoiceNumber").val("123");

        $.ajax({
            url: '@Url.Action("GetJobPaymentById", "JobInvoiceDetail")?jobInvoiceId=' + jobInvoiceId + '&jobId=' + jobId + '&InvoiceNumber=' + InvoiceNumber + '&JobInvoiceDetailId=' + JobInvoiceDetailId,
            dataType: 'html',
            method: "get",
            success: function (data) {
                $("#frmAddPayment").html(data);
            }
        });


        $("#popupAddPayment").modal();
        setTimeout(function () {
            $('#PaymentType').focus();
        }, 1000);
    }

    function GetJobInvoiceDetailById(jobInvoiceDetailID, jobId) {

        $.ajax({
            url: '@Url.Action("GetJobPartsById", "JobInvoiceDetail")?jobInvoiceDetailID=' + jobInvoiceDetailID + '&jobId=' + jobId,
            dataType: 'html',
            method: "get",
            //async: false,
            success: function (data) {


                $("#addEditPartContent").html(data);
                var jobInvoiceId = $("#hdnJobInvoiceID").val();
                $("#JobInvoiceID").val(jobInvoiceId);

                @*if (jobInvoiceDetailID > 0)
                { }
                else
                {
                    $("#Tax").val('@ProjectSession.PartAccountTax');
                    $("#IsTaxInclusive").val('@ProjectSession.IsTaxInclusive');
                }*@

                CalculateTaxAmount();

                //TODO
                //alert('@ProjectSession.LoggedInUserId');
                if ($("#InvoiceNumber")) {
                    $("#InvoiceNumber").val();
                }
                else
                    $("#InvoiceNumber").val("123");

                $("#JobId").val(jobId);
                //alert("success finish")
            },
            complete: function (data) {
                //alert("Complete")

                //alert('@ProjectSession.LoggedInUserId');
                GetJobPartsPartialView();

            },
            error: function (data) {
                alert("Error !")
            }
        });





    }

    function GetJobPartsPartialView() {
        $.ajax({
            url: '@Url.Action("GetJobPartsPartialView", "JobInvoiceDetail")?isAllParts=true',
            dataType: 'html',
            method: "get",
            //async: false,
            success: function (data) {
                $("#jobPartListContent").html(data);
                //var table = $('#datatable').dataTable();

                $('.datatableParts tbody').on('click', 'tr', function (e) {
                    var jobPartId = $(e.currentTarget).find('td').find('a').attr('jobPartId');
                    if (jobPartId) {
                        $.ajax({
                            url: '@Url.Action("GetJobPartsByIdOnClick", "JobInvoiceDetail")?jobPartId=' + jobPartId,
                            dataType: 'html',
                            method: "get",
                            success: function (data) {

                                if (data) {
                                    var jobPartsData = JSON.parse(data);

                                    //$.each(jobPartsData, function (index, ele) {
                                    $("#Description").val(jobPartsData[0].Description);
                                    $("#ItemCode").val(jobPartsData[0].ItemCode);
                                    $("#Sale").val(jobPartsData[0].Sale);
                                    $("#Purchase").val(jobPartsData[0].Purchase);
                                    $("#Margin").val(jobPartsData[0].Margin);
                                    $("#JobPartID").val(jobPartsData[0].JobPartID);

                                    $("#Tax").val(jobPartsData[0].Tax);
                                    $("#IsTaxInclusive").val(jobPartsData[0].IsTaxInclusive);

                                    if (jobPartsData[0].SaleAccountCode != null && jobPartsData[0].SaleAccountCode != undefined && jobPartsData[0].SaleAccountCode != '')
                                        FillDropDown('SaleAccountCode', '@Url.Action("GetAllPartsCode", "Settings")', jobPartsData[0].SaleAccountCode, true, null);
                                    else
                                        FillDropDown('SaleAccountCode', '@Url.Action("GetAllPartsCode", "Settings")', null, true, null);
                                    //$("#TaxAmount").val(jobPartsData[0].Tax);

                                    if (jobPartsData[0].TaxType != null && jobPartsData[0].TaxType != undefined && jobPartsData[0].TaxType != '' && jobPartsData[0].TaxType.toLowerCase() == "output")
                                        $("#TaxRateId").val(1); // GST on Income
                                    else {
                                        $("#TaxRateId").val(2); // GST free income
                                        //$("#Tax").val(0);
                                    }

                                    CalculateMargin();
                                    CalculateTaxAmount();
                                }
                            },
                            complete: function (data) {
                                //alert("Complete")

                            },
                            error: function (data) {
                                alert("Error !")
                            }
                        });
                    }
                });

                $("#popupAddEditPart").modal();
                setTimeout(function () {
                    $('#IsBillable').focus();
                }, 1000);
            }
        });
    }

</script>

<script>
    var submitInvoiceDetail = submitInvoiceDetail || [];

    submitInvoiceDetail = (function () {
        var pub = {};

        pub.submitToXero = function (invoiceStatus) {
            var invoiceID = '', invoiceNumber = '', jobID = '', contactName = '', invoicePaidStatus = '';
            var IsValidate = true;
            if ($("#hdnJobInvoiceID"))
                invoiceID = $("#hdnJobInvoiceID").val();

            if ($("#InvoiceNumber"))
                invoiceNumber = $("#InvoiceNumber").val();

            if ($("#hasJobID"))
                jobID = $("#hasJobID").val();

            if ($("#drpInvoiceTo"))
                contactName = $("#drpInvoiceTo").text();

            if ($("#drdInvoiceStatus"))
                invoicePaidStatus = $("#drdInvoiceStatus").val();

            if (IsValidate && (invoiceID == undefined || invoiceID == '')) {
                IsValidate = false;
                $(".alert").hide();
                $("#errorMsgRegion").html("Invoice ID is not found.");
                $("#errorMsgRegion").show();

            }

            if (IsValidate && (invoiceNumber == undefined || invoiceNumber == '')) {
                IsValidate = false;
                $(".alert").hide();
                $("#errorMsgRegion").html("Invoice number is not found.");
                $("#errorMsgRegion").show();

            }

            if (IsValidate && (jobID == undefined || jobID == '')) {
                IsValidate = false;
                $(".alert").hide();
                $("#errorMsgRegion").html("Job ID is not found.");
                $("#errorMsgRegion").show();

            }

            if (IsValidate && (contactName == undefined || contactName == '')) {
                IsValidate = false;
                $(".alert").hide();
                $("#errorMsgRegion").html("Contact is not found.");
                $("#errorMsgRegion").show();

            }

            if (IsValidate && (invoicePaidStatus == undefined || invoicePaidStatus == '')) {
                IsValidate = false;
                $(".alert").hide();
                $("#errorMsgRegion").html("Invoice status is not found.");
                $("#errorMsgRegion").show();

            }

            {

                if (IsValidate) {
                    var url = '@Url.Action("submitToZero", "JobInvoiceDetail")?invoiceID=' + invoiceID +
                        '&invoiceNumber=' + invoiceNumber + '&invoiceStatus=' + invoiceStatus
                    + '&jobID=' + jobID + '&contactName=' + contactName + '&invoicePaidStatus=' + invoicePaidStatus;
                    $.ajax(
                       {
                           url: url,
                           method: 'POST',
                           cache: false,
                           success: function (result) {

                               console.log("success == " + result.status);
                               if (result.status == false) {
                                   if (result.error.toLowerCase() == 'specified method is not supported.' || result.error.toLowerCase() == 'renewtokenexception' || result.error.toLowerCase() == 'unauthorizedexception' || result.error.toLowerCase() == 'invalid_grant') {
                                       window.open('@Url.Action("Connect", "XeroConnect")', "_blank");
                                   }
                                   else if (result.error.toLowerCase() == 'sessiontimeout')
                                       window.location.href = '@Url.Action("Logout", "Account")';
                                   else {
                                       $(".alert").hide();
                                       $("#errorMsgRegion").html(result.error);
                                       $("#errorMsgRegion").show();
                                   }
                               }
                               else {
                                   $(".alert").hide();
                                   if (invoiceStatus == 1) {
                                       $("#successMsgRegion").html("Drafted invoice successfully in XERO.");
                                   }
                                   else {
                                       $("#successMsgRegion").html("Approved invoice successfully in XERO.");
                                       //jobInvoiceDetail.loadData(invoiceID);
                                   }
                                   $("#successMsgRegion").show();

                                   if ($('#invoiceDetailListTable')) {
                                       var table = $('#invoiceDetailListTable').DataTable();
                                       table.destroy();
                                   }
                                   jobInvoiceDetail.loadData(invoiceID)
                               }
                           },
                           error: function (result) {

                               console.log("error == " + result.error);

                           }
                       });
                }

            }

        }
        function documentReady() {
            $('#drdInvoiced').on('change', function () {
                if ($("#hdnJobInvoiceID")) {
                    if ($('#invoiceDetailListTable')) {
                        var table = $('#invoiceDetailListTable').DataTable();
                        table.destroy();
                    }
                    jobInvoiceDetail.loadInvoiceDetailGrid($("#hdnJobInvoiceID").val());
                    var queryString = '';
                    queryString += 'invoiceID=' + $("#hdnJobInvoiceID").val() + '&';
                    queryString += 'isInvoiced=' + $("#drdInvoiced").val() + '&';
                    queryString += 'jobInvoiceType=' + $('#drdInvoiceType').val();
                    queryString = '?' + queryString;

                    var getUrl = '@Url.Action("JobInvoiceTotalPartialView", "JobInvoiceDetail")' + queryString;
                    $.ajax({
                        url: getUrl,
                        type: "GET",
                        //data: { "jobId": jobId, "categoryID": categoryID, "order": order, "fromDate": fromDate, "toDate": toDate },
                        cache: false,
                        async: false,
                        success: function (Data) {
                            if (Data != null) {
                                $(".clslblSubTotal1").text(parseFloat(Data.SubTotal).toFixed(2));
                                $(".clslblSubTotal2").text(parseFloat(Data.SubTotal).toFixed(2));
                                $(".clslblTotalActualCost").text(parseFloat(Data.Cost).toFixed(2));
                                $(".clslblTotalProfit_TotalMargin").text(parseFloat(Data.Profit).toFixed(2) + ' / ' + Data.Margin + " %");
                                $(".clslblTax").text(parseFloat(Data.Tax).toFixed(2));
                                $(".clslblSummaryTotal").text(parseFloat(Data.SummaryTotal).toFixed(2));
                                $(".clslblPayments").text(parseFloat(Data.Payments).toFixed(2));
                                $(".clslblTotalRemaining").text(parseFloat(Data.Ramaning).toFixed(2));

                                $(".clslblSubTotalFooter").text(parseFloat(Data.SubTotal).toFixed(2));
                                $(".clslblCostFooter").text(parseFloat(Data.Cost).toFixed(2));
                                $(".clslblProfitFooter").text(parseFloat(Data.Profit).toFixed(2));
                                $(".clslblMarginFooter").text(Data.Margin);
                            }
                            //$("#divJobInvoiceTotal").html($.parseHTML(Data));
                        }
                    });
                }
            });
            $('#drdInvoiceType').on('change', function () {
                if ($("#hdnJobInvoiceID")) {
                    if ($('#invoiceDetailListTable')) {
                        var table = $('#invoiceDetailListTable').DataTable();
                        table.destroy();
                    }
                    jobInvoiceDetail.loadInvoiceDetailGrid($("#hdnJobInvoiceID").val())
                    var queryString = '';
                    queryString += 'invoiceID=' + $("#hdnJobInvoiceID").val() + '&';
                    queryString += 'isInvoiced=' + $("#drdInvoiced").val() + '&';
                    queryString += 'jobInvoiceType=' + $('#drdInvoiceType').val();
                    queryString = '?' + queryString;

                    var getUrl = '@Url.Action("JobInvoiceTotalPartialView", "JobInvoiceDetail")' + queryString;
                    $.ajax({
                        url: getUrl,
                        type: "GET",
                        //data: { "jobId": jobId, "categoryID": categoryID, "order": order, "fromDate": fromDate, "toDate": toDate },
                        cache: false,
                        async: false,
                        success: function (Data) {
                            if (Data != null) {
                                $(".clslblSubTotal1").text(parseFloat(Data.SubTotal).toFixed(2));
                                $(".clslblSubTotal2").text(parseFloat(Data.SubTotal).toFixed(2));
                                $(".clslblTotalActualCost").text(parseFloat(Data.Cost).toFixed(2));
                                $(".clslblTotalProfit_TotalMargin").text(parseFloat(Data.Profit).toFixed(2) + ' / ' + Data.Margin + " %");
                                $(".clslblTax").text(parseFloat(Data.Tax).toFixed(2));
                                $(".clslblSummaryTotal").text(parseFloat(Data.SummaryTotal).toFixed(2));
                                $(".clslblPayments").text(parseFloat(Data.Payments).toFixed(2));
                                $(".clslblTotalRemaining").text(parseFloat(Data.Ramaning).toFixed(2));

                                $(".clslblSubTotalFooter").text(parseFloat(Data.SubTotal).toFixed(2));
                                $(".clslblCostFooter").text(parseFloat(Data.Cost).toFixed(2));
                                $(".clslblProfitFooter").text(parseFloat(Data.Profit).toFixed(2));
                                $(".clslblMarginFooter").text(Data.Margin);
                            }
                            //$("#divJobInvoiceTotal").html($.parseHTML(Data));
                        }
                    });
                    //jobInvoiceDetail.loadData($("#hdnJobInvoiceID").val());
                }
            });

            //$('#drdInvoiceTo').on('change', function () {

            //});

        }

        function sendInvoice() {
            //Email configuration not required
            if ('@ProjectSession.IsUserEmailAccountConfigured' != 'False') {
                if ($("#hdnJobInvoiceID")) {
                    var invoiceID = $("#hdnJobInvoiceID").val();
                    if (invoiceID != 0) {
                        var id = $("#drpInvoiceTo").val();
                        if (id != undefined && id != '') {

                            var sendMail = true;
                            var jobID = '', queryString = '', emailId = '', invoiceSendUserID = '', fileExit = '';

                            if ($("#imgPDFIcon").length != 0) {
                                fileExit = 1;
                            }

                            //fileExit = $("#hdnFileExist").val();
                            //console.log("hdnFileExist == " + fileExit);
                            if (fileExit == 0) {
                                alert("Please first generate invoice for this record then try to send invoice to respective person.")
                                return false;
                                //if (confirm("Are you sure you want to send mail without invoice file?")) {
                                //    sendMail = true;
                                //}
                                //else {
                                //    sendMail = false;
                                //}
                            }
                            else {

                                jobID = $("#hasJobID").val();

                                if ($("#hdnInvoiceToUserType").val() == '2' && (jobID == undefined || jobID == '')) {
                                    sendMail = false;
                                }
                                else {
                                    queryString = queryString + "&jobID=" + jobID;
                                }


                                if ($("#hdnInvoiceToEmailId")) {
                                    emailId = $("#hdnInvoiceToEmailId").val();
                                    queryString = queryString + "&emailId=" + emailId;
                                }
                                if ($("#hdnInvoiceToUserId")) {
                                    invoiceSendUserID = $("#hdnInvoiceToUserId").val();
                                    queryString = queryString + "&invoiceSendUserID=" + invoiceSendUserID;
                                }

                                console.log("sendMail 2 == " + sendMail);
                                if (sendMail == true) {
                                    var url = '@Url.Action("SendInvoice", "JobInvoiceDetail")?id=' + id
                                        + '&invoiceId=' + $("#hdnJobInvoiceID").val()
                                        + '&userType=' + $("#hdnInvoiceToUserType").val() + queryString + "&&invoiceNumber=" + $("#imgPDFIcon").attr("filename");


                                    $.ajax(
                                       {
                                           url: url,
                                           method: 'POST',
                                           cache: false,
                                           success: function (success) {
                                               $(".alert").hide();
                                               //$("#successMsgRegion").html(closeButton + "Job invoice time has been saved successfully.");
                                               $("#successMsgRegion").html(closeButton + "Invoice send successfully.");
                                               $("#successMsgRegion").show();

                                           },
                                           error: function (success) {

                                           }
                                       });
                                }
                            }
                        }
                    }
                    else {
                        $(".alert").hide();
                        $("#errorMsgRegion").html(closeButton + "First add invoice component and try again.");
                        $("#errorMsgRegion").show();

                    }
                }
            }
            else {
                //Email configuration not required
                EmailAccountConfigureErrorMessage();
                return false;
            }
        }

        pub.openPopup = function (id, type) {


        }

        return {
            submitXeroDraft: function () { pub.submitToXero('1') },
            submitXeroApprove: function () { pub.submitToXero('2') },
            documentReady: documentReady,
            sendInvoice: sendInvoice,
            openPopup: function (id, type) { pub.openPopup(id, type) },
        };

    })();
    submitInvoiceDetail.documentReady();

    @*function deleteInvoiceDetial()
    {
        var url = '@Url.Action("DeleteJobInvoiceDetail", "JobInvoiceDetail")?invoiceDetailID=123';

        $.ajax(
           {
               url: url,
               method: 'POST',
               cache: false,
               success: function (success) {

               },
               error: function (success) {

               }
           });
    }*@

    function deleteInvoiceDetial() {
        var selectedRows = '';
        $('#invoiceDetailListTable tbody input[type="checkbox"]').each(function () {
            if ($(this).prop('checked') == true) {
                selectedRows = selectedRows + $(this).attr('id').substring(4) + ",";
            }
        })

        if (selectedRows != null && selectedRows.length > 0) {
            var result = confirm("Are you sure you want to delete selected invoice item(s) ?");
            if (result) {
                $.ajax({
                    url: '@Url.Action("DeleteJobInvoiceDetail", "JobInvoiceDetail")?ids=' + selectedRows,
                    type: "POST",
                    async: false,
                    contentType: "application/text; charset=utf-8",
                    success: function (data) {
                        if (data.success) {
                            $(".alert").hide();
                            $("#successMsgRegion").html(closeButton + "Invoice item(s) deleted successfully.");
                            $("#successMsgRegion").show();

                            $("#invoiceDetailListTable").dataTable().fnDraw();
                        }
                    },
                });
            }
        }
        else {
            alert('Please select any component for delete.');
        }
        $('#btnInvoiceAction').click();
    }

    function submitXeroDraft(invoiceStatus) {

        var invoiceID = '', invoiceNumber = '', jobID = '', contactName = '', invoicePaidStatus = '';

        if ($("#hdnJobInvoiceID"))
            invoiceID = $("#hdnJobInvoiceID").val();

        if ($("#InvoiceNumber"))
            invoiceNumber = $("#InvoiceNumber").val();

        if ($("#hasJobID"))
            jobID = $("#hasJobID").val();

        if ($("#drpInvoiceTo"))
            contactName = $("#drpInvoiceTo").text();

        if ($("#drdInvoiceStatus"))
            invoicePaidStatus = $("#drdInvoiceStatus").val();


        if (invoiceID != '' && invoiceNumber != '' && invoiceStatus != '') {

            var url = '@Url.Action("submitToZero", "JobInvoiceDetail")?invoiceID=' + invoiceID +
                '&invoiceNumber=' + invoiceNumber + '&invoiceStatus=' + invoiceStatus
                + '&jobID=' + jobID + '&contactName=' + contactName + '&invoicePaidStatus=' + invoicePaidStatus;
            $.ajax(
               {
                   url: url,
                   method: 'POST',
                   cache: false,
                   success: function (success) {

                   },
                   error: function (success) {

                   }
               });

        }
    }

    function FileUpload(objFileUpload, Guid, objTableFileControl, fullFileName) {
        'use strict';

        var jobId = $("#BasicDetails_JobID").val();
        var url = '@Url.Action("UploadInvoice", "Job")';
        $("#loading-image").show();
        $("#loading-image").hide();

        objFileUpload.fileupload({

            url: url,
            dataType: 'json',
            done: function (e, data) {
                var UploadFailedFiles = [];
                UploadFailedFiles.length = 0;

                for (var i = 0; i < data.result.length; i++) {
                    if (data.result[i].Status == true) {

                        var guid = Guid;

                        var OldInvoiceFile = fullFileName;
                        var Sign = document.getElementsByName("Signature")
                        if (Sign.length > 0) {
                            var signName = Sign[0].defaultValue;

                            if (signName != null && signName != "") {
                                DeleteFileFromFolderAndInvoice(signName, jobId, OldInvoiceFile);
                            }

                        }

                        $("[name='Signature']").each(function () {
                            $(this).remove();
                        });



                        data.result[i].FileName.substr(0, data.result[i].FileName.indexOf('_')); // "72"
                        data.result[i].FileName.substr(data.result[i].FileName.indexOf('_') + 1); // "tocirah sneab"

                        var originalFileName = data.result[i].FileName.substr(data.result[i].FileName.indexOf('_') + 1);

                        $('<input type="hidden">').attr({
                            name: 'Signature',
                            value: data.result[i].FileName,
                            id: data.result[i].FileName,
                        }).appendTo('form');

                        var result = "<tr class='success' data-tmpname='" + data.result[i].FileName + "' data-filename='" + data.result[i].FileName + "'><td>" + originalFileName + "</td><td><img src='@FormBot.Helper.ProjectConfiguration.ProjectImagePath/images/delete-icon.png' id='signDelete' title='Delete'  style='cursor: pointer' oldFileName='" + fullFileName + "'  filename='" + data.result[i].FileName + "' onclick='deleteInvoiceImage(this);'></td></tr>"; objTableFileControl.append(result);

                        objTableFileControl.html(result);

                    }
                    else {
                        UploadFailedFiles.push(data.result[i].FileName);
                    }
                }
                if (UploadFailedFiles.length > 0) {
                    $(".alert").hide();
                    $("#successMsgRegionPopUp").hide();
                    message = "File has not been uploaded."
                    showErrorMessage(message);
                }
                else {
                    $(".alert").hide();
                }
            },
            progressall: function (e, data) {

            },

            singleFileUploads: false,
            send: function (e, data) {

                var documentType = data.files[0].type.split("/");
                var mimeType = documentType[0];
                if (data.files.length > 1) {
                    for (var i = 0; i < data.files.length; i++) {
                        if (data.files[i].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                            $(".alert").hide();
                            $("#successMsgRegionPopUp").hide();

                            message = data.files[i].name + " Maximum file size limit exceeded. Please upload a file smaller  than" + " " + maxsize + "MB";
                            showErrorMessage(message);

                            return false;
                        } else if (CheckSpecialCharInFileName(data.files[i].name)) {
                            $(".alert").hide();
                            $("#successMsgRegionPopUp").hide();
                            message = "Please upload file that not conatain <> ^ [] .";
                            showErrorMessage(message);
                            return false;
                        }
                    }
                }
                else {
                    if (data.files[0].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                        $(".alert").hide();
                        $("#successMsgRegionInvoice").hide();
                        message = "Maximum  file size limit exceeded.Please upload a  file smaller than" + " " + maxsize + "MB";
                        showErrorMessage(message);
                        return false;
                    } else if (CheckSpecialCharInFileName(data.files[0].name)) {
                        $(".alert").hide();
                        $("#successMsgRegionInvoice").hide();
                        message = "Please upload file that not conatain <> ^ [] .";
                        showErrorMessage(message);
                        return false;
                    }
                }

                $(".alert").hide();
                $("#errorMsgRegion").html("");
                $("#errorMsgRegion").hide();

                $('<input type="hidden">').attr({
                    name: 'Guid',
                    value: Guid,
                    id: Guid,
                }).appendTo('form');
                return true;

            },
            formData: { guid: Guid, jobId: jobId }
        });
    }
    function DeleteFileFromFolderAndInvoice(fileNames, guid, OldInvoiceFile) {
        $.ajax(
            {
                url: '@Url.Action("DeleteFileFromInvoiceFolder", "Job")',
                data: { fileName: fileNames, FolderName: guid, OldInvoiceFile: OldInvoiceFile },
                contentType: 'application/json',
                method: 'get',
                success: function (data) {

                },
            });
    }
    function deleteInvoiceImage(obj) {
        var fileName = $(obj).attr('filename');
        var FolderName = $("#JobId").val();
        var OldFileName = $(obj).attr('oldFileName');
        if (confirm('Are you sure you want to delete this file ?')) {
            $.ajax(
                    {
                        url: '@Url.Action("DeleteFileFromInvoiceFolder", "JobInvoiceDetail")',
                        data: { fileName: fileName, FolderName: FolderName, OldInvoiceFile: OldFileName },
                        contentType: 'application/json',
                        method: 'get',
                        success: function () {
                            $("#tblSelectedFile1").html("");
                            $("#tblSelectedFile2").html("");
                            $("#tblSelectedFile3").html("");
                            $("[name='Signature']").each(function () {
                                $(this).remove();
                            });
                            return false;
                        }
                    });
        }
    }

    function OnlyDecimalAllow(obj, event) {
        var $this = obj;
        if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
           ((event.which < 48 || event.which > 57) &&
           (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }

        var text = obj.val();
        if ((event.which == 46) && (text.indexOf('.') == -1)) {
            setTimeout(function () {
                if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                    $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                }
            }, 1);
        }

        if ((text.indexOf('.') != -1) &&
            (text.substring(text.indexOf('.')).length > 2) &&
            (event.which != 0 && event.which != 8) &&
        (obj[0].selectionStart >= text.length - 2)) {
            event.preventDefault();
        }
    }

    //Proof of Open upload
    function OpenDocument(obj) {

        var JobId = $("#JobId").val();
        var UploadedDocumentPath = '@FormBot.Helper.ProjectSession.UploadedDocumentPath';
        var fileName = $(obj).attr('filename');
        var imagePath = UploadedDocumentPath + "/" + "JobDocuments" + "/" + JobId + "/" + "Invoice" + "/" + fileName;
        $("#loading-image").css("display", "");
        //$('#imgViewImage').attr("src", imagePath);

        $('#imgViewImage').attr("src", imagePath).load(function () {

            logoWidth = this.width;
            logoHeight = this.height;

            $('#popupProof').modal({ backdrop: 'static', keyboard: false });

            if ($(window).height() <= logoHeight) {
                //$("#imgViewImage").height($(window).height() - 205);

                $("#imgViewImage").closest('div').height($(window).height() - 205);
                $("#imgViewImage").closest('div').css('overflow-y', 'scroll');
                $("#imgViewImage").height(logoHeight);
            }
            else {
                $("#imgViewImage").height(logoHeight);
                $("#imgViewImage").closest('div').removeAttr('style');
            }

            if (screen.width <= logoWidth || logoWidth >= screen.width - 250) {
                //$("#imgViewImage").width(screen.width - 10);
                //$("#popupProof").find(".modal-dialog").width(screen.width - 10);
                $('#popupProof').find(".modal-dialog").width(screen.width - 250);
                $("#imgViewImage").width(logoWidth);
            }
            else {
                $("#imgViewImage").width(logoWidth);
                $("#popupProof").find(".modal-dialog").width(logoWidth);
            }

            $("#loading-image").css("display", "none");
        });
        $("#imgViewImage").unbind("error");
        $('#imgViewImage').attr("src", imagePath).error(function () {
            alert('Image does not exist.');
            $("#loading-image").css("display", "none");
        });
    }

    //Proof of Download Document
    function DownloadDocument(obj) {

        var JobId = $("#JobId").val();
        var fileName = $(obj).attr('filename');
        window.location.href = '@Url.Action("ViewDownloadInvoiceFile", "JobInvoiceDetail")?FileName=' + fileName + '&JobID=' + JobId;
    }

    function DownloadReport(obj) {
        var JobId = $("#hasJobID").val();
        var fileName = $(obj).attr('filename');
        if (JobId != undefined)
            window.location.href = '@Url.Action("ViewDownloadInvoiceReportFile", "JobInvoiceDetail")?FileName=' + fileName + '&JobID=' + JobId;
        @*var ajaxUrl = '@Url.Action("ViewDownloadInvoiceReportFile", "JobInvoiceDetail")?FileName=' + fileName + '&JobID=' + JobId;
        $.ajax(
              {
                  url: ajaxUrl,
                  contentType: 'application/json',
                  method: 'get',
                  success: function (data) {
                      if (data == false) {
                          $(".alert").hide();
                          $("#errorMsgRegion").html("File not found.");
                          $("#errorMsgRegion").show();

                      }
                      else {
                          window.location = data;
                      }
                  }
              });*@
    }

    $('.modal').on('hidden.bs.modal', function (e) {
        if ($('.modal').hasClass('in')) {
            $('body').addClass('modal-open');
        }
    });

    // GenerateInvoice11
    $("#generateInvoice").on("click", function () {
        var hdnJobInvoiceID = $("#hdnJobInvoiceID").val();
        var data_href = $(this).attr('data-id');

        $.ajax({
            url: data_href,
            contentType: 'application/json',
            method: 'get',
            success: function (data) {
                if (data.status == "Completed") {
                    $(".alert").hide();
                    $("#successMsgRegion").html(closeButton + data.strErrors);
                    $("#successMsgRegion").show();

                    jobInvoiceDetail.loadData(hdnJobInvoiceID);
                }
                else {
                    $(".alert").hide();
                    $("#errorMsgRegion").html(closeButton + data.strErrors);
                    $("#errorMsgRegion").show();

                }
            }
        });
    });

</script>