@using FormBot.Helper;
@{
    ViewBag.Title = "SendRequest";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<link href="~/Content/style.css" rel="stylesheet" />*@
@model FormBot.Entity.DocumentSignatureRequest.DocumentSignatureRequest
@Html.ValidationSummary(true)
@Html.AntiForgeryToken()
<style>
    .datatableSendEmailJobList {
        width: 100% !important;
    }
</style>
<div class="container-fluid create-job">
    <div class="title formGroupName">
        <h1>Group Name</h1>
        <a href="#" id="addGroupName" class="primary pull-right btn icon-btn" title="Add group Name"><span class="sprite-img add_ic"></span> Add Group Name</a>
    </div>
    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionDocumentSignatureRequest" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegionDocumentSignatureRequest" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="form-block formGroupName">
        <div class="col-sm-6 col-md-6 col-lg-3">
            <div class="form-group">
                <label class="control-label">Group Name:</label>
                <input type="text" id="txtGroupName" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearchGroupName').click()">
            </div>
        </div>
        <div class="form-group col-xs-12">
            <input type="button" id="btnSearchGroupName" value="Search" class="primary search_ic" onclick="SearchGroupName();">
            <div class="default btn icon-btn" onclick="ResetGroupName();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnResetGroupName" value="Reset" class="">
            </div>
        </div>
    </div>
    <div class="grid_topbar formGroupName">
        <p class="job_result" id="numRecordsGroupNameList"></p>
        <a href="#" onclick="deleteGroupName()" class="primary pull-right delete_ic marg-r-0" title="Delete Template">Delete Group Name</a>
    </div>
    <div class="formGroupName">
        <div id="grid" class="GroupNameListing">
            <div class="table-responsive">
                <table id="datatableGroupNameList" class="table table-hover  datatableGroupNameList">
                    <thead>
                        <tr>
                            <th style="background-image:none !important;"><input type="checkbox" id="chkAll" name="select_all"></th>
                            <th>Group Id</th>
                            <th><span>@Html.DisplayName("Group Name")</span></th>
                            <th><span>@Html.DisplayName("Document Template Name")</span></th>
                            <th class="action"><span>@Html.DisplayName("Action")</span></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade popupTemplateName popupGroupName" tabindex="-1" role="dialog" id="popupAddGroupName">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                        <img src='@Url.Content("~/images/close-btn.png")' alt="">
                    </button>
                    <h4 class="modal-title">Bulk upload document group name</h4>
                </div>
                <div class="modal-body create-job">
                    <form id="addGroupNameForm">
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionAddGroupName" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <div class="form-box">
                            @Html.HiddenFor(m => m.bulkUploadDocumentGroup.BulkUploadDocumentGroupId)
                            <div class="clearfix">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.bulkUploadDocumentGroup.GroupName, new { @class = "control-label required" })
                                    @Html.TextBoxFor(m => m.bulkUploadDocumentGroup.GroupName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.bulkUploadDocumentGroup.GroupName)
                                </div>
                            </div>
                            <div class="documentGroupSection">
                                <div class="form-inline">
                                    <div class="form-group" style="margin-bottom:15px;">
                                        <label class="control-label" style="margin-top:8px; float:left;">Select Category</label>
                                        <div class="col-md-6">
                                            <select id="ddlBulkUploadDocumentCat" class="form-control"></select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="mCustomScrollbar well" style="overflow:auto;max-height:300px;">
                                        <ul class="list-group checked-list-box" id="tbodyItemsDocumentSignatureRequest" style="margin-bottom:0px;"></ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="border-top:0px !important;">
                            <button type="button" class="btn primary save_ic icon-btn" onclick="addGroupName()"><span class="sprite-img save_ic"></span>Save</button>
                            <button type="button" class="btn default cancel_ic" onclick="clearGroupName()">Clear</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var urlGetStateList = '@Url.Action("GetStateList", "Job")';
    var urlGetDocumentsByStateId = '@Url.Action("GetDocumentTemplateByStateId", "DocumentSignatureRequest")';
    var urlGetGroupNameList = '@Url.Action("Binddropdown_GetBulkUploadDocumentGroupNameList", "DocumentSignatureRequest")';
    var urlGetSolarCompanyByResellerId = '@Url.Action("GetSolarCompanyByResellerId","SolarCompany")';
    var urlGetEmailTemplateList = '@Url.Action("GetEmailTemplateList", "DocumentSignatureRequest")'
    $(document).ready(function () {
        $('#datatableGroupNameList').DataTable({
            iDisplayLength: 10,
            lengthMenu:@ProjectConfiguration.GetPageSize,
            language: {
                sLengthMenu: "Page Size: _MENU_"
            },
            columns: [
                {
                    'data': 'BulkUploadDocumentGroupId',
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        return '<input type="checkbox" class="chkRow" id=' + full.Id + '  >';
                    }
                },
                {
                    'data': 'BulkUploadDocumentGroupId',
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        return "<div>" + full.BulkUploadDocumentGroupId + "</div>";
                    }
                },
                {
                    'data': 'GroupName',
                    "orderable": true,
                    "render": function (data, type, full, meta) {
                        var editHref = "javascript:OpenDocumentGroupDetailsPopup('" + full.Id + "','true')";
                        return '<a href="' + editHref + '">' + full.GroupName + '</a>';
                    }
                },
                {
                    'data': 'DocumentName',
                    "orderable": false,
                    "render": function (data, type, full, meta) { return full.DocumentTemplateName; }
                },
                {
                    'data': 'BulkUploadDocumentGroupId',
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        var editHref = full.GroupEditURL;
                        var imgedit = 'background:url(../Images/edit-icon.png) no-repeat center; text-decoration:none;';
                        var returnHTML = '<a href="' + editHref + '" class="action edit" style="' + imgedit + '" title="Edit">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                        return returnHTML;
                    },
                }
            ],
            dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
            initComplete: function (settings, json) {
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");
            },
            bServerSide: true,
            sAjaxSource: '@Url.Action("GetBulkUploadDocumentGroupNameList", "DocumentSignatureRequest")',
            "fnDrawCallback": function () {
                $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                $(".paging a.previous").html("&nbsp");
                $(".paging a.next").html("&nbsp");
                $('.grid-bottom span:first').attr('id', 'spanMain');
                $("#spanMain span").html("");
                $(".ellipsis").html("...");
                if ($(".paging").find("span").length > 1) {
                    $("#datatable_length").show();
                } else if ($(".datatableGroupNameList").find("tr").length > 11) { $("#datatable_length").show(); } else { $("#datatable_length").hide(); }
                var table = $('#datatableGroupNameList').DataTable();
                var info = table.page.info();
                if (info.recordsTotal == 0) {
                    document.getElementById("numRecordsGroupNameList").innerHTML = '<b>' + 0 + '</b>  of  <b>' + info.recordsTotal + '</b>  Document group are found';
                }
                else {
                    document.getElementById("numRecordsGroupNameList").innerHTML = '<b>' + this.fnSettings().json.iTotalRecords + '</b>  of  <b>' + this.fnSettings().fnRecordsTotal() + '</b>  Document group are found';
                }
                $('[data-toggle="tooltip"]').tooltip();
                $(".chkRow").change(function () {
                    AllCheckboxIsCheckedOrNot();
                });
            },
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "groupName", "value": $("#txtGroupName").val() });
            }
        });
    });

    $("#chkAll").click(function () {
        $('#datatableGroupNameList .chkRow').not(this).prop('checked', this.checked);
    });
    function AllCheckboxIsCheckedOrNot() {
        if ($(".chkRow:checkbox:checked").length == $(".chkRow").length) {
            $("#chkAll").prop('checked', true);
        }
        else {
            $("#chkAll").prop('checked', false);
        }
    }
    $("#addGroupName").click(function () {
        $("#popupAddGroupName").modal({ backdrop: 'static', keyboard: false });
        $("#bulkUploadDocumentGroup_GroupName").removeClass("input-validation-error");
        $("#bulkUploadDocumentGroup_GroupName").next().hide();
        $("#bulkUploadDocumentGroup_GroupName").val('');
        $("#bulkUploadDocumentGroup_BulkUploadDocumentGroupId").val(0);
        $("#popupAddGroupName").find('.documentGroupSection').show();
        $.get(urlGetStateList, function (response) {
            if (response) {
                var states = JSON.parse(response).Table;
                var options = "";
                options += '<option value=' + -1 + '>' + "STC" + '</option>'
                options += '<option value=' + -2 + '>' + "CES" + '</option>'
                options += '<option value=' + 0 + '>' + "Custom" + '</option>'
                for (var i = 0; i < states.length; i++) {
                    options += '<option value=' + states[i].StateID + '>' + states[i].Name + '</option>'
                }
                $('#ddlBulkUploadDocumentCat').html('');
                $('#ddlBulkUploadDocumentCat').append(options);
                $('#ddlBulkUploadDocumentCat').change();
            }
        });
    })
    $('#ddlBulkUploadDocumentCat').change(function () {
            $.get(urlGetDocumentsByStateId + "?stateId=" + this.value, function (response) {
                var $tbody = $('#tbodyItemsDocumentSignatureRequest');
                $tbody.html('');
                if (response) {
                    var data = JSON.parse(response).Table;
                    for (var i = 0; i < data.length; i++) {
                        var li = $('<li/>').addClass('list-group-item').data({ 'documentTemplateId': data[i].DocumentTemplateId}).appendTo($tbody);
                        var $div = $('<div/>').addClass('checkbox').appendTo(li);
                        var $lable = $('<label/>').css({ 'word-wrap': 'break-word' }).appendTo($div);
                        var input = '<input type="checkbox" onchange="documentChoiceChange(this)">' + data[i].DocumentTemplateName;
                        $lable.html(input);
                    }
                }
            });
    });
    function documentChoiceChange(obj) {
        if ($(obj).prop('checked')) {
            $("#tbodyItemsDocumentSignatureRequest").find('li').find('[type="checkbox"]').each(function () {
                $(this).prop('checked',false)
            })
            $(obj).prop('checked', true);
        }

    }
    function SearchGroupName() {
        $('.datatableGroupNameList').dataTable().fnDraw();
    }
    function deleteGroupName() {
        var bulkDocumentGroupId = [];
        $(".datatableGroupNameList").find('[type="checkbox"]:checked').each(function () {
            bulkDocumentGroupId.push($(this).attr('id'));
        })
        if (bulkDocumentGroupId != null && bulkDocumentGroupId.length>0){
            if (confirm('Are you sure you want to delete this record ?')) {
                $.ajax(
                {
                    url: '@Url.Action("DeleteGroupName", "DocumentSignatureRequest")',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    type: 'get',
                    data: { bulkDocumentGroupId: JSON.stringify(bulkDocumentGroupId)},
                    success: function (response) {
                        if (response.id && response.id > 0) {
                            showSuccessMessageForDocumentSignatureRequest("Group Name has been deleted successfully.");
                            $("#chkAll").prop('checked',false);
                            $(".datatableGroupNameList").dataTable().fnDraw();
                        }
                        else {
                            if (response.error.toLowerCase() == 'sessiontimeout')
                                window.location.href = '@Url.Action("Logout", "Account")';
                            else
                                showErrorMessageForDocumentSignatureRequest("Group name has not been deleted.");
                        }
                    },
                    error: function () {
                        showErrorMessageForDocumentSignatureRequest("Group name has not been deleted.");
                    }
                });
            }
            else
            {
                if(selectedRows==null || selectedRows.length == 0)
                    alert('Please select any check list template to remove.');
            }
        }
    }
    function ResetGroupName() {
        $("#txtGroupName").val('');
        $('.datatableGroupNameList').dataTable().fnDraw();
    }
    function clearGroupName() {
        $("#bulkUploadDocumentGroup_GroupName").val('');
        $("#tbodyItemsDocumentSignatureRequest").find('li').find('[type="checkbox"]').prop("checked", false);
    }
    function addGroupName() {
        $("#bulkUploadDocumentGroup_GroupName").rules("add", {
            required: true,
            messages: {
                required: "Group Name is required."
            }
        });
        $("#bulkUploadDocumentGroup_GroupName").next().show();
        if ($("#addGroupNameForm").valid()) {
            if ($("#bulkUploadDocumentGroup_BulkUploadDocumentGroupId").val() <= 0) {
                if ($("#tbodyItemsDocumentSignatureRequest").find('li').find('[type="checkbox"]:checked').length == 0) {
                    alert("please select one document");
                    return;
                }
            }
            
            var documentTemplateId = $("#tbodyItemsDocumentSignatureRequest").find('li').find('[type="checkbox"]:checked').closest('li').data('documentTemplateId')
            $.ajax({
                url: '@Url.Action("InsertUpdateGroupName", "DocumentSignatureRequest")',
                type: "POST",
                data: JSON.stringify({ "GroupName": $("#bulkUploadDocumentGroup_GroupName").val(), "DocumentTemplateId": documentTemplateId, "BulkUploadDocumentGroupId": $("#bulkUploadDocumentGroup_BulkUploadDocumentGroupId").val() }),
                contentType: "application/json",
                datatype: "json",
                success: function (response) {
                    if (response) {
                        $("#popupAddGroupName").modal('hide');
                        if ($("#bulkUploadDocumentGroup_BulkUploadDocumentGroupId").val() != 0) {
                            showSuccessMessageForDocumentSignatureRequest("Group name updated succesfully")
                        } else {
                            showSuccessMessageForDocumentSignatureRequest("Group name added succesfully")
                        }

                        $('.datatableGroupNameList').dataTable().fnDraw();
                    } else {
                        showErrorMessageForDocumentSignatureRequest("Group name not added successfully")
                    }
                },
                error: function (response) {
                }
            })
        }
    }
    function OpenDocumentGroupDetailsPopup(bulkDocumentGroupId,isUpdateGroup) {
        $.ajax({
            url: '@Url.Action("GetBulkDocumentGroupNameBasedOnId", "DocumentSignatureRequest")',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            type: 'get',
            data: { bulkDocumentGroupId: bulkDocumentGroupId},
            success: function (response) {
                if (response.data) {
                    $("#addGroupName").click();
                    $("#bulkUploadDocumentGroup_GroupName").val(response.data.GroupName);
                    if (isUpdateGroup) {
                        //$("#addGroupNameForm").find('.modal-footer').hide();
                        $("#popupAddGroupName").find('.documentGroupSection').hide();
                        //$("#ddlBulkUploadDocumentCat").prop('disabled', true);
                    }
                    //setTimeout(function ()
                    //{
                    //    $("#ddlBulkUploadDocumentCat").val(response.data.StateID);
                    //    $("#ddlBulkUploadDocumentCat").change();

                    //}, 1000);
                    //setTimeout(function () {
                    //    $("#tbodyItemsDocumentSignatureRequest").find('li').each(function () {
                    //        if ($(this).data('documentTemplateId') == response.data.DocumentTemplateId) {
                    //            $(this).find('[type="checkbox"]').prop("checked", true);
                    //        }
                    //    })
                    //    if (isUpdateGroup) {
                    //        //$("#addGroupNameForm").find('.modal-footer').hide();
                    //        $("#addGroupNameForm").find('[type="checkbox"]').prop('disabled', true);
                    //        $("#ddlBulkUploadDocumentCat").prop('disabled', true);
                    //    }
                    //}, 2000);
                    $("#bulkUploadDocumentGroup_BulkUploadDocumentGroupId").val(bulkDocumentGroupId)
                   
                }
                else {
                    if (response.error.toLowerCase() == 'sessiontimeout')
                        window.location.href = '@Url.Action("Logout", "Account")';
                    else
                        showErrorMessageForDocumentSignatureRequest(response.error);
                }
            },
            error: function () {
                showErrorMessageForDocumentSignatureRequest("Group Name has not been opened.");
            }
        });
    }
    function showSuccessMessageForDocumentSignatureRequest(message) {
        $(".alert").hide();
        $("#errorMsgRegionDocumentSignatureRequest").hide();
        $("#successMsgRegionDocumentSignatureRequest").html(closeButton + message);
        $("#successMsgRegionDocumentSignatureRequest").show();
    }
    function showErrorMessageForDocumentSignatureRequest(message) {
        $(".alert").hide();
        $("#errorMsgRegionDocumentSignatureRequest").show();
        $("#errorMsgRegionDocumentSignatureRequest").html(closeButton + message);
        $("#successMsgRegionDocumentSignatureRequest").hide();
    }
</script>
