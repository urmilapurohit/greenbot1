@model FormBot.BAL.Service.DocumentSignatureRequest.JobDocumentSignatureDetails
@*<link href="~/Content/style.css" rel="stylesheet" />*@
<script src="~/Scripts/jquery.nicescroll.min.js"></script>

@Html.HiddenFor(x => x.jobDocumentId)
@Html.HiddenFor(x => x.fieldName)
<input data-val="true" id="type" name="type" type="hidden" value="@Model.type">
@Html.HiddenFor(x => x.jobid)
<style>
    .redBorder {
        border: 2px solid red !important;
    }
</style>
<script>
        var url_Viewer = '@Url.Action("_ViewerForBulkUpload", "Job")';
        var url_SendMessage = '@Url.Action("AddMessageWithDocumentMapped", "DocumentSignatureRequest")';
</script>
<div style="position:fixed; top:100px; left:0; right:0; margin:auto; max-width:700px;z-index: 99;">
    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegion" style="display:none; box-shadow: 0 0 30px #00000040; ">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegion" style="display: none; box-shadow: 0 0 30px #00000040;">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
</div>
<div class="clearfix">
    <div class="title">
        <h1>Document Sign</h1>
        <div class="zoom-section">
            <select id="zoom-dropdown" style="height:25px;font-size:14px;">
                <option value="25">25%</option>
                <option value="50">50%</option>
                <option value="75">75%</option>
                <option value="100" selected>100%</option>
                <option value="125">125%</option>
                <option value="150">150%</option>
            </select>
            <a href="#" id="zoom-in-icon"><img src="~/Images/Document/zoom-in.svg" height="20" width="20" /></a>
            <a href="#" id="zoom-out-icon"><img src="~/Images/Document/zoom-out.svg" height="20" width="20" /></a>
        </div>
    </div>
    <div class="document-load-section">
        <div class="left-document-section">
            <div class="document-block">
                <div id="DocumentLoadWithControls"></div>
            </div>
        </div>
        <div class="messages-section">
            <div class="messages-block">
                <div class="message-listing">
                </div>
                <div class="chat-text-box clearfix">
                    <div class="textarea-box">
                        <textarea id="txtMessage" placeholder="Send a reply..."></textarea>
                    </div>
                    <div class="send-block">
                        <button class="send-msg-btn" id="btnSendMessage" onclick="SendMessage()"></button>
                    </div>
                </div>
            </div>
            @*<div class="message-form">
                        <input class="form-control" type="text" multiple id="txtMessage" />
                        <input type="button" class="btn btn-primary send-btn" id="btnSendMessage" onclick="SendMessage()" value="send message" />
                </div>*@
        </div>
    </div>
    <div class="btn-section clearfix">
        <input type="button" value="Complete Signing" onclick="SaveUserSignature();" id="btnCompleteSigning" class="btn btn-primary pull-right" disabled />
    </div>
</div>
<div>
    <div class="modal fade popupSignature" tabindex="-1" id="popupBulkUploadSignature">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center-serial">
                <div class="modal-content signatureDocument">
                    <div class="modal-header">
                        <button type="button" class="close sprite-img" data-dismiss="modal" aria-label="Close"></button>
                        <h4 class="modal-title">Draw Signature</h4>
                    </div>
                    <div class="modal-body" style="overflow:auto !important">
                        <form id="signatureSend">
                            <div class="form-group">
                                <label class="control-label" style="background-color: #E4E4E4; width: 100%; padding: 10px;">SIGN HERE:</label>
                                <select class="form-control" id="drpSignatureBy" style="width: 100%; margin: 0 10px; min-width: 94%;">
                                    <option value="1">Upload</option>
                                    <option value="2">Draw</option>
                                </select>
                            </div>
                        </form>
                        <div style="padding:10px">
                            <table class="uf" style="margin-left:-10px;" id="tblUpload">
                                <tr>
                                    <td width="70" style="vertical-align:top;">
                                        <div class="fileUpload primary upload_ic" id="divUpload">
                                            <span>Upload</span>
                                            <input id="uploadBtnUserSignature" type="file" class="upload fileUpload" tabindex="41" />
                                        </div>
                                    </td>
                                    <td>
                                        <div class="bxcont" style="margin-top:7px;">
                                            <a id="imgOwnerSignatureView" href="javascript:void(0)" style="display:none;text-decoration:none">&nbsp; &nbsp; View Image</a>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                            <table width="100%" border="0" cellpadding="0" cellspacing="0" id="tblDraw" style="display:none">
                                <tr>
                                    <td>
                                        <div id="divSignature">
                                            <div id="jSignature" style="opacity: 0.8; border: 1px dotted rgb(0, 0, 0) !important;" onchange="jobSignChange()"></div>
                                            <button type="button" class="btn default reset_ic pull-right" onclick="$('#jSignature').jSignature('clear'); $('#IsSignature').val('False'); $('#JobOwnerDetails_OwnerBaseSignature').val('')">Reset</button>
                                        </div>
                                        <div>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="button" value="Save" class="primary" id="btnSaveSign-requestPage">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<span id="spansign" class="" style="color: #b94a48;display:none"></span>
<div class="modal fade" id="popupUserSign" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="btnClosepopupOwnerSign">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Signature</h4>
            </div>
            <div class="modal-body">
                <div class="form-border">
                    <div>
                        <img src="" id="imgUserSign" class="" style="display:inline;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*<script src="~/Scripts/View/Job/DocumentSignatureRequestForJobSpecific.js"></script>*@
<script type="text/javascript">
            var signDetail = [];
            var closeButton = '<button type="button" class="close" onclick="$(this).parent().hide();" aria-hidden="true">&times;</button>';
            var $ = $.noConflict();
            // #region Document related variable declare.
            var jobid = 0, jobDocumentPath = "", jobDocumentId = 0
            // #endregion

            $(document).ready(function () {
                // #region Set theme of website.
                var themeId = '@(ViewData.ContainsKey("theme") ? ViewData["theme"] : "green")';
                $('body').attr('id', themeId);
                // #endregion
                // #region Document Load with all controls.
                $('#DocumentLoadWithControls').load(url_Viewer + "?jobid=" + @Model.jobid + "&docId=0&isClassic=false" + "&jobDocumentPath=" + encodeURIComponent('@Model.jobDocumentPath') + "&jobDocumentId=" + @Model.jobDocumentId, function () {
                    setTimeout(function () {
                        $("#loading-image").show();
                    }, 500);
                });
                $(".document-load-section .left-document-section").getNiceScroll().resize();
                $(".messages-section .message-listing").getNiceScroll().resize();
                // #endregion
                $("#drpSignatureBy").change(function () {
                    if ($(this).val() == 1) {
                        $("#tblUpload").show();
                        $("#tblDraw").hide();
                    } else {
                        $("#tblDraw").show();
                        $("#tblUpload").hide();
                    }

                });
                $('#popupBulkUploadSignature').off().on('shown.bs.modal', function () {
                    $('#jSignature .jSignature').height(150);
                    $('#jSignature .jSignature').width(546);
                    $('#jSignature').find('canvas').attr('width', '546px !important')
                    $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").$controlbarLower.css('margin-bottom', '5.0em')
                    $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['lineWidth'] = 2;
                    $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['signatureLine'] = true;
                    $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").resetCanvas($('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['data'])
                    $('#jSignature').jSignature('reset');
                    var len = $("#divSignature").find('.jSignature').length;
                    if (len > 1) {
                        for (i = 0; i < len; i++) {
                            if (i == 0)
                                continue;
                            else
                                $($("#divSignature").find('.jSignature')[i]).remove();
                        }
                    }
                });
                $("#zoom-in-icon").click(function () {
                    var zoom = $("#zoom-dropdown").val().trim('%');
                    var newZoom = (parseInt(zoom) + 25) / 100;
                    $("#viewer").css("transform", "scale(" + newZoom + ")");
                    $("#viewer").css("transform-origin", "top");
                    $("#zoom-dropdown").val(newZoom * 100);
                    if ((newZoom * 100) == 150) {
                        $("#zoom-in-icon").addClass("disabled")
                    } else {
                        $("#zoom-in-icon").removeClass("disabled")
                    }
                    $(".document-load-section .left-document-section").getNiceScroll().resize();

                });
                $("#zoom-out-icon").click(function () {
                    var zoom = $("#zoom-dropdown").val().trim('%');
                    var newZoom = (parseInt(zoom) - 25) / 100;
                    $("#viewer").css("transform", "scale(" + newZoom + ")");
                    $("#viewer").css("transform-origin", "top");
                    $("#zoom-dropdown").val(newZoom * 100);
                    if ((newZoom * 100) == 25) {
                        $("#zoom-out-icon").addClass("disabled")
                        $("#zoom-in-icon").removeClass("disabled")
                    } else {
                        $("#zoom-out-icon").removeClass("disabled")

                    }
                    $(".document-load-section .left-document-section").getNiceScroll().resize();

                });
                $("#zoom-dropdown").change(function () {
                    var zoom = $("#zoom-dropdown").val().trim('%');
                    var newZoom = parseInt(zoom) / 100;
                    $("#viewer").css("transform", "scale(" + newZoom + ")");
                    $("#viewer").css("transform-origin", "top");
                    if ((zoom) == 150) {
                        $("#zoom-in-icon").addClass("disabled")
                    } else {
                        $("#zoom-in-icon").removeClass("disabled")
                    }
                    if (zoom == 25) {
                        $("#zoom-out-icon").addClass("disabled")
                    } else {
                        $("#zoom-out-icon").removeClass("disabled")
                    }
                    $(".document-load-section .left-document-section").getNiceScroll().resize();
                });
                MessageBlockRefresh();
                setTimeout(function () {
                    ReloadBodySection();
                    OutlinerField();
                    $("#loading-image").hide();
                }, 5000);


                $('#imgOwnerSignatureView').click(function () {
                    $("#loading-image").css("display", "");
                    $('#imgUserSign').attr('src', SRCUserSign.result).load(function () {
                        logoWidth = this.width;
                        logoHeight = this.height;
                        $('#popupUserSign').modal({ backdrop: 'static', keyboard: false });
                        if ($(window).height() <= logoHeight) {
                            $("#imgUserSign").closest('div').height($(window).height() - 150);
                            $("#imgUserSign").closest('div').css('overflow-y', 'scroll');
                            $("#imgUserSign").height(logoHeight);
                        }
                        else {
                            $("#imgUserSign").height(logoHeight);
                            $("#imgUserSign").closest('div').removeAttr('style');
                        }
                        if (screen.width <= logoWidth || logoWidth >= screen.width - 250) {

                            $('#popupUserSign').find(".modal-dialog").width(screen.width - 250);
                            $("#imgUserSign").width(logoWidth);
                        }
                        else {
                            $("#imgUserSign").width(logoWidth);
                            $('#popupUserSign').find(".modal-dialog").width(logoWidth);
                        }
                        $("#loading-image").css("display", "none");
                    });
                    $("#imgUserSign").unbind("error");
                    $('#imgUserSign').attr('src', SRCUserSign.result).error(function () {
                        alert('Image does not exist.');
                        $("#loading-image").css("display", "none");
                    });
                });

                // Signature upload from the popup.
                $('#uploadBtnUserSignature').fileupload({
                    url: '@Url.Action("UploadUserSigature","Job")',
                    dataType: 'json',
                    done: function (e, data) {
                        var UploadFailedFiles = [];
                        UploadFailedFiles.length = 0;
                        if(data){
                            var signName = $('#imgUserSign').attr('class');
                            $("[name='UserSignature']").each(function () {
                                $(this).remove();
                            });

                            $('#imgOwnerSignatureView').show();
                            $('#imgUserSign').attr('class',data.result)
                            SRCUserSign = data;
                            $(".alert").hide();
                            $("#errorMsgRegion").hide();
                            $("#successMsgRegion").html(closeButton + "Signature has been uploaded successfully.");
                            $("#successMsgRegion").show();
                        } else {
                            $(".alert").hide();
                            $("#successMsgRegion").hide();
                            $("#errorMsgRegion").html(closeButton + "Signature has not been uploaded.");
                            $("#errorMsgRegion").show();
                        }
                    },
                    progressall: function (e, data) {

                    },
                    singleFileUploads: false,
                    send: function (e, data) {
                        var documentType = data.files[0].type.split("/");
                        var mimeType = documentType[0];
                        if (data.files.length > 1) {
                            for (var i = 0; i < data.files.length; i++) {
                                if (data.files[i].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                                    $(".alert").hide();
                                    $("#successMsgRegion").hide();
                                    $("#errorMsgRegion").html(closeButton + " " + data.files[i].name + " Maximum file size limit exceeded. Please upload a file smaller  than" + " " + maxsize + "MB");
                                    $("#errorMsgRegion").show();
                                    return false;
                                }
                            }
                        }
                        else {
                            if (data.files[0].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                                $(".alert").hide();
                                $("#successMsgRegion").hide();
                                $("#errorMsgRegion").html(closeButton + "Maximum  file size limit exceeded.Please upload a  file smaller than" + " " + maxsize + "MB");
                                $("#errorMsgRegion").show();
                                return false;
                            }
                        }
                        if (mimeType != "image") {
                            $(".alert").hide();
                            $("#errorMsgRegion").html(closeButton + "Please upload a file with .jpg , .jpeg or .png extension.");
                            $("#errorMsgRegion").show();
                            $('html').animate({ scrollTop: 0 }, 'slow');//IE, FF
                            $('body').animate({ scrollTop: 0 }, 'slow');
                            return false;


                        }
                        $(".alert").hide();
                        $("#errorMsgRegion").html("");
                        $("#errorMsgRegion").hide();
                        return true;
                    },
                    formData: { }
                });
                // Signature popup save event.
                $('#btnSaveSign-requestPage').click(function () {
                        var Firstname = '@Model.Firstname';
                        var Lastname = '@Model.Lastname';
                        var num = '@Model.mobileNumber';
                        var email = '@Model.Email';
                        var index = signDetail.findIndex(signature => signature.Fieldname == $('#' + clickSignId).attr('name'))
                        //If Draw Option Selected for Signature
                        if ($('#drpSignatureBy').val() == '2') {
                            if ($('#jSignature').jSignature('getData', 'base30')[1] != '') {
                                var sign = $('#jSignature').jSignature('getData', 'base30');
                                var base64Sign = $('#jSignature').jSignature('getData', 'image').join(",");
                                SetUserDetails(index, Firstname, Lastname, num, sign.join(','), email, base64Sign, 0)
                                $('#popupBulkUploadSignature').modal('hide');
                                var name = $('#' + clickSignId).attr('name');
                                for (var i = 0; i < $('[name^="' + name + '"]').length; i++) {
                                    var id = $('[name^="' + name + '"]')[i].id
                                    if (sign[1] == "") {
                                        $('#' + id).jSignature('reset')
                                        document.getElementById(id).children[1].getContext('2d').clearRect(0, 0, 546, 150);
                                    }
                                    else {
                                        $('#' + id).find('#noSigntext').hide();
                                        $('#' + id).find('canvas.jSignature').show();
                                        document.getElementById(id).children[1].getContext('2d').restore();
                                        document.getElementById(id).children[1].getContext('2d').clearRect(0, 0, 546, 150);
                                        if ($('#' + id).attr('scale') == "" || $('#' + id).attr('scale') == undefined) {
                                            var height = $('#' + id).height() / 150;
                                            var width = $('#' + id).width() / 546;
                                            document.getElementById(id).children[1].getContext('2d').scale(width, height);
                                            $('#' + id).attr("scale", height + "," + width);
                                        }
                                        $('#' + id).jSignature('setData', 'data:' + sign.join(","));
                                        $('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").settings['lineWidth'] = 4;
                                        $('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").settings['readOnly'] = true;
                                        $('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").settings['data']);
                                    }
                                }
                            }
                        }
                        else if ($('#drpSignatureBy').val() == '1' && $('#imgUserSign').attr("class") != '') {
                            var sign = $('#imgUserSign').attr("class");
                            SetUserDetails(index, Firstname, Lastname, num, sign, email, sign, 1)
                            $('#popupBulkUploadSignature').modal('hide');
                        }
                        SaveDocumentButtonEventChange();
                });
        });
        function SetUserDetails(index,Firstname, Lastname, num, sign, email,base64,isimage) {
            if (index != -1) {
                signDetail[index].Firstname = Firstname;
                signDetail[index].Lastname = Lastname;
                signDetail[index].mobileNumber = num;
                signDetail[index].Fieldname = $('#' + clickSignId).attr('name');
                signDetail[index].signString = sign;//.join(",");
                signDetail[index].Email = email;
                signDetail[index].Base64 = base64;
                signDetail[index].Base64 = $('#jSignature').jSignature('getData', 'image').join(",");
                signDetail[index].IsImage = isimage;
            } else {
                var obj = {};
                obj.Firstname = Firstname;
                obj.Lastname = Lastname;
                obj.mobileNumber = num;
                obj.Fieldname = $('#' + clickSignId).attr('name');
                obj.jobDocId = $('#jobDocId').val();
                obj.signString = sign;//.join(",");
                obj.Email = email;
                obj.Base64 = $('#jSignature').jSignature('getData', 'image').join(",");
                obj.IsImage = isimage;
                signDetail.push(obj);
            }
        }
        function SaveUserSignature()
        {
            if (signDetail.length > 0)
            {
                var JsonData = [];
                $(signDetail).each(function (text, value) {
                    JsonData.push({
                        JobDocId: '@Model.jobDocumentId',
                        SignString: value.signString,
                        IsImage: value.IsImage,
                        Fieldname: value.Fieldname,
                        MobileNumber: value.mobileNumber,
                        Firstname: value.Firstname,
                        Lastname: value.Lastname,
                        Email: value.Email,
                        Base64: value.Base64
                    });
                });
                var data = {
                    lstCaptureUserSign: JsonData,
                    SignatureType: @Model.type,
                    DocumentGroupId: '@ViewBag.DocumentGroupId',
                    JobId: @Model.jobid
                };
                $.ajax({
                    url: '@Url.Action("AddSignature", "DocumentSignatureRequest")',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    method: 'post',
                    success: function (data) {
                        if (data == true) {
                            $(".alert").hide();
                            $("#successMsgRegion").html(closeButton + "Signature has been saved successfully.");
                            $("#successMsgRegion").show();
                            $("#successMsgRegion").fadeOut(6000);
                            ScrollOnTop();
                            $('#DocumentLoadWithControls').load(url_Viewer + "?jobid=" + @Model.jobid + "&docId=0&isClassic=false" + "&jobDocumentPath=" + encodeURIComponent('@Model.jobDocumentPath') + "&jobDocumentId=" + @Model.jobDocumentId);
                            setTimeout(function () {
                                ReloadBodySection();
                                OutlinerField();
                                $("#zoom-dropdown").val(100)
                            }, 5000);
                            return false;
                        } else {
                            $(".alert").hide();
                            $("#errorMsgRegion").html(closeButton + "Signature has not been saved.");
                            $("#errorMsgRegion").show();
                            $("#errorMsgRegion").fadeOut(6000);
                            ScrollOnTop();
                        }
                    }
                });
            }
            else {
                alert("please update signature.")
            }
        }

        function ReloadBodySection() {
            $('#viewer input').attr('readonly', 'readonly');
            $("#formViewer").find('label').addClass("disabled");
            $("#formViewer").find('label').css("opacity", "1");
            $("div[Id^='jSignature']").each(function (text, value) {
                var attr = $(value).attr("name");
                if (typeof attr !== typeof undefined && attr !== false) {
                    $(value).removeAttr("onclick");
                    if (attr.toLowerCase().indexOf(("@ViewBag.FieldName").toLowerCase()) != -1) {
                        $(value).attr("onclick","BulkUploadSignatureSave(this)");
                    }
                }
            });
            $(".messages-section .message-listing").niceScroll({
                cursorcolor: "#c1c1c1",
                background: "#f2f2f2",
                cursorwidth:5,
                cursorborder: "none",
                cursorborderradius: 0,
                autohidemode: false,
                bouncescroll: false,
                horizrailenabled: true,
                railvalign: "bottom"
            });
            $(".document-load-section .left-document-section").niceScroll({
                cursorcolor: "#c1c1c1",
                background: "#f2f2f2",
                cursorwidth: 10,
                cursorborder: "none",
                cursorborderradius: 0,
                autohidemode: false,
                bouncescroll: false,
                horizrailenabled: true,
                railvalign: "bottom"
            });
        }
        function SaveDocumentButtonEventChange() {
            var fieldname = $("#fieldName").val();

            var count = 0;


            if (count == 0) {
                $("#btnCompleteSigning").removeClass("btn-success").removeClass("btn-primary").addClass("btn-success");
                $("#btnCompleteSigning").prop('disabled', false);
            }
            else {
                $("#btnCompleteSigning").prop('disabled', true);
            }



        }
        function BulkUploadSignatureSave(div) {
            $(".popupSignature").modal({
                backdrop: "static",
                keyboard: false
            });
            clickSignId = $(div).attr("Id");
        }
        function MessageBlockRefresh() {
            $(".message-listing").load('@(Url.Action("GetAllDocumentMessages", "DocumentSignatureRequest"))?JobDocumentId=' + @Model.jobDocumentId);
        }
        function SendMessage() {
            if (ValidationMessageBox()) {
                var JsonData = {
                    JobDocId: parseInt($("#jobDocumentId").val()),
                    Message: $("#txtMessage").val(),
                    type: $("#type").val(),
                    GroupId: '@ViewBag.DocumentGroupId',
                    JobId: '@Model.jobid'
                };
                $.ajax({
                    type: "POST",
                    url: url_SendMessage,
                    data: JSON.stringify(JsonData),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data.status == true) {
                            $("#successMsgRegion").html(closeButton + data.Message);
                            $("#successMsgRegion").show();
                            $("#successMsgRegion").fadeOut(6000);
                            ScrollOnTop();
                            $("#txtMessage").val("");

                            $("#errorMsgRegion").html("");
                            $("#errorMsgRegion").hide();

                        }
                        else {
                            $("#errorMsgRegion").html(closeButton + data.Message);
                            $("#errorMsgRegion").show();
                            $("#errorMsgRegion").fadeOut(6000);
                            ScrollOnTop();
                            $("#successMsgRegion").html("");
                            $("#successMsgRegion").hide();
                        }
                        MessageBlockRefresh();
                    },
                    error: function (data) {
                        $("#errorMsgRegion").html(closeButton + "Message not send.");
                        $("#errorMsgRegion").show();
                        ScrollOnTop();
                        $("#errorMsgRegion").fadeOut(6000);
                    }
                });
            }
        }
        function ValidationMessageBox() {
            if ($("#txtMessage").val() == '') {
                $("#txtMessage").css("border-color", "red");
                return false;
            }
            else {
                $("#txtMessage").css("border-color", "");
                return true;
            }
        }
        function ScrollOnTop() {
            $('html').animate({ scrollTop: 0 }, 'slow');//IE, FF
            $('body').animate({ scrollTop: 0 }, 'slow');
        }
        function OutlinerField() {
            var fieldname = $("#fieldName").val();
            var headerHeight = $("#header").innerHeight() + 20 + $(".title").innerHeight() + 10;
            if (!($("[name^='" + fieldname + "']").offset() == undefined || $("[name^='" + fieldname + "']").offset() == null)) {
                var offset = $("[name^='" + fieldname + "']").offset().top - headerHeight; //- $(".pageing-block").innerHeight();
                var scroll = $('.document-load-section .left-document-section').scrollTop();
                if (offset > (window.innerHeight - headerHeight)) {
                    // Not in view so scroll to it
                    //offset = offset - $(".pageing-block").height()
                    $('.document-load-section .left-document-section').animate({ scrollTop: (offset + scroll) }, 1000);
                }
                if (offset < 0) {
                    $('.document-load-section .left-document-section').animate({ scrollTop: Math.abs(offset + scroll) }, 1000);
                }
            }
            $("[name^='" + fieldname + "']").css("border","")
            $("[name^='" + fieldname + "']").addClass("redBorder");
        }
</script>
}
