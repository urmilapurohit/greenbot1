@model FormBot.BAL.Service.DocumentSignatureRequest.JobDocumentSignatureDetails
@{
    //ViewBag.Title = "Signature Request";
    Layout = "~/Views/Shared/_SignUpLayout.cshtml";
}
<style>
    .pdfpage {
        position: relative;
        top: 0;
        left: 0;
        /*border: solid 1px black;*/
        /*margin: 10px;*/
    }

    div.inputHint > [id*="jSignature"], .jSignature {
        text-align: center;
        height: 100% !important;
        background-color: rgb(221,228,255) !important;
    }

    #noSigntext {
        width: 100%;
        height: 100%;
        display: table-cell;
        vertical-align: middle;
    }

    #jSignature > .jSignature {
        /*height: 150px !important;
        width: 100% !important;*/
        background-color: rgb(255,255,255) !important;
        
    }

    .pdfpage > canvas {
        position: absolute;
        top: 0;
        left: 0;
    }

    .pdfpage > div {
        position: absolute;
        top: 0;
        left: 0;
    }

    .pdfpage > .inputControl {
        background-color: rgb(221,228,255) !important;
    }

    .inputControl {
        background: transparent;
        border: 0px none;
        position: absolute;
        margin: auto;
        font-size: 13px;
        color: black !important;
    }

        .inputControl[type='checkbox'] {
            margin: 0px;
            width: 18px;
            height: 18px;
        }

    .inputHint {
        border: 1px solid #d8dadd;
        /*opacity: 1;*/
        background: #ffffff;
        /*opacity: 1;
        background: #ccc;*/
        position: absolute;
    }

    .pdfpage [type="checkbox"] {
        display: none;
    }

        .pdfpage [type="checkbox"] + label {
            display: inline-block;
            border: 1px solid gray;
            background-color: rgb(221, 228, 255);
            max-width: 100px !important;
        }

        .pdfpage [type="checkbox"]:checked + label:before {
            content: "\2713";
            text-align: center;
        }

    .signature-status {
        border-radius: 50%;
        width: 2%;
        height: auto;
        padding-top: 2%;
    }

    .red {
        background-color: red;
    }
</style>
<link href="~/Content/style.css" rel="stylesheet" />
<script src="~/Scripts/jquery.nicescroll.min.js"></script>
<input type="hidden" id="PageFrom" value="SignatureRequest" />
<input type="hidden" id="TotalSignatureBoxAllow" value="0" />
@Html.HiddenFor(x => x.jobDocumentId)
@Html.HiddenFor(x => x.fieldName)
<input data-val="true" id="type" name="type" type="hidden" value="@string.Join(",", Model.lsttype)">
@Html.HiddenFor(x => x.jobid)
<style>
    .redBorder {
        border: 2px solid red !important;
    }
</style>
<script>
        var url_Viewer = '@Url.Action("_ViewerForBulkUpload", "Job")';
        var url_SendMessage = '@Url.Action("AddMessageWithDocumentMapped", "DocumentSignatureRequest")';
        var pdfWorkerJsUrl = '@Url.Content("~/Scripts/pdf/pdf.worker.min.js")';
        var CurruntSignNumber = 1;
        var TotalCount = 0;
        var TotalSignCount = 0;
        var allsign = [];
</script>
<div style="overflow:auto;">
    <div style="min-width:767px;">
        <div style="position:fixed; top:100px; left:0; right:0; margin:auto; max-width:700px;z-index: 99;">
            <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegion" style="display:none; box-shadow: 0 0 30px #00000040; ">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            </div>
            <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegion" style="display: none; box-shadow: 0 0 30px #00000040;">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            </div>
        </div>
        <div class="clearfix">
            <div class="title">
                <h1>Document Sign</h1>
                <div class="zoom-section">
                    <select id="zoom-dropdown" style="height:25px;font-size:14px;">
                        <option value="25">25%</option>
                        <option value="50">50%</option>
                        <option value="75">75%</option>
                        <option value="100" selected>100%</option>
                        <option value="125">125%</option>
                        <option value="150">150%</option>
                    </select>
                    <a href="#" id="zoom-in-icon"><img src="~/Images/Document/zoom-in.svg" height="20" width="20" /></a>
                    <a href="#" id="zoom-out-icon"><img src="~/Images/Document/zoom-out.svg" height="20" width="20" /></a>
                </div>
            </div>
            <div class="document-load-section">
                <div class="left-document-section">
                    <div class="document-block">
                        <div id="DocumentLoadWithControls"></div>
                        <div class="pageing-block">
                            <div class="pageping">
                                <a href="#" id="previous-page" class="page-icon" style="display:none;"></a>
                                page <input type="text" id="current-page" value="1"> of <span id="total-page">1</span>
                                <a href="#" id="next-page" class="page-icon" style="display:none;"></a>
                            </div>
                            <div>
                                <select class="form-control" id="document-paging">
                                    <option value="0">View Pages as scrolling</option>
                                    <option value="1">View pages one by one</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="messages-section">
                    <div class="messages-block">
                        <div class="message-listing">
                        </div>
                        <div class="chat-text-box clearfix">
                            <div class="textarea-box">
                                <textarea id="txtMessage" placeholder="Send a reply..."></textarea>
                            </div>
                            <div class="send-block">
                                <button class="send-msg-btn" id="btnSendMessage" onclick="SendMessage()"></button>
                            </div>
                        </div>
                    </div>
                    @*<div class="message-form">
                            <input class="form-control" type="text" multiple id="txtMessage" />
                            <input type="button" class="btn btn-primary send-btn" id="btnSendMessage" onclick="SendMessage()" value="send message" />
                    </div>*@
                </div>
            </div>
            <div class="btn-section clearfix">
                <span class="pull-left" style="font-size: 18px;">
                    <span style="color: red;">Singnature Required: <span class="pending-count"></span>/<span class="total-sign"></span></span>
                    <span class="pageping-sign">
                        <a href="#" id="previous-page-sign"><</a>
                        <span class="current-sign-count"></span>
                        <a href="#" id="next-page-sign">></a>
                    </span>
                    <span style="padding-left: 10px;color: blue;">
                        Note: Please draw/uploaded highlighted signature box.
                    </span>
                </span>
                <input type="button" value="Complete Signing" onclick="SaveUserSignature();" id="btnCompleteSigning" class="btn btn-primary pull-right" disabled />
            </div>
        </div>
    </div>

</div>
<div>
    <div class="modal fade popupSignature" tabindex="-1" id="popupBulkUploadSignature">
        @*<div class="vertical-alignment-helper">
                <div class="modal-dialog vertical-align-center-serial">
                    <div class="modal-content signatureDocument">
                        <div class="modal-header">
                            <button type="button" class="close sprite-img" data-dismiss="modal" aria-label="Close"></button>
                            <h4 class="modal-title">Draw Signature</h4>
                        </div>
                        <div class="modal-body" style="overflow:auto !important">
                            <form id="signatureSend">
                                <div class="form-group">
                                    <label class="control-label" style="background-color: #E4E4E4; width: 100%; padding: 10px;">SIGN HERE:</label>
                                    <select class="form-control" id="drpSignatureBy" style="width: 100%; margin: 0 10px; min-width: 94%;">
                                        <option value="1">Upload</option>
                                        <option value="2">Draw</option>
                                    </select>
                                </div>
                            </form>
                            <div style="padding:10px">
                                <table class="uf" style="margin-left:-10px;" id="tblUpload">
                                    <tr>
                                        <td width="70" style="vertical-align:top;">
                                            <div class="fileUpload primary upload_ic" id="divUpload">
                                                <span>Upload</span>
                                                <input id="uploadBtnUserSignature" type="file" class="upload fileUpload" tabindex="41" />
                                            </div>
                                        </td>
                                        <td>
                                            <div class="bxcont" style="margin-top:7px;">
                                                <a id="imgOwnerSignatureView" href="javascript:void(0)" style="display:none;text-decoration:none">&nbsp; &nbsp; View Image</a>
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                                <table width="100%" border="0" cellpadding="0" cellspacing="0" id="tblDraw" style="display:none">
                                    <tr>
                                        <td>
                                            <div id="divSignature">
                                                <div id="jSignature" style="opacity: 0.8; border: 1px dotted rgb(0, 0, 0) !important;" onchange=""></div>
                                                <br />
                                                <button type="button" class="btn default reset_ic pull-right" onclick="$('#jSignature').jSignature('clear'); $('#IsSignature').val('False'); $('#JobOwnerDetails_OwnerBaseSignature').val('')">Reset</button>
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                                <table align="right" class="tbl-CopySignature">
                                    <tr>
                                        <td>
                                            <br />
                                            <span>Copy signature </span><input type="checkbox" id="chkCopySignature" />
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input type="button" value="Save" class="primary" id="btnSaveSign-requestPage">
                        </div>
                    </div>
                </div>
            </div>*@
        @*@Html.Partial("~/Views/Job/_SignaturePopup.cshtml")*@
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center-serial">
                <div class="modal-content signatureDocument">
                    <div class="modal-header">
                        <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegionSignPopup" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegionSignPopup" style="display: none">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        </div>
                        <button type="button" class="close sprite-img" aria-label="Close" id="btnClosePopupSignature" data-dismiss="modal"></button>
                        <h4 class="modal-title">Please Sign</h4>
                    </div>

                    <div class="modal-body">
                        <ul class="signature-menu" style="position: relative;">
                            <li class="active primary" isDraw="true">
                                <a href="javascript:void(0)" id="aDrawSign" title="Draw Signature">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve" width="512px" height="512px">
                                    <g>
                                    <g>
                                    <path d="M256.052,61.773L145.959,16.169c-3.675-1.521-7.805-1.521-11.48,0c-3.675,1.522-6.596,4.442-8.118,8.118L81.627,132.285    L3.454,226.539c-3.155,3.805-4.233,8.919-2.884,13.673l42.436,149.457c1.252,4.411,4.453,8.007,8.689,9.762    c1.843,0.764,3.794,1.142,5.74,1.142c2.526,0,5.044-0.638,7.307-1.899L200.43,323c4.316-2.407,7.17-6.786,7.629-11.707    l11.376-121.926L264.17,81.372C267.34,73.719,263.706,64.944,256.052,61.773z M178.921,300.644l-91.12,50.817l38.828-93.74    c3.17-7.653-0.464-16.429-8.118-19.599c-7.653-3.17-16.429,0.464-19.599,8.118l-38.829,93.742L31.586,239.613L99.1,158.212    l44.823,18.565l44.823,18.566L178.921,300.644z M196.591,166.12l-58.626-24.282l-23.75-9.837l34.121-82.375l82.376,34.122    L196.591,166.12z" fill="#565b5d"></path>
                                    </g>
                                    </g>
                                    <g>
                                    <g>
                                    <path d="M497,274.172H336.334c-34.849,0-63.201,28.352-63.201,63.201c0,34.848,28.352,63.199,63.201,63.199    c18.306,0,33.199,14.893,33.199,33.199c0,18.308-14.893,33.201-33.199,33.201H15c-8.284,0-15,6.716-15,15s6.716,15,15,15h321.334    c34.848,0,63.199-28.352,63.199-63.201c0-34.848-28.351-63.199-63.199-63.199c-18.307,0-33.201-14.894-33.201-33.199    c0-18.308,14.894-33.201,33.201-33.201H497c8.284,0,15-6.716,15-15S505.284,274.172,497,274.172z" fill="#565b5d"></path>                                                </g>
                                    </g>
                                    </svg>
                                    Draw Signature
                                </a>
                            </li>
                            <li isDraw="false">
                                <a href="javascript:void(0);" id="aUploadSign" title="Upload Signature">
                                    <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 100" style="enable-background:new 0 0 100 100;" xml:space="preserve">
                                    <g>
                                    <g>
                                    <path style="fill:#565b5d;" d="M50.001,7.5l-26,24.398h16.5V57.5h19V31.898h16.5L50.001,7.5z M96.698,65.211L80.78,54.5h-9.816l17.002,13.043H70.243c-0.508,0-0.969,0.258-1.197,0.664L64.96,79.383H35.038l-4.086-11.176c-0.227-0.406-0.689-0.664-1.197-0.664H12.032L29.036,54.5h-9.818L3.302,65.211c-2.369,1.415-3.785,4.676-3.15,7.246l2.807,15.369c0.636,2.57,3.452,4.674,6.257,4.674h81.568c2.805,0,5.621-2.104,6.258-4.674l2.805-15.369C100.485,69.887,99.067,66.626,96.698,65.211z" />



                                    </g>
                                    </g>
                                    </svg>
                                    Upload Signature
                                </a>
                            </li>
                        </ul>
                        <div id="divDraw" class="clearfix">
                            <div id="jSignature">
                                <span class="signLabel"><img src="~/Images/sign-watermark.png"></span>
                            </div>
                            @*<span class="signLabel"><img src="~/Images/sign-watermark.png"></span>*@
                            <div class="pull-right">
                                <input type="button" class="reset" onclick="$('#jSignature').jSignature('reset'); $('#IsSignature').val('False'); $('#JobOwnerDetails_OwnerBaseSignature').val('')" id="resetSignBtn" value="Clear Signature">
                                @if (Convert.ToBoolean(true))
                                {
                                    <p>
                                        <input id="IsCopySign" name="IsCopySign" type="checkbox" value="true">
                                        Copy Signature
                                    </p>
                                }
                            </div>
                        </div>

                        <div id="divUpload" style="display:none;padding-top: 10px;">
                            <div class="clearfix upload-img-block">
                                <img class="img-responsive" id="imgUploadSign" alt="">
                            </div>
                            <div class="clearfix">
                                <div class="text-center">
                                    <div class="fileUpload btn primary upload_ic" id="divUpload">
                                        <span>Upload</span>
                                        <input id="uploadBtnUserSignature" type="file" class="upload fileUpload" />
                                    </div>
                                    <a id="imgOwnerSignatureView" href="javascript:void(0)" style="display:none;text-decoration:none">&nbsp; &nbsp; View Image</a>
                                    @*<button class="remove_ic default btn" style="display:none" id="deleteSign">
                                            <img src="~/images/delete-icon.png" id="signDelete">&nbsp; Remove
                                        </button>*@
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" id="btnSaveSign-requestPage" class="btn primary icon-btn">
                            <span class="sprite-img save_ic"></span>Sign Form
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div id="newPopupBulkUploadSignature" class="modal fade">

        </div>*@
</div>
<span id="spansign" class="" style="color: #b94a48;display:none"></span>
<div class="modal fade" id="popupUserSign" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="btnClosepopupOwnerSign">
                    <img src="~/images/close-btn.png" alt="">
                </button>
                <h4 class="modal-title" id="myModalLabel">Signature</h4>
            </div>
            <div class="modal-body">
                <div class="form-border">
                    <div>
                        <img src="" id="imgUserSign" class="" style="display:inline;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery.fileupload.js"></script>
@*<script src="~/Scripts/FormBot.js"></script>*@
<script src="~/Scripts/jSignature.dev.js"></script>
<script type="text/javascript">
        var signDetail = [];
        var closeButton = '<button type="button" class="close" onclick="$(this).parent().hide();" aria-hidden="true">&times;</button>';
        var $ = $.noConflict();
        // #region Document related variable declare.
        var jobid = 0, jobDocumentPath = "", jobDocumentId = 0
        // #endregion

        $(document).ready(function () {
            // #region Set theme of website.
            var themeId = '@(ViewData.ContainsKey("theme") ? ViewData["theme"] : "green")';
            //$('#jSignature').jSignature({ 'lineWidth ': 4 });
            var $sigdiv = $("#jSignature").jSignature({ height: 220, mousedown: function () { $('#IsSignature').val('True') }, signatureLine: true });
            $("#jSignature").bind('change', function (e) {
                if ($sigdiv.jSignature('getData', 'native').length > 0)
                    $("#jSignature .signLabel").addClass('hidden');
                else
                    $("#jSignature .signLabel").removeClass('hidden');
            });

            $('body').attr('id', themeId);
            // #endregion
            // #region Document Load with all controls.
            RefreshDocument();
            $(".document-load-section .left-document-section").getNiceScroll().resize();
            $(".messages-section .message-listing").getNiceScroll().resize();
            // #endregion
            $("#drpSignatureBy").change(function () {
                if ($(this).val() == 1) {
                    $("#tblUpload").show();
                    $("#tblDraw").hide();
                } else {
                    $("#tblDraw").show();
                    $("#tblUpload").hide();
                }

            });
            $('#popupBulkUploadSignature').off().on('shown.bs.modal', function () {
                var widthVal = $('#jSignature .jSignature').width();
                $('#jSignature .jSignature').height(220);
                $('#jSignature .jSignature').width(widthVal);
                
                $('#jSignature').find('canvas').attr('width', widthVal + 'px !important');
                $('#jSignature').find('canvas').attr('height', '220px !important');
                $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").$controlbarLower.css('margin-bottom', '5.0em');
                $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['lineWidth'] = 2;
                $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['signatureLine'] = true;
                $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").resetCanvas($('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['data'])
                $('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").canvas.setAttribute('width', $($('#jSignature').children()[1]).width());   

                $('#jSignature').jSignature('reset');
                var len = $("#divDraw").find('.jSignature').length;
                if (len > 1) {
                    for (i = 0; i < len; i++) {
                        if (i == 0) {
                            continue;
                        }
                        else
                            $($("#divDraw").find('.jSignature')[i]).remove();
                    }
                }
                if (len > 0)
                    $($("#divDraw").find('.jSignature')[0]).next("div").css("margin-bottom", "0");

                $("#IsCopySign").prop("checked", false);
                if (signDetail.length > 0) {
                    $(".tbl-CopySignature").show();
                    $("#IsCopySign").prop("checked", true);
                    $("#IsCopySign").change();
                }
                else
                    $(".tbl-CopySignature").hide();
                $('#imgUserSign').attr("class", '');
                $('#imgOwnerSignatureView').hide();
            });
            $("#zoom-in-icon").click(function () {
                var zoom = $("#zoom-dropdown").val().trim('%');
                var newZoom = (parseInt(zoom) + 25) / 100;
                $(".document-load-section .left-document-section .document-block").css("transform", "scale(" + newZoom + ")");
                $(".document-load-section .left-document-section .document-block").css("transform-origin", "top left");
                $("#zoom-dropdown").val(newZoom * 100);
                if ((newZoom * 100) == 150) {
                    $("#zoom-in-icon").addClass("disabled");
                    $("#zoom-out-icon").removeClass("disabled");
                } else {
                    $("#zoom-in-icon").removeClass("disabled");
                    $("#zoom-out-icon").removeClass("disabled");
                }
                $(".document-load-section .left-document-section").getNiceScroll().resize();
                setPageNumber();
            });
            $("#zoom-out-icon").click(function () {
                var zoom = $("#zoom-dropdown").val().trim('%');
                var newZoom = (parseInt(zoom) - 25) / 100;
                $(".document-load-section .left-document-section .document-block").css("transform", "scale(" + newZoom + ")");
                $(".document-load-section .left-document-section .document-block").css("transform-origin", "top left");
                $("#zoom-dropdown").val(newZoom * 100);
                if ((newZoom * 100) == 25) {
                    $("#zoom-out-icon").addClass("disabled");
                    $("#zoom-in-icon").removeClass("disabled");
                } else {
                    $("#zoom-out-icon").removeClass("disabled");
                    $("#zoom-in-icon").removeClass("disabled");
                }
                $(".document-load-section .left-document-section").getNiceScroll().resize();
                setPageNumber();
            });
            $("#zoom-dropdown").change(function () {
                var zoom = $("#zoom-dropdown").val().trim('%');
                var newZoom = parseInt(zoom) / 100;
                $(".document-load-section .left-document-section .document-block").css("transform", "scale(" + newZoom + ")");
                $(".document-load-section .left-document-section .document-block").css("transform-origin", "top left");
                if ((zoom) == 150) {
                    $("#zoom-in-icon").addClass("disabled");
                } else {
                    $("#zoom-in-icon").removeClass("disabled");
                }
                if (zoom == 25) {
                    $("#zoom-out-icon").addClass("disabled");
                } else {
                    $("#zoom-out-icon").removeClass("disabled");
                }
                $(".document-load-section .left-document-section").getNiceScroll().resize();
            });
            MessageBlockRefresh();
            setTimeout(function () {
                ReloadBodySection();
                //setOutliner();
                OutlinerField();
                $("#loading-image").hide();
            }, 5000);


            $('#imgOwnerSignatureView').click(function () {
                $("#loading-image").css("display", "");
                $('#imgUserSign').attr('src', SRCUserSign.result).load(function () {
                    logoWidth = this.width;
                    logoHeight = this.height;
                    $('#popupUserSign').modal({ backdrop: 'static', keyboard: false });
                    if ($(window).height() <= logoHeight) {
                        $("#imgUserSign").closest('div').height($(window).height() - 150);
                        $("#imgUserSign").closest('div').css('overflow-y', 'scroll');
                        $("#imgUserSign").height(logoHeight);
                    }
                    else {
                        $("#imgUserSign").height(logoHeight);
                        $("#imgUserSign").closest('div').removeAttr('style');
                    }
                    if (screen.width <= logoWidth || logoWidth >= screen.width - 250) {

                        $('#popupUserSign').find(".modal-dialog").width(screen.width - 250);
                        $("#imgUserSign").width(logoWidth);
                    }
                    else {
                        $("#imgUserSign").width(logoWidth);
                        $('#popupUserSign').find(".modal-dialog").width(logoWidth);
                    }
                    $("#loading-image").css("display", "none");
                });
                $("#imgUserSign").unbind("error");
                $('#imgUserSign').attr('src', SRCUserSign.result).error(function () {
                    alert('Image does not exist.');
                    $("#loading-image").css("display", "none");
                });
            });

            // Signature upload from the popup.
            $('#uploadBtnUserSignature').fileupload({
                url: '@Url.Action("UploadUserSigature","Job")',
                dataType: 'json',
                done: function (e, data) {
                    var UploadFailedFiles = [];
                    UploadFailedFiles.length = 0;
                    if(data){
                        var signName = $('#imgUserSign').attr('class');
                        $("[name='UserSignature']").each(function () {
                            $(this).remove();
                        });

                        $('#imgOwnerSignatureView').show();
                        $('#imgUserSign').attr('class',data.result)
                        SRCUserSign = data;
                        $(".alert").hide();
                        $("#errorMsgRegion").hide();
                        $("#successMsgRegion").html(closeButton + "Signature has been uploaded successfully.");
                        $("#successMsgRegion").show();
                    } else {
                        $(".alert").hide();
                        $("#successMsgRegion").hide();
                        $("#errorMsgRegion").html(closeButton + "Signature has not been uploaded.");
                        $("#errorMsgRegion").show();
                    }
                },
                progressall: function (e, data) {

                },
                singleFileUploads: false,
                send: function (e, data) {
                    var documentType = data.files[0].type.split("/");
                    var mimeType = documentType[0];
                    if (data.files.length > 1) {
                        for (var i = 0; i < data.files.length; i++) {
                            if (data.files[i].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                                $(".alert").hide();
                                $("#successMsgRegion").hide();
                                $("#errorMsgRegion").html(closeButton + " " + data.files[i].name + " Maximum file size limit exceeded. Please upload a file smaller  than" + " " + maxsize + "MB");
                                $("#errorMsgRegion").show();
                                return false;
                            }
                        }
                    }
                    else {
                        if (data.files[0].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                            $(".alert").hide();
                            $("#successMsgRegion").hide();
                            $("#errorMsgRegion").html(closeButton + "Maximum  file size limit exceeded.Please upload a  file smaller than" + " " + maxsize + "MB");
                            $("#errorMsgRegion").show();
                            return false;
                        }
                    }
                    if (mimeType != "image") {
                        $(".alert").hide();
                        $("#errorMsgRegion").html(closeButton + "Please upload a file with .jpg , .jpeg or .png extension.");
                        $("#errorMsgRegion").show();
                        $('html').animate({ scrollTop: 0 }, 'slow');//IE, FF
                        $('body').animate({ scrollTop: 0 }, 'slow');
                        return false;


                    }
                    $(".alert").hide();
                    $("#errorMsgRegion").html("");
                    $("#errorMsgRegion").hide();
                    return true;
                },
                formData: { }
            });
            // Signature popup save event.
            $('#btnSaveSign-requestPage').click(function () {
                var Firstname = '@Model.Firstname';
                var Lastname = '@Model.Lastname';
                var num = '@Model.mobileNumber';
                var email = '@Model.Email';
                var index = signDetail.findIndex(signature => signature.Fieldname == $('#' + clickSignId).attr('name'))
                //If Draw Option Selected for Signature
                if ($('#divDraw').is(':visible')) {
                    if ($('#jSignature').jSignature('getData', 'base30')[1] != '') {
                        var sign = $('#jSignature').jSignature('getData', 'base30');
                        var base64Sign = $('#jSignature').jSignature('getData', 'image').join(",");
                        SetUserDetails(index, Firstname, Lastname, num, sign.join(','), email, base64Sign, 0,)
                        $('#popupBulkUploadSignature').modal('hide');
                        var name = $('#' + clickSignId).attr('name');
                        for (var i = 0; i < $('[name^="' + name + '"]').length; i++) {
                            var id = $('[name^="' + name + '"]')[i].id
                            if (sign[1] == "") {
                                $('#' + id).jSignature('reset')
                                document.getElementById(id).children[1].getContext('2d').clearRect(0, 0, $('#jSignature .jSignature').width(), 220);
                                //document.getElementById(id).children[1].getContext('2d').clearRect(0, 0, $('#jSignature .jSignature').width(), 150);
                            }
                            else {
                                $('#' + id).find('#noSigntext').hide();
                                $('#' + id).find('canvas.jSignature').show();
                                document.getElementById(id).children[1].getContext('2d').restore();
                                document.getElementById(id).children[1].getContext('2d').clearRect(0, 0, $('#jSignature .jSignature').width(), 220);
                                //document.getElementById(id).children[1].getContext('2d').clearRect(0, 0, $('#jSignature .jSignature').width(), 150);
                                if ($('#' + id).attr('scale') == "" || $('#' + id).attr('scale') == undefined) {
                                    var height = $('#' + id).height() / $('#jSignature .jSignature').height();
                                    var width = $('#' + id).width() / $('#jSignature .jSignature').width();
                                    document.getElementById(id).children[1].getContext('2d').scale(width, height);
                                    $('#' + id).attr("scale", height + "," + width);
                                }
                                $('#' + id).jSignature('setData', 'data:' + sign.join(","));
                                $('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").settings['lineWidth'] = 4;
                                $('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").settings['readOnly'] = true;
                                $('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($('#' + id).find("canvas.jSignature").add($('#' + id).filter("canvas.jSignature")).data("jSignature.this").settings['data']);
                            }
                        }
                    }
                }
                else if ($('#divUpload').is(':visible') && $('#imgUserSign').attr("class") != '') {
                    var sign = $('#imgUserSign').attr("class");
                    SetUserDetails(index, Firstname, Lastname, num, sign, email, sign, 1, SRCUserSign);
                    //if (index != -1) {
                    //    signDetail[index].Firstname = Firstname;
                    //    signDetail[index].Lastname = Lastname;
                    //    signDetail[index].mobileNumber = num;
                    //    signDetail[index].Fieldname = $('#' + clickSignId).attr('name');
                    //    signDetail[index].signString = sign;
                    //    signDetail[index].Email = email;
                    //    signDetail[index].Base64 = sign;
                    //    signDetail[index].IsImage = 1;
                    //} else {
                    //    var obj = {};
                    //    obj.Firstname = Firstname;
                    //    obj.Lastname = Lastname;
                    //    obj.mobileNumber = num;
                    //    obj.Fieldname = $('#' + clickSignId).attr('name');
                    //    obj.jobDocId = $('#jobDocId').val();
                    //    obj.signString = sign;
                    //    obj.Email = email;
                    //    obj.Base64 = sign;
                    //    obj.IsImage = 1;
                    //    signDetail.push(obj);
                    //}
                    $('#popupBulkUploadSignature').modal('hide');
                }
                SaveDocumentButtonEventChange();
            });

            $("#IsCopySign").change(function () {
                if ($("#IsCopySign").prop("checked") == true) {
                    if (signDetail.length > 0) {
                        var data = signDetail[0];
                        if (data.IsImage == 1) {
                            //$("#drpSignatureBy").val(1);
                            //$("#drpSignatureBy").change();
                            $("#aUploadSign").click();
                            SRCUserSign = data.FileUploadData;
                            $("#imgOwnerSignatureView").show();
                        }
                        else {
                            //$("#drpSignatureBy").val(2);
                            //$("#drpSignatureBy").change();
                            $("#aDrawSign").click();
                            $('#jSignature').jSignature('setData', 'data:' + data.signString);
                            //$('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['lineWidth'] = 4;
                            //$('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['readOnly'] = true;
                            //$('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").resetCanvas($('#jSignature').find("canvas.jSignature").add($('#jSignature').filter("canvas.jSignature")).data("jSignature.this").settings['data']);
                        }
                    }
                }
            });
            $("#viewerForBulk").ready(function () {

            });
            BindTotalSignatureCount();
            $("#next-page-sign").click(function () {
                RemoveAllOutline();
                //$("[name^='" + allsign[CurruntSignNumber - 1] + "']").removeClass("redBorder");
                if (TotalSignCount == CurruntSignNumber)
                    CurruntSignNumber = 1;
                else
                    CurruntSignNumber++;
                var headerHeight = $("#header").innerHeight() + 20 + $(".title").innerHeight() + 50;
                var offset = $("[name^='" + allsign[CurruntSignNumber - 1] + "']").offset().top - headerHeight; //- $(".pageing-block").innerHeight();
                var scroll = $('.document-load-section .left-document-section').scrollTop();
                if (offset > (window.innerHeight - headerHeight)) {
                    // Not in view so scroll to it
                    //offset = offset - $(".pageing-block").height()
                    $('.document-load-section .left-document-section').animate({ scrollTop: (offset + scroll) }, 100);
                }
                if (offset < 0) {
                    $('.document-load-section .left-document-section').animate({ scrollTop: (offset + scroll) }, 100);
                }
                $(".current-sign-count").html(CurruntSignNumber);
                $("[name^='" + allsign[CurruntSignNumber - 1] + "']").addClass("redBorder");
                //$("[name^='" + allsign[CurruntSignNumber - 1] + "']").css("border", "none !important");
            });
            $("#previous-page-sign").click(function () {
                //var allsign = [];
                //var Allfieldname = $("#fieldName").val();
                //var count = 0;
                //$(Allfieldname.split(',')).each(function (textAllfield, valueAllfield) {
                //    for (var i = 1; i <= $("[name^='" + valueAllfield + "']").length; i++)
                //        allsign.push(valueAllfield + "_" + i);
                //});

                RemoveAllOutline();
                //$("[name^='" + allsign[CurruntSignNumber - 1] + "']").removeClass("redBorder");
                //$("[name^='" + allsign[CurruntSignNumber - 1] + "']").css("border", "2px solid #477300");
                if (1 == CurruntSignNumber)
                    CurruntSignNumber = TotalSignCount;
                else
                    CurruntSignNumber--;
                var headerHeight = $("#header").innerHeight() + 20 + $(".title").innerHeight() + 50;
                var offset = $("[name^='" + allsign[CurruntSignNumber - 1] + "']").offset().top - headerHeight; //- $(".pageing-block").innerHeight();
                var scroll = $('.document-load-section .left-document-section').scrollTop();
                if (offset > (window.innerHeight - headerHeight)) {
                    // Not in view so scroll to it
                    //offset = offset - $(".pageing-block").height()
                    $('.document-load-section .left-document-section').animate({ scrollTop: (offset + scroll) }, 100);
                }
                if (offset < 0) {
                    $('.document-load-section .left-document-section').animate({ scrollTop: (offset + scroll) }, 100);
                }
                $(".current-sign-count").html(CurruntSignNumber);
                $("[name^='" + allsign[CurruntSignNumber - 1] + "']").addClass("redBorder");
                //$("[name^='" + allsign[CurruntSignNumber - 1] + "']").css("border", "none !important");
            });
            $("#aDrawSign").click(function () {
                showHideDrawUploadSection(this);
            });

            $("#aUploadSign").click(function () {
                showHideDrawUploadSection(this);
            });
    });
    function RemoveAllOutline() {
        $(allsign).each(function (index, value) {
            $("[name^='" + value + "']").removeClass("redBorder");
        });
    }
    function SetUserDetails(index,Firstname, Lastname, num, sign, email,base64,isimage,fileUploadData) {
        if (index != -1) {
            signDetail[index].Firstname = Firstname;
            signDetail[index].Lastname = Lastname;
            signDetail[index].mobileNumber = num;
            signDetail[index].Fieldname = $('#' + clickSignId).attr('name');
            signDetail[index].signString = sign;//.join(",");
            signDetail[index].Email = email;
            signDetail[index].Base64 = base64;
            signDetail[index].Base64 = $('#jSignature').jSignature('getData', 'image').join(",");
            signDetail[index].IsImage = isimage;
            signDetail[index].FileUploadData = fileUploadData;
        } else {
            var obj = {};
            obj.Firstname = Firstname;
            obj.Lastname = Lastname;
            obj.mobileNumber = num;
            obj.Fieldname = $('#' + clickSignId).attr('name');
            obj.jobDocId = $('#jobDocId').val();
            obj.signString = sign;//.join(",");
            obj.Email = email;
            obj.Base64 = $('#jSignature').jSignature('getData', 'image').join(",");
            obj.IsImage = isimage;
            obj.FileUploadData = fileUploadData
            signDetail.push(obj);
        }
    }
    function SaveUserSignature()
    {
        if (signDetail.length > 0)
        {
            var JsonData = [];
            $(signDetail).each(function (text, value) {
                JsonData.push({
                    JobDocId: '@Model.jobDocumentId',
                    SignString: value.signString,
                    IsImage: value.IsImage,
                    Fieldname: value.Fieldname,
                    MobileNumber: value.mobileNumber,
                    Firstname: value.Firstname,
                    Lastname: value.Lastname,
                    Email: value.Email,
                    Base64: value.Base64
                });
            });
            var data = {
                lstCaptureUserSign: JsonData,
                SignatureType: $("#type").val(),@*@Model.type,*@
                DocumentGroupId: '@ViewBag.DocumentGroupId',
                JobId: @Model.jobid
            };
            $.ajax({
                url: '@Url.Action("AddSignature", "DocumentSignatureRequest")',
                data: JSON.stringify(data),
                contentType: 'application/json',
                method: 'post',
                success: function (data) {
                    if (data == true) {
                        location.href = "@Url.Action("ThankYou","Home")";
                        @*$(".alert").hide();
                        $("#successMsgRegion").html(closeButton + "Signature has been saved successfully.");
                        $("#successMsgRegion").show();
                        $("#successMsgRegion").fadeOut(6000);
                        ScrollOnTop();
                        $('#DocumentLoadWithControls').load(url_Viewer + "?jobid=" + @Model.jobid + "&docId=0&isClassic=false" + "&jobDocumentPath=" + encodeURIComponent('@Model.jobDocumentPath') + "&jobDocumentId=" + @Model.jobDocumentId);
                        setTimeout(function () {
                            ReloadBodySection();
                            OutlinerField();
                            $("#zoom-dropdown").val(100)
                        }, 5000);*@
                        return false;
                    } else {
                        $(".alert").hide();
                        $("#errorMsgRegion").html(closeButton + "Signature has not been saved.");
                        $("#errorMsgRegion").show();
                        $("#errorMsgRegion").fadeOut(6000);
                        ScrollOnTop();
                    }
                }
            });
        }
        else {
            alert("please update signature.")
        }
    }

    function ReloadBodySection() {
        $('#viewerForBulk input').attr('readonly', 'readonly');
        $("#formViewer").find('label').addClass("disabled");
        $("#formViewer").find('label').css("opacity", "1");
        $("div[Id^='jSignature']").each(function (text, value) {
            var attr = $(value).attr("name");
            if (typeof attr !== typeof undefined && attr !== false) {
                $(value).removeAttr("onclick");
                $("@ViewBag.FieldName".split(',')).each(function (textFieldName, valueFieldName) {
                    if (attr.toLowerCase().indexOf((valueFieldName).toLowerCase()) != -1) {
                        $(value).attr("onclick","BulkUploadSignatureSave(this)");
                    }
                });
            }
        });
        $(".messages-section .message-listing").niceScroll({
            cursorcolor: "#c1c1c1",
            background: "#f2f2f2",
            cursorwidth:5,
            cursorborder: "none",
            cursorborderradius: 0,
            autohidemode: false,
            bouncescroll: false,
            horizrailenabled: true,
            railvalign: "bottom"
        });
        $(".document-load-section .left-document-section").niceScroll({
            cursorcolor: "#c1c1c1",
            background: "#f2f2f2",
            cursorwidth: 5,
            cursorborder: "none",
            cursorborderradius: 0,
            autohidemode: false,
            bouncescroll: false,
            horizrailenabled: true,
            railvalign: "bottom"
        });
    }
    function SaveDocumentButtonEventChange() {
        var Allfieldname = $("#fieldName").val();
        var count = 0;
        $(Allfieldname.split(',')).each(function (textAllfield, valueAllfield) {
            //if (TotalCount == 0)
            //    TotalCount += $("[name^='" + valueAllfield + "']").length;
            $("[name^='" + valueAllfield + "']").each(function (text, value) {


                var data = pdfItemsBulk[pdfItemsBulk.findIndex(x => x.FieldName == $(value).attr("name"))];

                if (data == null || data == '') {
                    if (signDetail.findIndex(signature => signature.Fieldname == $(value).attr("name")) == -1)
                        count++;
                }
                else {
                    if (data.Value.split(',')[1] == null || data.Value.split(',')[1] == '') {
                        if (signDetail.findIndex(signature => signature.Fieldname == $(value).attr("name")) == -1)
                            count++;
                    }
                }


                //count++;
                //var id = $(value).attr("id");
                //var data = $('#' + id).jSignature('getData', 'image');
                //if (data == null || data == '') {

                //    data = $('#' + id).jSignature('getData', 'base30');
                //    if (data == null || data == '') {
                //        if (count > 0)
                //            count--;
                //    }
                //    else if (data.length > 1) {
                //        if (data[1] == null || data[1] == '') {
                //            if (count > 0)
                //                count--;
                //        }
                //    }
                //}
                //else if (data.length > 1) {
                //    if (data[1] == null || data[1] == '') {
                //        if (count > 0)
                //            count--;
                //    }
                //}
                //else {
                //    count--;
                //}
            });
        });


        //$("[name^='" + fieldname + "']").each(function (text, value) {
        //    var id = $(value).attr("id");
        //    var data = $('#' + id).jSignature('getData', 'image');
        //    if (data == null || data == '') {
        //        count++;
        //        data = $('#' + id).jSignature('getData', 'base30');
        //        if (data == null || data == '') {
        //            if (count > 0)
        //                count--;
        //        }
        //        else if (data.length > 1) {
        //            if (data[1] == null || data[1] == '') {
        //                if (count > 0)
        //                    count--;
        //            }
        //        }
        //    }
        //    else if (data.length > 1) {
        //        if (data[1] == null || data[1] == '') {
        //            if (count > 0)
        //                count--;
        //        }
        //    }
        //    else {
        //    }
        //    console.log(count);
        //});

        if (count == 0) {
            $("#btnCompleteSigning").removeClass("btn-success").removeClass("btn-primary").addClass("btn-success");
            $("#btnCompleteSigning").prop('disabled', false);
        }
        else {
            $("#btnCompleteSigning").prop('disabled', true);
        }

        BindTotalSignatureCount();
        $(".btn-section .pending-count").html(TotalSignCount - count);
        $(".total-sign").html(TotalSignCount);
        ShowCurrntSignCount();

        //if ($("[name^='" + fieldname + "']").length == signDetail.length) {
        //    $("#btnCompleteSigning").removeClass("btn-success").removeClass("btn-primary").addClass("btn-success");
        //    $("#btnCompleteSigning").prop('disabled', false);
        //}
        //else {
        //    $("#btnCompleteSigning").prop('disabled', true);
        //}
    }
    function BulkUploadSignatureSave(div) {
        $(".popupSignature").modal({
            backdrop: "static",
            keyboard: false
        });
        clickSignId = $(div).attr("Id");
    }
    function MessageBlockRefresh() {
        $(".message-listing").load('@(Url.Action("GetAllDocumentMessages", "DocumentSignatureRequest"))?JobDocumentId=' + @Model.jobDocumentId);
    }
    function SendMessage() {
        if (ValidationMessageBox()) {
            var JsonData = {
                JobDocId: parseInt($("#jobDocumentId").val()),
                Message: $("#txtMessage").val(),
                type: $("#type").val(),
                GroupId: '@ViewBag.DocumentGroupId',
                JobId: '@Model.jobid'
            };
            $.ajax({
                type: "POST",
                url: url_SendMessage,
                data: JSON.stringify(JsonData),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.status == true) {
                        $("#successMsgRegion").html(closeButton + data.Message);
                        $("#successMsgRegion").show();
                        $("#successMsgRegion").fadeOut(6000);
                        ScrollOnTop();
                        $("#txtMessage").val("");

                        $("#errorMsgRegion").html("");
                        $("#errorMsgRegion").hide();

                    }
                    else {
                        $("#errorMsgRegion").html(closeButton + data.Message);
                        $("#errorMsgRegion").show();
                        $("#errorMsgRegion").fadeOut(6000);
                        ScrollOnTop();
                        $("#successMsgRegion").html("");
                        $("#successMsgRegion").hide();
                    }
                    MessageBlockRefresh();
                },
                error: function (data) {
                    $("#errorMsgRegion").html(closeButton + "Message not send.");
                    $("#errorMsgRegion").show();
                    ScrollOnTop();
                    $("#errorMsgRegion").fadeOut(6000);
                }
            });
        }
    }
    function ValidationMessageBox() {
        if ($("#txtMessage").val() == '') {
            $("#txtMessage").css("border-color", "red");
            return false;
        }
        else {
            $("#txtMessage").css("border-color", "");
            return true;
        }
    }
    function ScrollOnTop() {
        $('html').animate({ scrollTop: 0 }, 'slow');//IE, FF
        $('body').animate({ scrollTop: 0 }, 'slow');
    }
    function OutlinerField() {

        //if ($("#document-paging").val() == "0") {
        var Allfieldname = $("#fieldName").val();
        var OnlyOnec = false;
            $(Allfieldname.split(',')).each(function (text, value) {
                var fieldname = value;
                var headerHeight = $("#header").innerHeight() + 20 + $(".title").innerHeight() + 10;
                if (!($("[name^='" + fieldname + "']").offset() == undefined || $("[name^='" + fieldname + "']").offset() == null)) {
                    var offset = $("[name^='" + fieldname + "']").offset().top - headerHeight; //- $(".pageing-block").innerHeight();
                    var scroll = $('.document-load-section .left-document-section').scrollTop();
                    if (offset > (window.innerHeight - headerHeight)) {
                        // Not in view so scroll to it
                        //offset = offset - $(".pageing-block").height()
                        $('.document-load-section .left-document-section').animate({ scrollTop: (offset + scroll) }, 1000);
                    }
                    if (offset < 0) {
                        $('.document-load-section .left-document-section').animate({ scrollTop: Math.abs(offset + scroll) }, 1000);
                    }
                }
                $("[name^='" + fieldname + "']").css("border", "")
                RemoveAllOutline();
                
                if (!OnlyOnec) {
                    $("[name^='" + fieldname + "']:eq(0)").addClass("redBorder");
                    OnlyOnec = true;
                }
            });
            SaveDocumentButtonEventChange();
        //}
        //else {
        //    var Allfieldname = $("#fieldName").val();
        //}

    }
    function RefreshDocument() {
        $('#DocumentLoadWithControls').load(url_Viewer + "?jobid=" + @Model.jobid + "&docId=0&isClassic=false" + "&jobDocumentPath=" + encodeURIComponent('@Model.jobDocumentPath') + "&jobDocumentId=" + @Model.jobDocumentId, function () {
            setTimeout(function () {
                $("#loading-image").show();
            }, 500);
        });
    }
    //$(document).on("CanvasOnLoad", canvasOnLoadHandler);

    //var ctx = document.getElementById('canvas').getContext('2d');

    //for (var x = 1; x < 600; x++) {
    //    for (var y = 1; y < 600; y++) {
    //        var color = '#' + Math.floor(Math.random() * 16777215).toString(16);
    //        ctx.fillStyle = color;
    //        ctx.fillRect(x, y, 1, 1);
    //    }

    //    // fire CanvasOnLoad when the looping is done
    //    if (x >= 599) {
    //        $.event.trigger({
    //            type: "CanvasOnLoad"
    //        });
    //    }

    //}

    //// handle CanvasOnLoad knowing your canvas has fully drawn
    //function canvasOnLoadHandler() {
    //    console.log("canvas is loaded");
    //}


    var IsFalseToNext = false;


    function setOutliner() {
    var fieldname = $("#fieldName").val();
    if ($("#document-paging").val() == 1) {
        if (IsFalseToNext == false) {//$("[fieldname^='" + fieldname + "']").length == 0) {
            OutlinerNextPage(fieldname)
        } else {
            OutlinerField()
        }
    } else {
        OutlinerField()
    }
}
function OutlinerNextPage(fieldname) {
    if ($("#viewerForBulk").html() != '') {
        if ($("#current-page").val() == pdfDoc.numPages && IsFalseToNext == false) { //$("[fieldname^='" + fieldname + "']").length == 0) {
            OutlinerPreviousPage(fieldname)
            return;
        }
        //else if (IsFalseToNext == false) {
        //    OutlinerField()
        //    return;
        //}
        for (i = parseInt($("#current-page").val()); i <= pdfDoc.numPages; i++) {
            if (IsFalseToNext == false) {
                //$("#next-page").click();
                setTimeout(function () {
                    if ($("[name^='" + fieldname + "']").length > 0) {
                        IsFalseToNext = true;
                    }
                    OutlinerNextPage(fieldname);
                },500);
            } else {
                OutlinerField()
            }
            break;
        }
    }
    else {
        setTimeout(function () { OutlinerNextPage(fieldname) }, 200);
    }
}
function OutlinerPreviousPage(fieldname) {
    if ($("#viewerForBulk").html() != '') {
        if ($("#current-page").val() > 1 && IsFalseToNext == false) {//$("[fieldname^='" + fieldname + "']").length == 0) {
            for (i = parseInt($("#current-page").val()); i >= 1; i--) {
                if (IsFalseToNext == false) {
                    if ($("#current-page").val() > 0) {
                        $("#previous-page").click();
                        setTimeout(function () {
                            if ($("[name^='" + fieldname + "']").length > 0) {
                                IsFalseToNext = true;
                            }
                            OutlinerPreviousPage(fieldname);
                        }, 500);
                        //setTimeout(function () { OutlinerPreviousPage(fieldname) }, 200);
                    }
                } else {
                    OutlinerField()
                }
                break;
            }
        }
        else if (IsFalseToNext == false) {
            OutlinerField()
            return;
        }
    }
    else {
        setTimeout(function () { OutlinerPreviousPage(fieldname) }, 200);
    }
    }
    function ShowCurrntSignCount() {
        if (TotalSignCount < 1)
            CurruntSignNumber = TotalSignCount;
        $(".current-sign-count").html(CurruntSignNumber);
    }
    function BindTotalSignatureCount() {
        TotalCount = parseInt($("#total-page").html());
        var Allfieldname = $("#fieldName").val();
        $(Allfieldname.split(',')).each(function (textAllfield, valueAllfield) {
            //if (TotalSignCount == 0)
            var IsExsist = true;
            for (var i = 1; i <= $("[name^='" + valueAllfield + "']").length; i++) {
                if (!allsign.includes(valueAllfield + "_" + i)) {
                    allsign.push(valueAllfield + "_" + i);
                    IsExsist = false;
                } 
            }
            if (!IsExsist)
                TotalSignCount += $("[name^='" + valueAllfield + "']").length;
        });
    }
    function showHideDrawUploadSection(obj) {
        $(".alert").hide();
        $("#errorMsgRegionSignPopup").hide();
        $("#successMsgRegionSignPopup").hide();

        if ($(obj).attr('id').toLowerCase() == "auploadsign") {
            $("#divDraw").hide();
            $("#divUpload").show();
        }
        else {
            $("#divDraw").show();
            $("#divUpload").hide();
        }

        $(obj).closest('ul').find('.active').removeClass('active');
        $(obj).closest('ul').find('.primary').removeClass('primary');
        $(obj).closest('li').addClass('active');
        $(obj).closest('li').addClass('primary');
    }
</script>
