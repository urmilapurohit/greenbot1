@model FormBot.Entity.ElectricityProvider
@using FormBot.Helper;

@Html.AntiForgeryToken()
@Html.ValidationSummary(true)

<div class="container-fluid">
    <h1 class="title">Electricity Provider</h1>
    <div class="row">
        <div id="grid" class="col-xs-12">
            <div class="alert alert-success" id="successMessage" style="display:none;">
                File has been imported successfully.
                <button type="button" class="close" onclick="$(this).parent().hide();" aria-hidden="true">×</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div id="deleteElectricityProvider" class="col-xs-12">
            <div class="alert alert-success" id="deleteMessage" style="display:none;">
                Electricity provider has been deleted successfully.
                <button type="button" class="close" onclick="$(this).parent().hide();" aria-hidden="true">×</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div id="grid" class="col-xs-12">
            <div class="alert alert-danger" id="failureMessage" style="display:none;">
                Invalid file format.
                <button type="button" class="close" onclick="$(this).parent().hide();" aria-hidden="true">×</button>
            </div>
        </div>
    </div>



    @using (Html.BeginForm("ElectricityProviderFile", "CERImport", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-block" }))
    {
        <div class="col-sm-2">
            <div class="form-group">
                <label class="control-label">Provider:</label>
                @Html.TextBoxFor(model => model.Provider, new { @class = "form-control", @maxlength = "200" })
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label class="control-label">Type:</label>
                @Html.TextBoxFor(model => model.Type, new { @class = "form-control", @maxlength = "100" })
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label class="control-label">State:</label>
                @Html.TextBoxFor(model => model.State, new { @class = "form-control", @maxlength = "100" })
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label class="control-label">Pre-approval:</label>
                @Html.TextBoxFor(model => model.Preapprovals, new { @class = "form-control", @maxlength = "200" })
            </div>
        </div>

        <div class="col-sm-2">
            <div class="form-group">
                <label class="control-label">Connections:</label>
                @Html.TextBoxFor(model => model.Connections, new { @class = "form-control", @maxlength = "200" })
            </div>
        </div>

        <div class="form-group col-xs-12">
            <input type="button" id="btnSendRequest" value="Search" class="primary search_ic">
            <div class="default btn icon-btn" onclick="ResetSearchFilters();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnReset" value="Reset" class="">
            </div>
        </div>
    }

    <div class="row">
        <div class="col-sm-2">
            <div class="grid_topbar">
                <p class="job_result" id="numRecords"></p>
            </div>
        </div>
        <div class="col-sm-9 fco">
            <div class="control-label" style="text-align:right;line-height:35px;" id="headerTitle">
                @ViewBag.Version
            </div>
        </div>
        <div class="col-sm-1 fco">
            <div class="form-group">
                <div class="fileUpload primary upload_ic">
                    <span>Upload</span>
                    <input type="file" id="fileUpload" class="upload" value="Upload" accept=".xls,.xlsx" />
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div id="grid" class="col-xs-12">
            <!-- Grid start -->
            <div class="table-responsive">
                <table id="datatable" class="table table-hover">
                    <thead>
                        <tr>
                            <th width="9%"><span>@Html.DisplayName("Provider")</span></th>
                            <th width="9%"><span>@Html.DisplayName("Type")</span></th>
                            <th width="9%"><span>@Html.DisplayName("State")</span></th>
                            <th width="9%"><span>@Html.DisplayName("Preapprovals")</span></th>
                            <th width="9%"><span>@Html.DisplayName("Connections")</span></th>
                            @if (ProjectSession.UserTypeId != 3)
                            {
                                <th width="5%" class="action">@Html.DisplayName("Action")</th>
                            }

                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>


    <div class="modal fade" id="popupbox" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title" id="myModalLabel">
                            Update Electricity Provider &nbsp;
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <img src='@Url.Content("~/images/close-btn.png")' alt="close">
                            </button>
                        </h3>
                    </div>
                    <div class="form-block">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label class="control-label required">Provider:</label>
                                <input type="text" id="providerPopup" class="form-control" maxlength="200" />
                                <span class="field-validation-error error-message" data-valmsg-for="FirstName" data-valmsg-replace="true" style="display:none;">Provider is required.</span>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="control-label">Type:</label>
                                <input type="text" id="typePopup" class="form-control" maxlength="100" />
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="control-label">State:</label>
                                <input type="text" id="statePopup" class="form-control" maxlength="100" />
                            </div>
                        </div>

                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Pre-approval:</label>
                                <textarea id="preapprovalsPopup" class="form-control" maxlength="200"></textarea>
                            </div>
                        </div>

                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Connections:</label>
                                <textarea id="connectionsPopup" class="form-control" maxlength="200"></textarea>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group">
                                <input type="button" id="btnSaveRequest" name="submit" value="Update" class="primary" />
                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="hdnElectricityProviderId" />
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .vertical-alignment-helper {
        display: table;
        height: 100%;
        width: 100%;
    }

    .vertical-align-center {
        /* To center vertically */
        display: table-cell;
        vertical-align: middle;
        width: 95%;
    }

    .modal-content {
        /* Bootstrap sets the size of the modal in the modal-dialog class, we need to inherit it */
        width: inherit;
        height: inherit;
        /* To center horizontally */
        margin: 0 auto;
    }
</style>

@Styles.Render("~/datatableCSS")
@section scripts{
    @*<script src="~/Scripts/jquery-1.10.2.js"></script>
        <script src="~/Scripts/jquery-ui-1.0.js"></script>
        <script src="~/Scripts/jquery.fileupload.js"></script>
        <script src="~/Scripts/FormBot.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
        @Scripts.Render("~/bundles/bootstrap")
        @Scripts.Render("~/datatableJs")*@
    <script>

        $(document).ready(function () {
            if (@ProjectSession.UserTypeId==3) {
                $('.fco').hide();
            }
            $("#fileUpload").change(function () {
                var fileUpload = $("#fileUpload").get(0);
                var files = fileUpload.files;
                if(files[0].name.split('.').pop().toLowerCase() == 'xlsx' || files[0].name.split('.').pop().toLowerCase() == 'xls')
                {
                    // Create FormData object
                    var fileData = new FormData();

                    // Looping over all files and add it to FormData object
                    for (var i = 0; i < files.length; i++) {
                        fileData.append(files[i].name, files[i]);
                    }

                    $.ajax({
                        url: '@Url.Action("ElectricityProviderFile", "CERImport")',
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: fileData,
                        success: function (result) {
                            if(result[0] == "success") {
                                $("#successMessage").show();
                                $("#failureMessage").hide();
                                $("#headerTitle").html(result[1]);
                                Searching('', '', '', '', '', '');
                            }
                            else if (result[0] == "false") {
                                $("#failureMessage").show();
                                $("#successMessage").hide();
                            }
                            else {
                                $("#failureMessage").html(result[0]).show();
                                $("#successMessage").hide();
                            }
                            //$('.alert').fadeOut(3000);
                        },
                    });
                }
                else
                {
                    $("#failureMessage").html('Please upload file with ".xlsx" or ".xls" extension only.').show();
                    $("#successMessage").hide();
                    //$('.alert').fadeOut(2000);}
                }
                this.value = null;
            });

            $('#btnSendRequest').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                searchProviders();
            });


            $('#datatable').DataTable({
                iDisplayLength: 10,
                lengthMenu:@ProjectConfiguration.GetPageSize,
                language: {
                    sLengthMenu: "Page Size: _MENU_"
                },
                columns: [
                        { 'data': 'Provider', "orderable": true },
                        { 'data': 'Type' },
                        { 'data': 'State' },
                        { 'data': 'Preapprovals' },
                        { 'data': 'Connections' },
                         {
                             'data': 'ElectricityProviderId',
                             "render": function (data, type, full, meta) {
                                 imgedit = 'background:url(../Images/edit-icon.png) no-repeat center; text-decoration:none;';
                                 editHref = "javascript:UpdateProvider('" + full.ElectricityProviderId + "','" + full.Provider + "','" + full.Type + "','" + full.State + "','" + full.Preapprovals + "','" + full.Connections + "')";
                                 title="Edit";
                                 imgdelete = 'background:url(../Images/delete-icon.png) no-repeat center; text-decoration:none;';
                                 var deleteHref = "javascript:DeleteProvider('" + full.ElectricityProviderId + "')";
                                 returnHTML =  '<a href="' + editHref + '" class="action edit" style="' + imgedit + '" title="'+title+'">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>' + '&nbsp;&nbsp;';
                                 returnHTML +=  '<a href="' + deleteHref + '" class="action delete" style="' + imgdelete + '" title="Delete">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                                 return returnHTML;
                             },
                             "orderable": false,
                             "visible": @ProjectSession.UserTypeId == 3?false:true,
                         },
                ],
                dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
                bServerSide: true,
                sAjaxSource: '@Url.Action("GetElectricityProviderList", "CERImport")',
                "fnDrawCallback": function () {
                    $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                    $(".paging a.previous").html("&nbsp");
                    $(".paging a.next").html("&nbsp");
                    $('.grid-bottom span:first').attr('id', 'spanMain');
                    $("#spanMain span").html("");
                    $(".ellipsis").html("...");

                    if ($(".paging").find("span").length > 1) {
                        $("#datatable_length").show();
                    } else if ($("#datatable").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                    //--------To show display records from total records-------------------
                    var table = $('#datatable').DataTable();
                    var info = table.page.info();

                    if(info.recordsTotal==0){
                        document.getElementById("numRecords").innerHTML = '<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b>  Electricity Provider(s) found';
                    }
                    else{
                        document.getElementById("numRecords").innerHTML = '<b>' + $('#datatable >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b>  Electricity Provider(s) found';
                    }
                    //------------------------------------------------------------------------------------------------------------------------------
                }
            });


            $("#Provider,#Type,#State,#Preapprovals,#Connections").keypress(function (e) {
                if (e.which == 13) {
                    $('#btnSendRequest').click();
                }
            });

            $("#Provider").focus();

            $("#btnSaveRequest").click(function(e){
                e.preventDefault();
                e.stopPropagation();

                if ($("#providerPopup").val()!='') {

                    var ElectricityProviderId = $("#hdnElectricityProviderId").val()
                    var provider = $("#providerPopup").val();
                    var type = $("#typePopup").val();
                    var state = $("#statePopup").val();
                    var preapproval = $("#preapprovalsPopup").val();
                    var connection = $("#connectionsPopup").val();

                    $.ajax({
                        url: '@Url.Action("UpdateElectricityProvider", "CERImport")',
                        type: "POST",
                        async: false,
                        data: JSON.stringify({ electricityProviderId: ElectricityProviderId,provider:provider,type:type,state:state,preapproval:preapproval,connection:connection }),
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if (data.success) {
                                searchProviders();
                            }
                        },
                    });

                    $("#providerPopup").val('');
                    $("#typePopup").val('');
                    $("#statePopup").val('');
                    $("#preapprovalsPopup").val('');
                    $("#connectionsPopup").val('');
                    $("#popupbox").modal('hide');

                    $(".error-message").hide();
                } else { $(".error-message").show(); }

            });
        });



        function ResetSearchFilters() {
            $("#Provider").val('');
            $("#Type").val('');
            $("#State").val('');
            $("#Preapprovals").val('');
            $("#Connections").val('');
            Searching('','','','','');
            $("#Provider").focus();
        }

        function Searching(provider,type,state,preapproval,connection) {
            var provider = provider;
            var type = type;
            var state = state;
            var preapproval = preapproval;
            var connection = connection;
            var dTable = $("#datatable").dataTable();
            var dSettings = dTable.fnSettings();
            dSettings.sAjaxSource = '@Url.Action("GetElectricityProviderList", "CERImport")' + '?provider=' + provider + "&type=" + type + "&state=" + state + "&preapproval=" + preapproval + "&connection=" + connection  ;
            $('#datatable').DataTable().ajax.reload();
        }

        function searchProviders() {
            var provider = $("#Provider").val();
            var type = $("#Type").val();
            var state = $("#State").val();
            var preapproval = $("#Preapprovals").val();
            var connection = $("#Connections").val();
            Searching(provider,type,state,preapproval,connection);
        }

        function DeleteProvider(electricityProviderId ){
            var result = confirm("Are you sure you want to delete this record ?");
            if (result) {
                $.ajax({
                    url: '@Url.Action("DeleteElectricityProvider", "CERImport")',
                    type: "POST",
                    async: false,
                    data: JSON.stringify({ electricityProviderId: electricityProviderId }),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.success) {
                            $('#deleteMessage').show();
                            searchProviders();
                        }
                    },
                });
            }
        }


        function UpdateProvider(ElectricityProviderId,provider,type,state,preapproval,connection) {
            $("#popupbox").modal();
            $("#hdnElectricityProviderId").val(ElectricityProviderId);
            $("#providerPopup").val(provider);
            $("#typePopup").val(type);
            $("#statePopup").val(state);
            $("#preapprovalsPopup").val(preapproval);
            $("#connectionsPopup").val(connection);
            $("#providerPopup").focus();
        }
    </script>
}