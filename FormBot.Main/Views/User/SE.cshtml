@model FormBot.Entity.User
@using FormBot.Helper;
@{
    ViewBag.Title = "SE";
}
@{
    bool isView = false, isDelete = false, isSendRequest = false, isSEComplianceChek = false;

    if (TempData.ContainsKey(SystemEnums.TempDataKey.RoleMenu.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>)TempData[SystemEnums.TempDataKey.RoleMenu.ToString()]).ForEach(d =>
        {
            if (d.MenuId == (int)SystemEnums.MenuId.SEView.GetHashCode()) { isView = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.SEDelete.GetHashCode()) { isDelete = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.SEComplianceChek.GetHashCode()) { isSEComplianceChek = true; }
        });
    }

    if (TempData.ContainsKey(SystemEnums.TempDataKey.IsSendRequest.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>
            )TempData[SystemEnums.TempDataKey.IsSendRequest.ToString()]).ForEach(d =>
            {
                if (d.MenuId == (int)SystemEnums.MenuId.SendRequestToElectrician.GetHashCode()) { isSendRequest = true; }

            });
    }
}
<div id="msgSection">
    @Html.RenderMessages()
</div>
<div class="container-fluid">
    <div class="title">
        <h1>Solar Electricians</h1>
        <input type="button" id="btnSendMail" value="Send Mail" class="primary pull-right mail_ic" data-toggle="modal" data-target="" data-backdrop="static" data-keyboard="false" onclick="SendMail();" />
    </div>
    <div class="alert alert-success alert-dismissible" role="alert" id="errorMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <form class="form-block" style="margin-top:10px;">
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <div class="form-group">
                    <label class="control-label">User Job Type:</label>
                    @Html.DropDownList("UserType", null, null, new { id = "UserTypeID", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Name:</label>
                <input type="text" id="txtName" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>
        @if (Model.UserTypeID == 1 || Model.UserTypeID == 3)
        {
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="form-group">
                    <label class="control-label">UserName:</label>
                    <input type="text" id="txtUserName" class="form-control" maxlength="100" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
                </div>
            </div>
        }
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Email:</label>
                <input type="text" id="txtEmail" class="form-control" maxlength="256" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>
        @if (Model.UserTypeID == 1 || Model.UserTypeID == 3)
        {
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="form-group">
                    <label class="control-label">Status:</label>
                    @Html.DropDownList("UserStatus", null, "Select", new { id = "UserStatusId", @class = "form-control" })
                </div>
            </div>
        }
        @if (Model.UserTypeID == 4 || Model.UserTypeID == 6 || Model.UserTypeID == 8)
        {
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="form-group">
                    <label class="control-label">Status:</label>
                    @Html.DropDownList("ElectricianStatus", null, "Select", new { id = "ElectricianStatusId", @class = "form-control" })
                </div>
            </div>
        }
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">License Number:</label>
                <input type="text" id="txtElectricalContractorsLicenseNumber" class="form-control" maxlength="20" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>
        <div class="col-sm-6 col-md-4 col-lg-3 hideSEFields">
            <div class="form-group">
                <label class="control-label">CEC Accreditation Number:</label>
                <input type="text" id="txtCECAccreditationNumber" class="form-control" maxlength="20" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>
        <div class="col-sm-6 col-md-4 col-lg-3 hideSEFields">
            <div class="form-group">
                <label class="control-label">CEC Designer Number:</label>
                <input type="text" id="txtCECDesignerNumber" class="form-control" maxlength="20" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Role:</label>
                @Html.DropDownListFor(model => model.RoleID, new List<SelectListItem>(), new { id = "RoleID", @class = "form-control" })
            </div>
        </div>

        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="form-group">

                @Html.LabelFor(m => m.IsVerified, new { @class = "control-label" })
                <select name="IsVerified" id="IsVerified" class="selectpicker form-control">
                    <option value="" selected>Select</option>
                    <option value="0">Unverified</option>
                    <option value="1">Pending</option>
                    <option value="2">Verified</option>
                    <option value="3">Rejected</option>
                </select>

            </div>
        </div>

        <div class="col-sm-6 col-md-4 col-lg-3 hideSEFields">
            <div class="form-group">
                <label class="control-label">Mobile/Phone:</label>
                <input type="text" id="txtMobile" class="form-control" maxlength="20" onkeyup="if (event.keyCode == 13)document.getElementById('btnSearch').click()">
            </div>
        </div>

        <div class="col-sm-6 col-md-4 col-lg-3">
            <label class="control-label">IsSaasUser:</label>
            <select class="form-control valid" id="IsSaasUser" name="IsSaasUser">
                <option value="All">All</option>
                <option value="1">Yes</option>
                <option value="0">No</option>
            </select>
        </div>

        <div class="form-group col-xs-12">
            <input type="button" id="btnSearch" value="Search" class="primary search_ic" onclick="SearchUsers();">
            <div class="default btn icon-btn" onclick="ResetSearchFilters();">
                <span class="sprite-img reset_ic"></span>
                <input type="button" id="btnReset" value="Reset" class="">
            </div>
        </div>
    </form>
    @if (Model.UserTypeID == 1)
    {
        <div class="form-group col-xs-12" style="padding-right: 0 !important;">
            <div class="form-group col-xs-10">
                <input type="button" id="btnRestore" value="Restore User" class="primary pull-right">
            </div>
            <div class="form-group col-xs-2" style="padding-right: 0 !important;">
                <input type="button" id="btnSendMailIdentity" value="Bulk Send Verification Email" class="primary pull-right mail_ic">
            </div>
        </div>
    }
    <div class="grid_topbar col-xs-12">
        <p class="job_result" id="numRecords"></p>
    </div>
    <div class="row">
        <div id="grid" class="col-xs-12">
            <!-- Grid start -->
            <div class="table-responsive">
                <table id="datatable" class="table table-hover">
                    <thead>
                        <tr>
                            <th width="3%" style="background-image:none !important;"><input type="checkbox" id="chkAll" name="select_all"></th>
                            <th><span>@Html.DisplayName("Name")</span></th>
                            <th><span>@Html.DisplayName("UserName ")</span></th>
                            <th><span>@Html.DisplayName("Email ") </span></th>
                            <th><span>@Html.DisplayName("Mobile ")</span></th>
                            <th><span>@Html.DisplayName("Phone ")</span></th>
                            <th><span>@Html.DisplayName("CEC Accreditation Number")</span></th>
                            <th><span>@Html.DisplayName("CEC Designer Number")</span></th>
                            <th><span>@Html.DisplayName("License Number")</span></th>
                            <th><span>@Html.DisplayName("Created Date")</span></th>
                            <th><span>@Html.DisplayName("Modified Date")</span></th>
                            <th><span>@Html.DisplayName("LastAccessFromPortal")</span></th>
                            <th><span>@Html.DisplayName("LastAccessFromApp")</span></th>
                            <th><span>@Html.DisplayName("Status ")</span></th>
                            <th><span>@Html.DisplayName("VerificationStatus")</span></th>
                            <th><span>@Html.DisplayName("Role")</span></th>
                            <th><span>@Html.DisplayName("IsSaasUser")</span></th>
                            <th class="action">@Html.DisplayName("Action")</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal fade newemail-modal ashish" id="emailbox" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-label="Close" data-dismiss="modal" class="close newEmailClose" type="button" style="margin-right:9px !important;margin-top:5px !important;">
                    <img alt="" src="@Url.Content("~/images/close-btn.png")">
                </button>
                <div class="email-hed"> <a href=" #" class="admin-id"> <img alt="" src="@Url.Content("~/images/admin-id-icon.png")" class="mail-icon"><span id="emailBoxEmailId">Admin@tatvasoft.com</span>  </a> </div>
            </div>
            <div class="form-border">
                <ul class="navbar-nav">
                    <!--<li class="active"><a href="#" title="Back to List" data-dismiss="modal" aria-label="Close"> <img class="icon" src="images/back-list.png" alt="Back to List">Back to List</a></li>-->
                    <li class="active" id="SendMail"><a href="javascript:void(0)" title="Send"> <img class="icon" src="@Url.Content("~/images/send-icon.png")" alt="Send">Send</a></li>
                    <li class="active"> <a href="javascript:void(0)" title="Save" id="SaveMail"><img class="icon" src="@Url.Content("~/images/save-icon.png")" alt="Save">Save</a> </li>
                </ul>
            </div>
            <div class="modal-body">
                <input type="hidden" name="guid" id="guid" value="" />
                <!-- menu End -->
                <div class="mail-box-input">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-1 control-label">To</label>
                            <div class="col-sm-11">
                                <input type="text" class="form-control" id="ToMail">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label">Cc</label>
                            <div class="col-sm-11">
                                <input type="text" class="form-control" id="CcMail">
                                <!--<div class="text-right"><a class="show-bcc" href="#" title="">Show BCc</a></div>-->
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label">Bcc</label>
                            <div class="col-sm-11">
                                <input type="text" class="form-control" id="BccMail">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label">Subject</label>
                            <div class="col-sm-11">
                                <input type="text" class="form-control" id="SubjectMail" maxlength="255">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label">Body</label>
                            <div class="col-sm-11">
                                <div id="editor">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label">Selected Files :</label>
                            <div class="col-sm-11">
                                <table class="table table-bordered" id="tblSelectedFile">
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label">Attach File :</label>
                            <div class="col-sm-11">
                                <table class="uf">
                                    <tr>
                                        <td><input id="uploadFile" placeholder="Choose File" class="form-control" disabled="disabled" /></td>
                                        <td width="70" style="vertical-align:top;">
                                            <div class="fileUpload primary">
                                                <span>Upload</span>
                                                <input id="uploadBtn" type="file" class="upload" />
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                                <script type="text/javascript">
                                    document.getElementById("uploadBtn").onchange = function () {
                                        //document.getElementById("uploadFile").value = this.value;
                                        $("#uploadFile").val("");
                                    };
                                </script>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@*@Styles.Render("~/datatableCSS")*@
@section scripts{
    @*<script src="~/Scripts/jquery-ui-1.0.js"></script>
        <script src="~/Scripts/jquery.fileupload.js"></script>
        <script src="~/Scripts/FormBot.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
        <script src="~/Scripts/bootstrap-datepicker.js"></script>*@
    <script type="text/javascript" src="~/Areas/Email/js/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/Areas/Email/js/ckeditor/samples/js/sample.js"></script>

    @*@Scripts.Render("~/datatableJs")
        @Scripts.Render("~/bundles/jqueryval")*@
    <script>

        var valueSE = $("#UserTypeID").val();
        // solar eletrician usertype
        getRole(7)
        initSample();
        $(document).ready(function () {
            var chkCount=0;
            SetParamsFromLocalStorage();
            $("#txtName").focus();
            $('#datatable').DataTable({
                iDisplayLength: 10,
                lengthMenu:@ProjectConfiguration.GetPageSize,
                language: {
                    sLengthMenu: "Page Size: _MENU_"
                },
                columns: [
                    { 'data': 'Id',
                        "orderable": false,
                        "render": function (data, type, full, meta) {
                            if($('#chkAll').prop('checked')==true){
                                return '<input type="checkbox" id="chk_'+full.Id+'" checked email="'+full.Email+'">';
                            }
                            else{
                                return '<input type="checkbox" id="chk_'+full.Id+'" email="'+full.Email+'">';
                            }
                        }
                    },
                    { 'data': 'Name' },
                    { 'data': 'UserName',
                        visible: @Model.UserTypeID==1 || @Model.UserTypeID==3 ? true : false
                    },
                    { 'data': 'Email' },
                    { 'data': 'Mobile' },
                    { 'data': 'Phone' },
                            { 'data': 'CECAccreditationNumber',
                                visible: valueSE=='swh'?false:true,
                                name: "CECAccreditationNumberColumn"
                            },

                            { 'data': 'CECDesignerNumber',
                                visible: valueSE=='swh'?false:true,
                                name: "CECDesignerNumberColumn"
                            },

                    { 'data': 'ElectricalContractorsLicenseNumber' },
                    { 'data': 'strCreatedDate' },
                    { 'data': 'strModifiedDate' },
                    { 'data': 'strLastAccessFromPortal' },
                    { 'data': 'strLastAccessFromApp' },
                            { 'data': 'Status',
                                "render": function (data, type, full, meta) {
                                    if(@Model.UserTypeID==1 || @Model.UserTypeID==3){
                                        if(full.Status==1){
                                            return '<p>Pending</p>'
                                        }
                                        else if(full.Status==2){
                                            return '<p>Approved</p>'
                                        }
                                        else if(full.Status==3){
                                            return '<p>Rejected</p>'
                                        }
                                        else if(full.Status==4){
                                            return '<p>Require More Paperwork</p>'
                                        }
                                        else{
                                            return '';
                                        }
                                    }
                                    else{
                                        if(full.Status==1){
                                            return '<p>Request Send</p>'
                                        }
                                        else if(full.Status==2){
                                            return '<p>Request Accepted</p>'
                                        }
                                        else if(full.Status==3){
                                            return '<p>Request Rejected</p>'
                                        }
                                        else{
                                            return '';
                                        }
                                    }
                                },
                    },
                    {
                        'data': 'VerificationStatus',
                        "render": function (data, type, full, meta) {
                            debugger;
                            if (full.IsVerified == 0) {
                                return '<p>Unverified</p>'
                            }
                            else if (full.IsVerified == 1) {
                                return '<p>Pending</p>'
                            }
                            else if (full.IsVerified == 2) {
                                return '<p>Verified</p>'
                            }
                            else if (full.IsVerified == 3) {
                                return '<p>Rejected</p>'
                            }
                            else {
                                return '';
                            }
                        }
                    },

                    {
                        'data': 'Role'
                    },
                    {
                        'data': 'IsSAASUser',
                        "render": function (data, type, full, meta) {
                            if (data) {
                                return "Yes";
                            }
                            else {
                                return "No"
                            }
                        }
                    },
                        {
                            'data': 'Id',
                            "render": function (data, type, full, meta) {
                                var deleteButton = "";
                                var title = "";
                                var viewHref ="";
                                var returnHTML = '';
                                if(@Model.UserTypeID==1){
                                    imgdelete = 'background:url(../Images/delete-icon.png) no-repeat center; text-decoration:none;';
                                    var deleteHref = "javascript:DeleteUser('" + full.Id + "')";
                                    deleteButton = '&nbsp;&nbsp;'+ '<a href="' + deleteHref + '" class="action delete" style="' + imgdelete + '" title="Delete">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                                }
                                imgview = 'background:url(../Images/view-icon.png) no-repeat center; text-decoration:none;';
                                @if(Model.UserTypeID == 4 || Model.UserTypeID == 6 || Model.UserTypeID == 8){
                                <text>
                                viewHref = ("@Url.Action("SE", "User")" + "/" + full.Id);
                                </text>
                            }else{<text> viewHref = ("@Url.Action("ViewDetail", "User")" + "/" + full.Id);</text>
                                }

                                title = ('@isSEComplianceChek.ToString().ToLower()' == 'true')? 'Compliance Check' : 'View';
                                @if(isView)
                                {

                                <text>
                                returnHTML +='<a href="' + viewHref + '" class="action view" style="' + imgview + '" title="'+title+'">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>';
                                </text>
                                }
                                @if(isDelete)
                                {
                                        <text>
                                returnHTML +=deleteButton;
                                </text>
                                }
                                return returnHTML;

                                //return '<a href="' + viewHref + '" class="action view" style="' + imgview + '" title="View">' + '&nbsp; &nbsp; &nbsp; &nbsp;' + '</a>' + deleteButton;;
                            },
                            "orderable": false
                    },

                ],
                dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>>",
                initComplete: function( settings, json ) {
                    $('.grid-boGetSolarElectricianListttom span:first').attr('id','spanMain');
                    $("#spanMain span").html("");
                },
                bServerSide: true,
                sAjaxSource: '@Url.Action("GetSolarElectricianList", "User")',

                "fnDrawCallback": function () {
                    if($('#chkAll').prop('checked')==true){
                        chkCount=$('#datatable >tbody >tr').length;
                    }
                    else{
                        chkCount=0;
                    }
                    $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove();
                    $(".paging a.previous").html("&nbsp");
                    $(".paging a.next").html("&nbsp");
                    $('.grid-bottom span:first').attr('id', 'spanMain');
                    $("#spanMain span").html("");
                    $(".ellipsis").html("...");

                    if ($(".paging").find("span").length >= 1) {
                        $("#datatable_length").show();
                    } else if ($("#datatable").find("tr").length >11) { $("#datatable_length").show();  } else { $("#datatable_length").hide(); }

                    //--------To show display records from total records-------------------
                    var table = $('#datatable').DataTable();
                    var info = table.page.info();
                    if(info.recordsTotal==0){
                        document.getElementById("numRecords").innerHTML = '<b>' + 0 + '</b>  of  <b>' + info.recordsTotal +'</b> Solar Electrician(s) found';
                    }
                    else{
                        document.getElementById("numRecords").innerHTML = '<b>' + $('#datatable >tbody >tr').length + '</b>  of  <b>' + info.recordsTotal +'</b> Solar Electrician(s) found';
                    }
                    if (valueSE == 'swh')
                    {
                        table.columns("CECAccreditationNumberColumn:name").visible( false );//table.column( 4 ).visible( false );
                        table.columns("CECDesignerNumberColumn:name").visible( false );//table.column( 5 ).visible( false );
                    }
                    else if (valueSE == 'pvd')
                    {
                        table.columns("CECAccreditationNumberColumn:name").visible( true );
                        table.columns("CECDesignerNumberColumn:name").visible( true );
                    }
                    //------------------------------------------------------------------------------------------------------------------------------

                },

                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "name", "value": $("#txtName").val() });
                    if(@Model.UserTypeID==1 || @Model.UserTypeID==3){
                        aoData.push({ "name": "username", "value": $("#txtUserName").val() });
                        aoData.push({ "name": "electricianstatus", "value": localStorage.getItem('SE_UserStatusId') });
                    }
                    if(@Model.UserTypeID == 4 || @Model.UserTypeID == 6 || @Model.UserTypeID == 8){
                        aoData.push({ "name": "electricianstatus", "value": localStorage.getItem('SE_ElectricianStatusId') });
                    }
                    aoData.push({ "name": "email", "value": $("#txtEmail").val() });
                    aoData.push({ "name": "accreditationnumber", "value": $("#txtCECAccreditationNumber").val() });
                    aoData.push({ "name": "designernumber", "value": $("#txtCECDesignerNumber").val() });
                    aoData.push({ "name": "licensenumber", "value": $("#txtElectricalContractorsLicenseNumber").val() });
                    aoData.push({ "name": "requestedusertype", "value": $("#UserTypeID").val() });
                    aoData.push({ "name": "roleID", "value": localStorage.getItem('User_RoleID') });
                    aoData.push({ "name": "IsVerified", "value": $("#IsVerified").val() });
                    aoData.push({ "name": "mobile", "value": localStorage.getItem('User_Mobile') });
                    aoData.push({ "name": "IsSaasUser", "value": document.getElementById("IsSaasUser").value });
                }
            });

            var table = $('#datatable').DataTable();

            $('#chkAll').on('click', function () {
                var rows = table.rows({ 'search': 'applied' }).nodes();
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
                chkCount = this.checked ? $('#datatable >tbody >tr').length : 0;
            });

            $('#datatable tbody').on('change', 'input[type="checkbox"]', function () {
                if (this.checked) {
                    chkCount++;
                    if (chkCount == $('#datatable >tbody >tr').length) {
                        $('#chkAll').prop('checked', this.checked)
                    }
                }
                else {
                    chkCount--;
                    $('#chkAll').prop('checked', this.checked)
                }
            });

            $('#UserTypeID').change(function () {
                valueSE = $('#UserTypeID').val();
                if ($('#UserTypeID').val() == 'pvd') {
                    $('.hideSEFields').show();
                }
                else if ($('#UserTypeID').val() == 'swh') {
                    $('.hideSEFields').hide();
                }
                $("#txtCECAccreditationNumber").val('');
                $("#txtElectricalContractorsLicenseNumber").val('');
            });

            $('#btnRestore').click(function(){
                window.location.href=document.location.origin+"/User/RestoreUser"
            })

        });

        function ResetSearchFilters() {
            localStorage.setItem('SE_Name','');
            if(@Model.UserTypeID == 1 || @Model.UserTypeID == 3){
                localStorage.setItem('SE_UserStatusId',0);
                document.getElementById("UserStatusId").selectedIndex = 0;
                localStorage.setItem('SE_UserName','');
            }
            if(@Model.UserTypeID == 4 || @Model.UserTypeID == 6 || @Model.UserTypeID == 8){
                localStorage.setItem('SE_ElectricianStatusId',0);
                document.getElementById("ElectricianStatusId").selectedIndex = 0;
            }
            localStorage.setItem('SE_Email','');
            localStorage.setItem('SE_CECAccreditationNumber','');
            localStorage.setItem('SE_CECDesignerNumber','');
            localStorage.setItem('SE_ElectricalContractorsLicenseNumber', '');
            localStorage.setItem('User_RoleID', 0);
            localStorage.setItem('User_Mobile', '');
            document.getElementById("RoleID").selectedIndex = 0;
            SetParamsFromLocalStorage();
            $("#datatable").dataTable().fnDraw();
        }

        function SearchUsers(){
            if('@Model.UserTypeID'==1 || '@Model.UserTypeID'==3){
                localStorage.setItem('SE_UserName',$("#txtUserName").val());
                localStorage.setItem('SE_UserStatusId',document.getElementById("UserStatusId").value);
            }
            if(@Model.UserTypeID == 4 || @Model.UserTypeID == 6 || @Model.UserTypeID == 8){
                localStorage.setItem('SE_ElectricianStatusId',document.getElementById("ElectricianStatusId").value);
            }

            localStorage.setItem('SE_Name',$("#txtName").val());
            localStorage.setItem('SE_Email',$("#txtEmail").val());

            if($("#UserTypeID").val() == 'swh')
            {
                localStorage.setItem('SE_CECAccreditationNumber','');
                localStorage.setItem('SE_CECDesignerNumber','');
            }
            else
            {
                localStorage.setItem('SE_CECAccreditationNumber',$("#txtCECAccreditationNumber").val());
                localStorage.setItem('SE_CECDesignerNumber',$("#txtCECDesignerNumber").val());
            }

            localStorage.setItem('SE_ElectricalContractorsLicenseNumber', $("#txtElectricalContractorsLicenseNumber").val());
            localStorage.setItem('User_RoleID', document.getElementById("RoleID").value);
            localStorage.setItem('User_Mobile', $("#txtMobile").val());
            $('#IsSaasUser').val('All');
            $("#datatable").dataTable().fnDraw();
        }

        function DeleteUser(userid){
            var result = confirm("Are you sure you want to delete this record ?");
            if (result) {
                $.ajax({
                    url: '@Url.Action("DeleteUser", "User")',
                    type: "POST",
                    async: false,
                    data: JSON.stringify({ userId: userid }),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.success) {
                            //Email configuration not required
                            var strEmailConfigureMsg='';
                            if('@ProjectSession.IsUserEmailAccountConfigured'=='False'){
                                strEmailConfigureMsg='(Can not send mail to deleted user because email account is not configured)';
                            }

                            $(".alert").hide();
                            $("#errorMsgRegion").html(closeButton + "User deleted successfully. "+strEmailConfigureMsg);
                            $("#errorMsgRegion").show();

                            $("#datatable").dataTable().fnDraw();
                        }
                    },
                });
            }
        }

        function SetParamsFromLocalStorage(){
            if(@Model.UserTypeID == 1 || @Model.UserTypeID == 3){
                $("#txtUserName").val(localStorage.getItem('SE_UserName'));
            }

            $("#txtName").val(localStorage.getItem('SE_Name'));
            $("#txtEmail").val(localStorage.getItem('SE_Email'));
            $("#txtCECAccreditationNumber").val(localStorage.getItem('SE_CECAccreditationNumber'))
            $("#txtCECDesignerNumber").val(localStorage.getItem('SE_CECDesignerNumber'))
            $("#txtElectricalContractorsLicenseNumber").val(localStorage.getItem('SE_ElectricalContractorsLicenseNumber'))
            $("#txtMobile").val(localStorage.getItem('User_Mobile'))

            if('@Model.UserTypeID'==1 || '@Model.UserTypeID'==3){
                if(localStorage.getItem('SE_UserStatusId')=="0"){
                    document.getElementById("UserStatusId").selectedIndex = 0;
                }
                else{
                    document.getElementById("UserStatusId").value = localStorage.getItem('SE_UserStatusId');
                }
            }
            if('@Model.UserTypeID'==4 || '@Model.UserTypeID'==6 || '@Model.UserTypeID'==8){
                if(localStorage.getItem('SE_ElectricianStatusId')=="0"){
                    document.getElementById("ElectricianStatusId").selectedIndex = 0;
                }
                else{
                    document.getElementById("ElectricianStatusId").value = localStorage.getItem('SE_ElectricianStatusId');
                }
            }
        }

        // send Email

        function SendMail(){
            var selectedUser=[];
            $('#datatable tbody input[type="checkbox"]').each(function(){
                if($(this).prop('checked')==true){
                    selectedUser.push(($(this).attr('email')));
                }
            })
            if(selectedUser==null || selectedUser.length==0){
                alert("Please select any user.");
            }
            else if(selectedUser!=null && selectedUser.length>25){
                alert("Please select Users upto 25.");
            }
            else if(selectedUser!=null && selectedUser.length > 0 && selectedUser.length < 25){
                var result = confirm("Are you sure you want to send mail to selected users ?");
                if (result) {
                    $("#emailBoxEmailId").html('@ViewBag.email');
                    //$("#ToMail").val(selectedUser.join(";"));
                    $("#ToMail").val('@Model.ToEmailAddress');
                    $("#BccMail").val(selectedUser.join(";"));
                    $('#emailbox').modal('show');
                    $("#guid").val(guid());
                }
            }
        }
        function CreateCommaSeparetedArray(element) {
            var x = element;
            x = x.replace(/,/g,";");
            var emailList = x.trim().replace(/(^;)|(;$)/g, "").split(";");
            emailList = cleanArray(emailList);
            return emailList;
        }

        function cleanArray(actual) {
            var newArray = new Array();
            for (var i = 0; i < actual.length; i++) {
                if (actual[i]) {
                    newArray.push(actual[i]);
                }
            }
            return newArray;
        }

        function validateForm(emailList,message,lengthExceedMessage) {
            var flag = true;
            var testing;
            emailList.forEach(function(i,j){
                var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/
                testing = i.trim();
                if (filter.test(testing)) {
                }
                else {
                    flag = false;
                }
            });
            if (emailList.length == 0) {
                flag = false;
            }

            if (flag == false) {
                alert(message);
            }else {
                if (emailList.length > 25) {
                    alert(lengthExceedMessage);
                    flag = false;
                }
            }

            return flag;
        }

        $("#ToMail,#CcMail,#BccMail").keypress(function (event) {
            if (event.which == 44) {event.preventDefault();
                $(this).val($(this).val() + ";");
            }
            if (event.which == 9) {alert('1');
                $(this).val($(this).val().replace(",",";"));
            }
        });

        $("#ToMail,#CcMail,#BccMail").blur(function (event) {
            $(this).val($(this).val().replace(/,/g,";"));
        });

        $("#SendMail").click(function () {
            var JsonRequestData = {
                QueuedEmailId: "",
                FromEmail: "",
                ToEmail: "",
                CC: "",
                Bcc: "",
                Subject: "",
                Body: "",
                Guid: "",
                IsSent: "",
                SentTries: "",
                SentOn: "",
                CreatedDate: "",
                ModifiedDate: ""
            };
            var flag = true;
            var toEmailArray,ccEmailArray,bccEmailArray;
            if ($("#ToMail").val() == '') {
                alert('You cannot leave "To" field blank');
                flag = false;
            }else {
                toEmailArray = CreateCommaSeparetedArray($("#ToMail").val());
                flag = validateForm(toEmailArray,'The specified email address for "To" is invalid.','Maximum 25 emails are allowed in "To" field.');
            }
            if ($("#CcMail").val() != "" && flag == true) {
                ccEmailArray = CreateCommaSeparetedArray($("#CcMail").val());
                flag = validateForm(ccEmailArray,'The specified email address for "Cc" is invalid.','Maximum 25 emails are allowed in "Cc" field.');
            }
            if ($("#BccMail").val() != "" && flag == true) {
                bccEmailArray= CreateCommaSeparetedArray($("#BccMail").val());
                flag = validateForm(bccEmailArray,'The specified email address for "Bcc" is invalid.','Maximum 25 emails are allowed in "Bcc" field.');
            }
            if (flag == true && $("#SubjectMail").val() == "") {
                var flag = confirm("The subject field is empty. Do you wish to continue?");
            }
            if (flag) {
                //return false;
                var getUrl = '@Url.Action("SendMail", "Email", new { area = "Email" })';
                var attachmentObject = [];
                var selectedFiles = $("#tblSelectedFile tr");
                for (var i = 0; i < selectedFiles.length; i++) {
                    var tmp_name = $(selectedFiles[i]).data('tmpname');
                    var filename = $(selectedFiles[i]).data('filename');
                    attachmentObject.push({GeneratedName : tmp_name,FileName : filename});
                }
                var selectedFolder = $("#FolderStructure li.active");
                var selectedMessage = -1;
                if (selectedFolder.data("type") == "3" && isEditClickedDraft == true) {
                    var selectedMessage = $("#SelectedMessageId").val();
                }
                var toEmailString = toEmailArray.length > 0 ? toEmailArray.join(";") : "";
                var ccEmailString = ccEmailArray != undefined ? ccEmailArray.join(";") : "";
                var bccMailEmailString = bccEmailArray != undefined ? bccEmailArray.join(";") : "";
                var inboxFolder = $(".foldersList li:first");
                //var data = JSON.stringify({ "From": "", "To": toEmailString, "Cc": ccEmailString, "Bcc": bccMailEmailString, "Subject": $("#SubjectMail").val(), "Body": { "body": CKEDITOR.instances['editor'].getData() }, "Attachment": $("#uploadFile").val(), "IsSave": "false", "IsToSameAsFrom": "true","Attachments" :attachmentObject,SaveMailFolderId : inboxFolder.data('id'),eventType : 'send',selectedMessageid : selectedMessage });
                var data = JSON.stringify({ "From": "", "To": toEmailString, "Cc": ccEmailString, "Bcc": bccMailEmailString, "Subject": $("#SubjectMail").val(), "Body": { "body": CKEDITOR.instances['editor'].getData() }, "Attachment": $("#uploadFile").val(), "IsSave": "false", "IsToSameAsFrom": "true", "Attachments": attachmentObject, SaveMailFolderId: inboxFolder.data('id'), eventType: 'send', selectedMessageid: selectedMessage });
                JsonRequestData.ToEmail = toEmailString;
                JsonRequestData.CC = ccEmailString;
                JsonRequestData.Bcc = bccMailEmailString;
                JsonRequestData.Subject = $("#SubjectMail").val();
                JsonRequestData.Body = CKEDITOR.instances['editor'].getData();
                JsonRequestData.Guid = $("#guid").val();
                //$.ajax({
                //    url: getUrl,
                //    type: "POST",
                //    dataType: "json",
                //    data: data,
                //    async: true,
                //    processData: false,
                //    cache: false,
                //    contentType: 'application/json; charset=utf-8',
                //    success: function (Data) {
                //        if (Data.isSuccess == false) {
                //            alert(Data.errorMessage);
                //            return false;
                //        }

                //        if (selectedFolder.data("type") == "3" && isEditClickedDraft == true) {
                //            isEditClickedDraft  = false;
                //            $("#emailDisplay").hide();
                //            $(".selectedMessage").remove();
                //            SetDefaultMessageSelected();
                //        }
                //        $(".newEmailClose").click();
                //    }
                //});
                $.ajax({
                    url: '@Url.Action("SendMail", "EmailManage", new { area = "QueuedEmail" })',
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(JsonRequestData),
                    async: true,
                    processData: false,
                    cache: false,
                    contentType: 'application/json; charset=utf-8',
                    success: function (Data) {

                        if (Data == "1") {
                            CKEDITOR.instances['editor'].setData('');
                            $('#emailbox').find('input:text').val('');
                            $("#tblSelectedFile").html("");
                            $(".newEmailClose").click();
                        }
                        else {
                            alert("Mail is not sent.");
                        }
                    }
                });
            }
        });

        $("#btnSendMailIdentity").click(function () {
            var data = {};
            $.ajax({
                url: '@Url.Action("SendMailForDocumentsInstaller", "User")',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                data: {},
                success: function (response) {
                },
                error: function () {
                    //showErrorMessageForDocumentSignatureRequest("Documents email reuqest are not sent.");
                }
            });
        });

        @*$("#uploadBtn").change(function(){
            var fileInput = document.getElementById('uploadBtn');
            var formdata = new FormData(); //FormData object
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            //xhr.open('POST', '/Home/Upload');
            xhr.open('POST', '@Url.Action("Upload", "Email", new {area = "Email" })');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var tmp_name = JSON.parse(xhr.response);
                    var result = "<tr class='success' data-tmpname='"+tmp_name.tmp_name+"' data-filename='"+fileInput.files[0].name+"'><td>"+fileInput.files[0].name+"</td><td><a href='#' class='close attachmentclose' data-dismiss='alert' aria-label='close'>&times;</a></td></tr>";
                    $("#tblSelectedFile").append(result);
                }
            }
            return false;
        });*@

        $("#uploadBtn").change(function(){
            var fileInput = document.getElementById('uploadBtn');
            var formdata = new FormData(); //FormData object
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            //Creating an XMLHttpRequest and sending
            var xhr = new XMLHttpRequest();
            //xhr.open('POST', '/Home/Upload');
            xhr.open('POST', '@Url.Action("UploadFiles", "EmailManage", new {area = "QueuedEmail" })?Guid=' + $("#guid").val());
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var JsonResultOfResponse = JSON.parse(xhr.response);
                    var fileName = JsonResultOfResponse.filenameWithFullPath;
                    if (JsonResultOfResponse.status == 0) {
                        var result = "<tr class='danger' data-tmpname='" + fileName + "' data-filename='" + fileName + "'><td>" + fileName + "</td><td><a href='#' class='close attachmentclose' data-dismiss='alert' aria-label='close'>&times;</a></td></tr>";
                        $("#tblSelectedFile").append(result);
                    }
                    else if (JsonResultOfResponse.status == 1) {
                        var result = "<tr class='success' data-tmpname='" + fileName + "' data-filename='" + fileName + "'><td>" + fileName + "</td><td><a href='#' class='close attachmentclose delete-attechement' data-id=" + JsonResultOfResponse.Id +" data-dismiss='alert' aria-label='close'>&times;</a></td></tr>";
                        $("#tblSelectedFile").append(result);
                    }
                    DeleteAttechementBind();
                }
            }
            return false;
        });

        $(document).on("click", ".attachmentclose", function () {
            $(this).parent().parent().remove();
        });

        function getRole(userTypeId) {
            if ('@Model.UserTypeID' == '1') {
                userTypeId = userTypeId;
            }
            else {
                userTypeId=@ProjectSession.UserTypeId;
            }
             $.ajax({
                    url: '@Url.Action("GetRole", "Role")',
                    type: "get",
                    data: { id: userTypeId },
                    async: false,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
        if (data == 0) {
                            $("#RoleID").empty();
                            $("#RoleID").append('<option value="">' + "Select" + '</option>');
        }
        else {
                            $("#RoleID").empty();
                            $("#RoleID").append('<option value="" selected>' + "Select" + '</option>');

                            $.each(data, function (i, role) {
                                $("#RoleID").append('<option value="' + role.Value + '">' +
                                                                      role.Text + '</option>');
            });

                    }
                },
                });

        }

    </script>
    <script>
        function guid() {
            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
                s4() + '-' + s4() + s4() + s4();
        }

        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
    </script>
}
<style type="text/css">

    .sendRequest_ic {
        background-image: url(../images/send-request-wh.png) !important;
        background-repeat: no-repeat;
        background-position: 6px 9px;
        padding: 0px 10px 0px 28px !important;
    }
</style>
