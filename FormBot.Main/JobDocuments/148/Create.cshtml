@using FormBot.Entity
@using FormBot.Helper
@{
    ////Todo
    bool isAdd = false;
    bool isDelete = false;
    bool isAssignSSC = false, isAssignSCO = false;
    if (TempData.ContainsKey(SystemEnums.TempDataKey.RoleMenu.ToString()))
    {
        ((List<FormBot.Main.Controllers.MenuIdList>)TempData[SystemEnums.TempDataKey.RoleMenu.ToString()]).ForEach(d =>
        {
            if (d.MenuId == (int)SystemEnums.MenuId.JobAssignToSSC.GetHashCode()) { isAssignSSC = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.JobAssignToSCO.GetHashCode()) { isAssignSCO = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.JobNoteAdd.GetHashCode()) { isAdd = true; }
            if (d.MenuId == (int)SystemEnums.MenuId.JobNoteDelete.GetHashCode()) { isDelete = true; }
        });
    }
}

@section Scripts {
    <script src="~/Scripts/jquery.validate-vsdoc.js"></script>
    <script src="~/Scripts/jquery-1.11.0.min.js"></script>
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery-ui-1.0.js"></script>
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/easyResponsiveTabs.js" type="text/javascript"></script>
    @Scripts.Render("~/Scripts/FormBot.js")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.fileupload.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <link href="~/Content/datepicker.css" rel="stylesheet" />


}



<script type="text/javascript">
   

    function onclickEvent() {
        var notes = $("#Notes").val();
        var jobID = $("#BasicDetails_JobID").val();
        var parameters = $('#frmIndex').serialize();
        if (notes == "") {
            $(".alert").hide();
            $("#errorMsgRegion").addClass("alert-danger");
            $("#errorMsgRegion").html(closeButton + "Please enter job notes.");
            $("#errorMsgRegion").show();
            $("#errorMsgRegion").fadeOut(6000);
        }
        else {
            $.ajax({
                url: '@Url.Action("SaveJobNotes", "Job")',
                type: "GET",
                data: { notes: notes, jobID: jobID },
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.success) {
                        $(".alert").hide();
                        $("#popuperrorMsgRegion").removeClass("alert-danger");
                        $("#popuperrorMsgRegion").addClass("alert-success");
                        $("#popuperrorMsgRegion").html(closeButton + "Job Notes has been saved successfully.");
                        $("#popuperrorMsgRegion").show();
                        $("#popuperrorMsgRegion").fadeOut(6000);
                        $("#Notes").val("");
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("JobList", "Job")',
                            data: parameters + "&pageIndex=" + 1 + "&jobID=" + jobID,
                            dataType: 'json',
                            success: function (response) {
                                $("#tblCase tr").remove();
                                var trHTML = '';
                                if (response.PagedList != null) {
                                    $.each(response.PagedList, function (i, item) {
                                        trHTML +=
                                                   '<tr class="notesTR color">' + '<td colspan="2" class="notes">' + item.Notes + '</td>' + '<td style="text-align:center;width:34px;"><a href="javascript:DeleteJobNotes(' + item.JobNotesID + ')" style="background:url(../../Images/delete-icon.png) no-repeat center; text-decoration:none;" title="Delete">&nbsp; &nbsp; &nbsp; &nbsp;</a></td>' + '</tr>' +
                                                   '<tr class="createdTR color1">' + '<td class="createdBy">' + '<b style="color:#555;">Created By : </b>' + item.Created + '</td>' +
                                                   '<td class="createdDate">' + '<b style="color:#555;">Created Date : </b>' + item.strCreatedDate + '</td>' +
                                                    '<td>' + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + '</td>'
                                        '</tr>';
                                    });
                                }
                                $('#tblCase').append(trHTML);
                                $(".color:odd").css("background-color", "#fff");
                                $(".color1:odd").css("background-color", "#fff");
                            },
                            error: function (req, status, error) {
                                alert("Could not get patient name properly. Status = " + status + " Error=" + error + " Req=" + req);
                            }
                        });
                    }
                },
            });
        }
    }

    var pageIndex = 1;
    function scrolldvIndividual(obj) {

        $("#dvIndividual").on("scroll", function (e) {
            $('#tblHeaderScroll').scrollLeft($(tblScroll).scrollLeft());
            var $o = $(e.currentTarget);
            if ($o[0].scrollHeight - $o.scrollTop() <= $o.outerHeight()) {
                GetRecords();
            }
        });

    }

    function GetRecords() {
        pageIndex++;
        var parameters = $('#frmIndex').serialize();
        var jobID = $("#BasicDetails_JobID").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("JobList", "Job")',
            data: parameters + "&pageIndex=" + pageIndex + "&jobID=" + jobID,
            dataType: 'json',
            success: OnSuccess,
            error: function (req, status, error) {
                alert("Could not get patient name properly. Status = " + status + " Error=" + error + " Req=" + req);
            }
        });
    }

    function OnSuccess(response) {
        var trHTML = '';
        if (response.PagedList != null) {
            $.each(response.PagedList, function (i, item) {
                trHTML +=
                           '<tr class="notesTR color">' + '<td colspan="2" class="notes">' + item.Notes + '</td>' + '<td style="text-align:center;width:34px;"><a href="javascript:DeleteJobNotes(' + item.JobNotesID + ')" style="background:url(../../Images/delete-icon.png) no-repeat center; text-decoration:none;" title="Delete">&nbsp; &nbsp; &nbsp; &nbsp;</a></td>' + '</tr>' +
                           '<tr class="createdTR color1">' + '<td class="createdBy">' + '<b style="color:#555;">Created By : </b>' + item.Created + '</td>' +
                           '<td class="createdDate">' + '<b style="color:#555;">Created Date : </b>' + item.strCreatedDate + '</td>' +
                            '<td>' + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + '</td>'
                '</tr>';
            });
        }
        $('#tblCase').append(trHTML);
        $(".color:odd").css("background-color", "#fff");
        $(".color1:odd").css("background-color", "#fff");
    }

    function DeleteJobNotes(jobNotesId) {
        var result = confirm("Are you sure you want to delete this note?");
        var parameters = $('#frmIndex').serialize();
        var jobID = $("#BasicDetails_JobID").val();
        if (result) {
            $.ajax({
                url: '@Url.Action("DeleteJobNotes", "Job")',
                type: "POST",
                async: false,
                data: JSON.stringify({ jobNotesId: jobNotesId }),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.success) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("JobList", "Job")',
                            data: parameters + "&pageIndex=" + 1 + "&jobID=" + jobID,
                            dataType: 'json',
                            success: function (response) {
                                $("#tblCase tr").remove();
                                var trHTML = '';
                                if (response.PagedList != null) {
                                    $.each(response.PagedList, function (i, item) {
                                        trHTML +=
                                                   '<tr class="notesTR color">' + '<td colspan="2" class="notes">' + item.Notes + '</td>' + '<td style="text-align:center;width:34px;"><a href="javascript:DeleteJobNotes(' + item.JobNotesID + ')" style="background:url(../../Images/delete-icon.png) no-repeat center; text-decoration:none;" title="Delete">&nbsp; &nbsp; &nbsp; &nbsp;</a></td>' + '</tr>' +
                                                   '<tr class="createdTR color1">' + '<td class="createdBy">' + '<b style="color:#555;">Created By : </b>' + item.Created + '</td>' +
                                                   '<td class="createdDate">' + '<b style="color:#555;">Created Date : </b>' + item.strCreatedDate + '</td>' +
                                                    '<td>' + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + '</td>'
                                        '</tr>';
                                    });
                                }
                                $('#tblCase').append(trHTML);
                                setTimeout(function () {
                                    if ($('#tblCase tr').length == 0) {
                                        var trHTML = '';
                                        trHTML +=
                                                      '<tr style="border:none;padding: 10px 20px;height: 34px;text-align:center;">' + '<td colspan="3" style="padding-top:10px;">' + 'No Records Found' + '</td>' + '</tr>';
                                        $('#tblCase').append(trHTML);
                                    }
                                }, 200);
                                $(".color:odd").css("background-color", "#fff");
                                $(".color1:odd").css("background-color", "#fff");
                            },
                            error: function (req, status, error) {
                                alert("Could not get patient name properly. Status = " + status + " Error=" + error + " Req=" + req);
                            }
                        });
                        $(".alert").hide();
                        $("#successMsgRegion").removeClass("alert-danger");
                        $("#successMsgRegion").addClass("alert-success");
                        $("#successMsgRegion").html(closeButton + "Job Notes deleted successfully.");
                        $("#successMsgRegion").show();
                        $("#successMsgRegion").fadeOut(6000);
                    }
                },
            });
        }
    }

    $(function () {
        'use strict';
        var url = '@Url.Action("Upload", "Job")';
        @*$('#divSchedulingEdit').load('@Url.Action("_jobScheduling","Job")' + "?id=@Model.Id")*@

        $('#uploadBtnJobSignature').fileupload({
            url: url,
            dataType: 'json',
            done: function (e, data) {
                var UploadFailedFiles = [];
                UploadFailedFiles.length = 0;

                for (var i = 0; i < data.result.length; i++) {

                    if (data.result[i].Status == true) {

                        var guid = '@Model.Guid';
                        var signName = $('#imgSign').attr('class');
                        $("[name='Signature']").each(function () {
                            $(this).remove();
                        });
                        if (signName != null && signName != "") {
                            DeleteFileFromUserOnCancel(signName, guid);
                        }
                        var proofDocumentURL = '@FormBot.Helper.ProjectSession.UploadedDocumentPath';
                        var imagePath = proofDocumentURL + "JobDocuments" + "/" + guid;
                        var SRC = imagePath + "/" + data.result[i].FileName;
                        $('#imgSign').attr('src', SRC);
                        $('#imgSign').attr('class', data.result[i].FileName);


                        $('#imgSignature').show();


                        $('<input type="hidden">').attr({
                            name: 'Signature',
                            value: data.result[i].FileName,
                            id: data.result[i].FileName,
                        }).appendTo('form');

                    }
                    else {
                        UploadFailedFiles.push(data.result[i].FileName);
                    }
                }
                if (UploadFailedFiles.length > 0) {
                    $(".alert").hide();
                    $("#successMsgRegion").hide();
                    $("#errorMsgRegion").html(closeButton + UploadFailedFiles.length + " " + "File has not been uploaded.");
                    $("#errorMsgRegion").show();
                    $("#errorMsgRegion").fadeOut(5000);
                }
                else {
                    $(".alert").hide();
                    $("#errorMsgRegion").hide();
                    $("#successMsgRegion").html(closeButton + "File has been uploaded successfully.");
                    $("#successMsgRegion").show();
                    $("#successMsgRegion").fadeOut(5000);
                }
            },
            progressall: function (e, data) {

            },

            singleFileUploads: false,
            send: function (e, data) {
                var documentType = data.files[0].type.split("/");
                var mimeType = documentType[0];
                if (data.files.length > 1) {
                    for (var i = 0; i < data.files.length; i++) {
                        if (data.files[i].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                            $(".alert").hide();
                            $("#successMsgRegion").hide();
                            $("#errorMsgRegion").html(closeButton + " " + data.files[i].name + " Maximum file size limit exceeded. Please upload a file smaller  than" + " " + maxsize + "MB");
                            $("#errorMsgRegion").show();
                            $("#errorMsgRegion").fadeOut(5000);
                            return false;
                        } else if (CheckSpecialCharInFileName(data.files[i].name)) {
                            ShowErrorMsgForFileName("Please upload file that not conatain <> ^ [] .")
                            return false;
                        }
                    }
                }
                else {
                    if (data.files[0].size > parseInt('@FormBot.Helper.ProjectSession.MaxImageSize')) {
                        $(".alert").hide();
                        $("#successMsgRegion").hide();
                        $("#errorMsgRegion").html(closeButton + "Maximum  file size limit exceeded.Please upload a  file smaller than" + " " + maxsize + "MB");
                        $("#errorMsgRegion").show();
                        $("#errorMsgRegion").fadeOut(5000);
                        return false;
                    } else if (CheckSpecialCharInFileName(data.files[0].name)) {
                        ShowErrorMsgForFileName("Please upload file that not conatain <> ^ [] .")
                        return false;
                    }
                }
                if (mimeType != "image") {
                    $(".alert").hide();
                    $("#errorMsgRegion").html(closeButton + "Please upload a file with .jpg , .jpeg or .png extension.");
                    $("#errorMsgRegion").show();
                    $('html').animate({ scrollTop: 0 }, 'slow');//IE, FF
                    $('body').animate({ scrollTop: 0 }, 'slow');
                    $("#errorMsgRegion").fadeOut(5000);
                    return false;


                }
                $(".alert").hide();
                $("#errorMsgRegion").html("");
                $("#errorMsgRegion").hide();

                $('<input type="hidden">').attr({
                    name: 'Guid',
                    value: '@Model.Guid',
                    id: '@Model.Guid',
                }).appendTo('form');
                return true;

            },
            formData: { userId: '@Model.Guid' }
        });

        $("ul.create-job-menu").on("click", "li", function () {
            $('ul.create-job-menu').each(function () {
                $(this).find('li').each(function () {
                    $(this).removeClass("active");
                });
            });

            if ($("#BasicDetails_JobID").val() == "0") {
                $("#ActiveJob").addClass("active");
            } else {

                $(this).addClass("active");
                if ($("#hasJobID").val() == "0") {
                    $("#hasJobID").val($("#BasicDetails_JobID").val());
                }

                if ($(this).index() == 0) {
                    $("#jobTitle").html("Job Details");
                    $("#invoice").hide();
                    $("#history").hide();
                    $("#createJobView").show();
                    $(".assign").show();
                    $("#createJobMessage").hide();
                } else if ($(this).index() == 1) {
                    $("#jobTitle").html("Invoice");
                    $("#createJobView").hide();
                    $("#createJobNotes").hide();
                    $("#createJobMessage").hide();
                    $("#invoice").show();
                    $("#history").hide();
                    $(".assign").hide();
                } else if ($(this).index() == 2) {
                    $("#jobTitle").html("Notes");
                    $("#createJobView").hide();
                    $("#createJobNotes").show();
                    $('#createJobNotes').load('@Url.Action("GetJobNotes", "Job")?jobID=' + '@Url.RequestContext.RouteData.Values["id"]');
                    $("#createJobMessage").hide();
                    $("#invoice").hide();
                    $("#history").hide();
                    $(".assign").hide();
                    setTimeout(function () {
                        $(".color:odd").css("background-color", "#fff");
                        $(".color1:odd").css("background-color", "#fff");
                        if ($('#tblCase tr').length == 0) {
                            var trHTML = '';
                            trHTML +=
                                          '<tr style="border:none;padding: 10px 20px;height: 34px;text-align:center;">' + '<td colspan="3" style="padding-top:10px;">' + 'No Records Found' + '</td>' + '</tr>';
                            $('#tblCase').append(trHTML);
                        }
                    }, 200);
                } else if ($(this).index() == 3) {
                    $("#jobTitle").html("History");
                    $("#createJobView").hide();
                    $("#createJobNotes").hide();
                    $("#createJobMessage").hide();
                    $("#invoice").hide();
                    $("#history").show();
                    $(".assign").hide();
                } else if ($(this).index() == 4) {
                    $("#jobTitle").html("Message");
                    $("#createJobView").hide();
                    $("#createJobNotes").hide();
                    //$("#createJobMessage").load('@Url.Action("Messages", "JobEmailThread")?jobID=' + '@Url.RequestContext.RouteData.Values["id"]');
                    $("#createJobMessage").show();
                    $("#invoice").hide();
                    $("#history").hide();
                    $(".assign").hide();
                }
            }

            return false;
        });

        @*function getNotes() {
                $('#createJobNotes').show();
                $('#createJobNotes').load('@Url.Action("JobNotes","Job")');
            }*@
    });
</script>
<div class="container-fluid create-job">
    <div class="title">
        <h1 id="jobTitle">Create Job</h1>
        <a class="back-btn pull-right" title="Back" href="@Url.Action("Index","Job")"><img alt="" src='@Url.Content("~/images/back-icon.png")'>Back</a>
    </div>
    <div class="alert alert-danger alert-dismissible" role="alert" id="errorMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <div class="alert alert-success alert-dismissible" role="alert" id="successMsgRegion" style="display: none">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    </div>
    <input type="hidden" id="hasJobID" value="0" />
    <ul class="create-job-menu">
        <li class="active" id="ActiveJob"><a href="javascript:void(0)" title="Job Details">Job Details</a></li>

        <li><a href="javascript:void(0);" title="Invoice">Invoice</a></li>

        <li><a href="javascript:void(0);" title="Notes">Notes</a></li>

        <li><a href="javascript:void(0);" title="History">History</a></li>

        <li><a href="javascript:void(0);" title="Message">Message</a></li>

        <li class="assign">
            <div class="row">
                @if (isAssignSSC)
{
    <div class="assign-job">
        <label class="control-label" id="SolarSubLabel">Assign Job to SSC:</label>
        @Html.DropDownList("SSCID", new List<SelectListItem>(), new { id = "SSCID", @class = "form-control" })
    </div>
}
                @if (isAssignSCO)
{
    <div class="assign-job">
        <label class="control-label" id="SolarConnectionLabel">Assign Job to SCO:</label>
        @Html.DropDownList("ScoID", new List<SelectListItem>(), new { id = "ScoID", @class = "form-control" })
    </div>
}
            </div>
        </li>
    </ul>

    <div class="row">
        <div id="createJobView">
            <div class="col-md-3 create-job-left-bar">

                @Html.Partial("_CreateJob")


            </div>
            @*<div id="createDocuments">*@
            <div class="col-md-9 create-job-right-bar">
                <div class="row">
                    <div class="col-sm-4 text-center">
                        <div class="apply-box">
                            <h3 class="title green-bg">Preapproval Status: <strong>Approved</strong></h3>
                            <p>Not yet applied?</p>
                            <input type="button" class="btn border-btn" value="Apply Now">
                        </div>
                    </div>
                    <div class="col-sm-4 text-center">
                        <div class="apply-box">
                            <h3 class="title blue-bg">Connection Paper Work</h3>
                            <p>Not yet applied?</p>
                            <input type="button" class="btn border-btn" value="Apply Now">
                        </div>
                    </div>
                    <div class="col-sm-4 text-center">
                        <div class="apply-box">
                            <h3 class="title pink-bg">STC Submission</h3>
                            <p>You have met the required ppw to trade</p>
                            <input type="button" class="btn border-btn active" value="Applied">
                        </div>
                    </div>
                </div>

                @Html.Partial("_Documents")

                @if (Model.JobID > 0)
                {
                    @*@Html.Action("_JobPhoto", "Job")*@
                    @Html.Partial("_JobPhoto")
                }
                else
                {
                    <div class="documents-block">
                        <h4 class="hed">Photos</h4>
                        <div class="documents-inner-block">
                            <div class="installation-title">
                                <h5>Installation <span>(0)</span></h5>
                                <div class="upload-link">
                                    <a href="javascript:void(0)" style="text-decoration:none;" title="Upload Photos">Upload Photos |</a>
                                    <a href="javascript:void(0)" style="text-decoration:none;" title="Delete Selected">Delete Selected</a>
                                </div>
                            </div>
                            <ul class="installation-list"></ul>

                        </div>
                        <div class="documents-inner-block">
                            <div class="installation-title">
                                <h5>Serial Number <span>(0)</span></h5>
                                <div class="upload-link">
                                    <a href="javascript:void(0)" style="text-decoration:none;" title="Upload Photos">Upload Photos |</a>
                                    <a href="javascript:void(0)" style="text-decoration:none;" title="Delete Selected">Delete Selected</a>
                                </div>
                            </div>
                            <ul class="installation-list"></ul>

                        </div>
                    </div>
                }
                <div id="divSchedulingEdit"></div>

                @*@Html.Partial("_jobScheduling", new ViewDataDictionary { { "id", "1234" } });*@
                @*<div>
                        <ul class="media-list scheduling-list">
                            <li class="media">
                                <div class="media-left">
                                    <div class="date-box">
                                        <div class="month">FEB</div>
                                        <div class="date">22</div>
                                        <div class="year">2016</div>
                                    </div>
                                </div>
                                <div class="media-body">
                                    <div class="edit-box">
                                        <a class="edit" href="#" title="edit"></a>
                                        <a class="delete" href="#" title="delete"></a>
                                    </div>
                                    <p><a class="volkan" href="#" title="Volkan Erbroy">Volkan Erbroy</a><span class="fix-up">Fix Up</span> <span class="time">14:00 PM</span> </p>
                                    <p class="text">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's Lorem.</p>
                                </div>
                            </li>
                            <li class="media">
                                <div class="media-left">
                                    <div class="date-box">
                                        <div class="month">FEB</div>
                                        <div class="date">22</div>
                                        <div class="year">2016</div>
                                    </div>
                                </div>
                                <div class="media-body">
                                    <div class="edit-box">
                                        <a class="edit" href="#" title="edit"></a>
                                        <a class="delete" href="#" title="delete"></a>
                                    </div>
                                    <p><a class="volkan" href="#" title="Volkan Erbroy">Volkan Erbroy</a><span class="fix-up">Fix Up</span> <span class="time">14:00 PM</span> </p>
                                    <p class="text">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's Lorem.</p>
                                </div>
                            </li>
                            <li class="media">
                                <div class="media-left">
                                    <div class="date-box">
                                        <div class="month">FEB</div>
                                        <div class="date">22</div>
                                        <div class="year">2016</div>
                                    </div>
                                </div>
                                <div class="media-body">
                                    <div class="edit-box">
                                        <a class="edit" href="#" title="edit"></a>
                                        <a class="delete" href="#" title="delete"></a>
                                    </div>
                                    <p><a class="volkan" href="#" title="Volkan Erbroy">Volkan Erbroy</a><span class="fix-up">Fix Up</span> <span class="time">14:00 PM</span> </p>
                                    <p class="text">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's Lorem.</p>
                                </div>
                            </li>
                        </ul>



                    </div>*@

            </div>
        </div>


        <div id="createJobNotes" style="display:none;margin-top:25px;">
            @*@Html.Partial("JobNotes",new FormBot.Entity.JobNotes())*@
        </div>
        <div id="createJobMessage" style="display: none; margin-top: 25px;">
            @if (ViewBag.lstEmailThread != null)
            {
                @Html.Partial("~/Views/JobEmailThread/Messages.cshtml", (IEnumerable<FormBot.Entity.Email.EmailThread>)ViewBag.lstEmailThread)     
            }
        </div>
        <div id="invoice" style="display:none;">
            <h2 style="text-align:center;line-height:150px;"> Under Construction </h2>
        </div>
        <div id="history" style="display:none;">
            <h2 style="text-align:center;line-height:150px;">Under Construction</h2>
        </div>
    </div>
</div>

<link href="~/Content/jquery.mCustomScrollbar.css" rel="stylesheet" />

<style>
    .ui-autocomplete {
        z-index: 99999999999999 !important;
    }

    .notes {
        padding-top: 8px;
        padding-left: 5px;
    }

    .notesTR {
        border: none;
        padding: 10px 20px;
        height: 34px;
        background-color: #f8f8f8;
    }

    .createdTR {
        border-bottom: 1px solid #c8c8c8;
        padding: 0px 20px;
        height: 34px;
        background-color: #f8f8f8;
    }

    .createdBy {
        border: none;
        padding-left: 5px;
        padding-top: 5px;
    }

    .tblCase {
        width: 100%;
        background: #fff;
        margin: 0px;
        overflow-y: auto;
    }

    .createdDate {
        border: none;
        padding-top: 5px;
    }

    .dvIndividual {
        border-bottom-width: 0px;
        height: 350px;
        border-color: #c8c8c8;
        border: none;
    }
</style>
<script type="text/javascript">
    $(document).ready(function (e) {
      
           
            
        $('#date-pick, #date-pick1, .date-pick').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true
        }).on('change', function () {
            $(this).valid();
        });
    });


    ddaccordion.init({
        headerclass: "expandable",
        contentclass: "sidebar-list",
        revealtype: "click",
        collapseprev: false,
        defaultexpanded: [0],
        onemustopen: true,
        animatedefault: false,
        persiststate: true,
        toggleclass: ["", "openheader"],
        togglehtml: ["prefix", "", ""],
        animatespeed: "normal",
        oninit: function (headers, expandedindices) {
        },
        onopenclose: function (header, index, state, isuseractivated) {
        }
    })
</script>