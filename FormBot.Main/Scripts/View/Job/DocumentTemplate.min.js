var trackData = [], undoData = [], cntrlIsPressed = !1, found_names = [], copyDiv = []; pdfItemsStr = pdfItemsStr.replace(/\\/g, "/"); var foo, selectedDiv = [], selectable = !1, pdfItems = []; pdfItemsStr && (pdfItems = JSON.parse(pdfItemsStr)); var pdfDoc = null, pageNum = 1, pageRendering = !1, pageNumPending = null, pageLeftPending = 0, pageTopPending = 0, pdfPageWidth = 0, pdfPageHeight = 0, pdfRotate = 0; offsetX = 0, offsetY = 0; var formFields = {}, div = document.getElementById("holder"), $ActiveDiv = null, $CopyDiv = null, oldSelect = [], ctrlDown = !1, ctrlKey = 17, cmdKey = 91, vKey = 86, cKey = 67, data = JSON.parse(jsonData), withoutBg = !1, withoutBorder = !1; function disabledPageIcon(e) { e > 1 ? $("#previous-page").show() : $("#previous-page").hide(), e == pdfDoc.numPages ? $("#next-page").hide() : $("#next-page").show() } function setOutliner(e, t) { var a = t.shiftKey, l = t.ctrlKey; t.preventDefault(); var n = 0, d = 0; if ($("#ungroupElement").click(), a ? ($(e).closest("div").find("a").each(function (t, i) { $(this).hasClass("active") && (n = t), $(this)[0] == $(e)[0] && (d = t) }), n > d ? $(e).closest("div").find("a").each(function (e, t) { e <= n && e >= d && $(this).addClass("active") }) : $(e).closest("div").find("a").each(function (e, t) { e <= d && e >= n && $(this).addClass("active") }), $("#job_field_label").text(""), selectedDiv = []) : l ? ($(e).addClass("active"), $("#job_field_label").text(""), selectedDiv = []) : ($(e).closest("div").find(".active").removeClass("active"), $(e).addClass("active"), $("#job_field_label").text($(".items.active").text())), oldSelect.length > 0) for (var s = 0; s < oldSelect.length; s++) { for (i = 0; i < selectedDiv.length; i++)$(selectedDiv[i]).attr("fieldname") == oldSelect[s] && selectedDiv.splice(i, 1); $("[fieldname='" + oldSelect[s] + "']").closest("div").removeClass("blueBorder") } $(e).closest("div").find(".active").each(function () { if ("select" != $(this).attr("id")) { flagOutliner = !1; var e = $(this).attr("id"); -1 != e.indexOf("Textbox_") && (e = e.replace("Textbox", "undefined")), -1 != e.indexOf("Textarea_") && (e = e.replace("Textarea", "undefined")), -1 != e.indexOf("Signature_") && (e = e.replace("Signature", "undefined")), -1 != e.indexOf("Checkbox_") && (e = e.replace("Checkbox", "undefined")), -1 != e.indexOf("Image_") && (e = e.replace("Image", "undefined")), -1 != e.indexOf("Draw_") && (e = e.replace("Draw", "undefined")), 1 == $("#document-paging").val() && 0 == $("[fieldname='" + e + "']").length ? OutlinerNextPage(e, t) : OutlinerField(e, a, l, t), oldSelect.push(e) } else oldSelect = [] }), (a || l) && (selectedDiv = [], $(".blueBorder").each(function (e, t) { selectedDiv.push(t) }), $("#groupElement").click()) } data.push({ label: "select", value: "select" }), $(document).keydown(function (e) { "17" == e.which && (cntrlIsPressed = !0) }), $(document).keyup(function () { cntrlIsPressed = !1 }), $(document).ready(function () { function e() { var e = $("#header").innerHeight(), t = $(window).innerHeight() - (e + $("#footer").innerHeight() + $(".doc-editor-header").innerHeight() + $(".upper-toolbar").innerHeight() + 47); $(".caustam-editor-outer").height(t) } var t; $(".caustam-editor-outer").onPositionChanged(function () { $(".caustam-editor-outer").getNiceScroll().resize() }), $("#outliner-li").click(function () { setTimeout(function () { selectedDiv.length > 1 || clickItemOutliner($(".items.active").attr("id"), !1) }, 300) }), $("#popupDocPreview").on("hidden.bs.modal", function () { $("#divViewer").html("") }), $(window).on("load", function () { setTimeout(function () { $(".caustam-editor-outer").niceScroll({ cursorcolor: "#c1c1c1", background: "#f2f2f2", cursorwidth: 15, cursorborder: "none", cursorborderradius: 0, autohidemode: !1, bouncescroll: !1, horizrailenabled: !0, railvalign: "bottom" }), $(".outliner_list").niceScroll({ cursorcolor: "#c1c1c1", background: "#f2f2f2", cursorwidth: 5, cursorborder: "none", cursorborderradius: 0, autohidemode: !0, bouncescroll: !1, horizrailenabled: !0, railvalign: "bottom" }) }, 1e3) }), e(), $(window).on("resize", function () { e() }), $("section#content").addClass("editor"), $("#selectable").selectable(), $("#onOffSwitchChkChecked").change(function () { for (var e = $("#onOffSwitchChkChecked").prop("checked"), t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).find('[type="checkbox"]').prop("checked", e) }), $("#wrapper").addClass("custom-wrapper"), $(".pdf-name").text(pdfname), "" != pdfUrl ? init(pdfloadurl) : alert("File is not available."), stateId > 0 ? $("#folder-name").text(stateName) : -1 == stateId || "" == stateId ? $("#folder-name").text("STC") : -2 == stateId ? $("#folder-name").text("CES") : 0 == stateId && $("#folder-name").text("Custom"), $("#zoom-dropdown").val("100"), disabledIcon(), $("input[type=radio][name=aspectratio]").change(function () { setAspectRatio($("input[name='aspectratio']:checked").val(), $(selectedDiv[0])) }), $("#onOffSwitchDrawEnable").change(function () { if ($(this).prop("checked")) for (var e = 0; e < selectedDiv.length; e++) { var t = $(selectedDiv[e]).attr("id"); $("#" + t).find("canvas.jSignature").add($("#" + t).filter("canvas.jSignature")).data("jSignature.this").settings.readOnly = !1, $("#" + t).find("canvas.jSignature").width($("#" + t).width()), $("#" + t).find("canvas.jSignature").height($("#" + t).height()) } else for (e = 0; e < selectedDiv.length; e++) { t = $(selectedDiv[e]).attr("id"); $("#" + t).find("canvas.jSignature").add($("#" + t).filter("canvas.jSignature")).data("jSignature.this").settings.readOnly = !0, $("#" + t).find("canvas.jSignature").width(0), $("#" + t).find("canvas.jSignature").height(0) } }), $("#left-align-img").click(function () { for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).find(".image").css("left", "0"), $(selectedDiv[e]).find(".image").css("right", ""), $(selectedDiv[e]).find(".image").removeClass("img-center"), $(selectedDiv[e]).find(".image").hasClass("img-center-middle") && ($(selectedDiv[e]).find(".image").removeClass("img-center-middle"), $(selectedDiv[e]).find(".image").addClass("img-middle")), $(selectedDiv[e]).attr("align", "1") }), $("#right-align-img").click(function () { for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).find(".image").css("right", "0"), $(selectedDiv[e]).find(".image").css("left", ""), $(selectedDiv[e]).find(".image").hasClass("img-center-middle") && ($(selectedDiv[e]).find(".image").removeClass("img-center-middle"), $(selectedDiv[e]).find(".image").addClass("img-middle")), $(selectedDiv[e]).find(".image").removeClass("img-center"), $(selectedDiv[e]).attr("align", "2") }), $("#center-align-img").click(function () { for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).find(".image").hasClass("img-center-middle") || ($(selectedDiv[e]).find(".image").hasClass("img-middle") ? ($(selectedDiv[e]).find(".image").addClass("img-center-middle"), $(selectedDiv[e]).find(".image").removeClass("img-center")) : $(selectedDiv[e]).find(".image").addClass("img-center")), $(selectedDiv[e]).attr("align", "3"), $(selectedDiv[e]).find(".image").css("left", ""), $(selectedDiv[e]).find(".image").css("right", "") }), $("#top-align-img").click(function () { for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).find(".image").css("top", "0"), $(selectedDiv[e]).find(".image").css("bottom", ""), $(selectedDiv[e]).find(".image").removeClass("img-middle"), $(selectedDiv[e]).attr("align", "4"), $(selectedDiv[e]).find(".image").hasClass("img-center-middle") && ($(selectedDiv[e]).find(".image").removeClass("img-center-middle"), $(selectedDiv[e]).find(".image").addClass("img-center")) }), $("#bottom-align-img").click(function () { for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).find(".image").css("bottom", $(".document_imageUpload").height()), $(selectedDiv[e]).find(".image").css("top", ""), $(selectedDiv[e]).find(".image").removeClass("img-middle"), $(selectedDiv[e]).attr("align", "5"), $(selectedDiv[e]).find(".image").hasClass("img-center-middle") && ($(selectedDiv[e]).find(".image").removeClass("img-center-middle"), $(selectedDiv[e]).find(".image").addClass("img-center")) }), $("#middle-align-img").click(function () { for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).find(".image").hasClass("img-center-middle") || ($(selectedDiv[e]).find(".image").hasClass("img-center") ? ($(selectedDiv[e]).find(".image").addClass("img-center-middle"), $(selectedDiv[e]).find(".image").removeClass("img-middle")) : $(selectedDiv[e]).find(".image").addClass("img-middle")), $(selectedDiv[e]).attr("align", "6"), $(selectedDiv[e]).find(".image").css("top", ""), $(selectedDiv[e]).find(".image").css("bottom", "") }), $("#fill-width").click(function () { for (var e = 0; e < selectedDiv.length; e++) { var t = $(selectedDiv[e]).outerWidth(); $(selectedDiv[e]).find(".image").width(t); var i = t / (parseInt($(selectedDiv[0]).find("img").attr("width")) / parseInt($(selectedDiv[0]).find("img").attr("height"))); $(selectedDiv[e]).find(".image").height(i), $(selectedDiv[e]).attr("fill-width", "1"), $(selectedDiv[e]).attr("fill-height", ""), $(selectedDiv[e]).attr("fill-content", ""), parseInt($(selectedDiv[0]).find(".image").css("max-width")) < t && $(selectedDiv[e]).find(".image").css("max-width", t + "px") } }), $("#fill-height").click(function () { for (var e = 0; e < selectedDiv.length; e++) { var t = $(selectedDiv[e]).outerHeight() - $(".document_imageUpload").height(), i = parseInt($(selectedDiv[0]).find("img").attr("width")) / parseInt($(selectedDiv[0]).find("img").attr("height")); $(selectedDiv[e]).find(".image").height(t); var a = t * i; $(selectedDiv[e]).find(".image").width(a), $(selectedDiv[e]).attr("fill-height", "1"), $(selectedDiv[e]).attr("fill-width", ""), $(selectedDiv[e]).attr("fill-content", ""), parseInt($(selectedDiv[0]).find(".image").css("max-height")) < t && $(selectedDiv[e]).find(".image").css("max-height", t + "px") } }), $("#fill-box-image").click(function () { for (var e = 0; e < selectedDiv.length; e++) { var t = $(selectedDiv[e]).find(".image").height(), i = $(selectedDiv[e]).find(".image").width(); i > 350 ? $(selectedDiv[e]).width(350) : $(selectedDiv[e]).width(i), t > 150 ? $(selectedDiv[e]).height(150 + $(".document_imageUpload").height()) : $(selectedDiv[e]).height(t + $(".document_imageUpload").height()), 1 == $(selectedDiv[e]).attr("fill-height") ? $("#fill-height").click() : 1 == $(selectedDiv[e]).attr("fill-width") ? $("#fill-width").click() : 1 == $(selectedDiv[e]).attr("fill-content") && $("#fill-content").click() } }), $("#fill-content").click(function () { for (var e = 0; e < selectedDiv.length; e++) { var t = $(selectedDiv[e]).outerWidth(), i = $(selectedDiv[e]).outerHeight() - $(".document_imageUpload").height(); $(selectedDiv[e]).find(".image").height(i), $(selectedDiv[e]).find(".image").width(t), $(selectedDiv[e]).attr("fill-content", "1"), $(selectedDiv[e]).attr("fill-width", ""), $(selectedDiv[e]).attr("fill-height", ""), parseInt($(selectedDiv[0]).find(".image").css("max-width")) < t && $(selectedDiv[e]).find(".image").css("max-width", t + "px"), parseInt($(selectedDiv[0]).find(".image").css("max-height")) < i && $(selectedDiv[e]).find(".image").css("max-height", i + "px") } }), $("#lineWidth-plus").click(function () { var e = $("#field_lineWidth").val(); $("#field_lineWidth").val(parseInt(e) + 1); for (var t = 0; t < selectedDiv.length; t++) { var i = $(selectedDiv[t]).attr("id"); $("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").settings.lineWidth = parseInt(e) + 1, $("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").settings.data) } }), $("#lineWidth-minus").click(function () { var e = $("#field_lineWidth").val(); $("#field_lineWidth").val(parseInt(e) - 1); for (var t = 0; t < selectedDiv.length; t++) { var i = $(selectedDiv[t]).attr("id"); $("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").settings.lineWidth = parseInt(e) - 1, $("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").settings.data) } }), $("#field_lineWidth").focusout(function () { var e = $("#field_lineWidth").val(); $("#field_lineWidth").val(e); for (var t = 0; t < selectedDiv.length; t++) { var i = $(selectedDiv[t]).attr("id"); $("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").settings.lineWidth = parseInt(e), $("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($("#" + i).find("canvas.jSignature").add($("#" + i).filter("canvas.jSignature")).data("jSignature.this").settings.data) } }), $("#field_lineWidth").keypress(function (e) { "13" == (e.keyCode ? e.keyCode : e.which) && $("#field_lineWidth").focusout() }), $("#filter-outliner-bypage").change(function () { var e = $(this).val(); found_names = [], $(".added").each(function (t, i) { 0 != e && $(i).attr("pagenumber") == e && setOutlinerValueForPage(i), 0 == e && getOutlinerData() }), populateOutlinerDropdown() }), $("#filter-textbox").click(function () { $(this).closest("li").hasClass("active") ? (filterOutliner(textHashCode, !1, !1, "Textbox"), $(this).closest("li").removeClass("active")) : (filterOutliner(textHashCode, !0, !1, "Textbox"), $(this).closest("li").addClass("active")), populateOutlinerDropdown() }), $("#filter-textarea").click(function () { $(this).closest("li").hasClass("active") ? (filterOutliner(textHashCode, !1, !0, "Textarea"), $(this).closest("li").removeClass("active")) : (filterOutliner(textHashCode, !0, !0, "Textarea"), $(this).closest("li").addClass("active")), populateOutlinerDropdown() }), $("#filter-signature").click(function () { $(this).closest("li").hasClass("active") ? (filterOutliner(buttonHashCode, !1, !1, "Signature"), $(this).closest("li").removeClass("active")) : (filterOutliner(buttonHashCode, !0, !1, "Signature"), $(this).closest("li").addClass("active")), populateOutlinerDropdown() }), $("#jobFields").click(function () { oldFieldName = $("#jobFieldValue").val() }), $("#filter-checkbox").click(function () { $(this).closest("li").hasClass("active") ? (filterOutliner(checkBoxHashCode, !1, !1, "Checkbox"), $(this).closest("li").removeClass("active")) : (filterOutliner(checkBoxHashCode, !0, !1, "Checkbox"), $(this).closest("li").addClass("active")), populateOutlinerDropdown() }), $(".edit-link").click(function () { var e = $(this).parent().find(".pdf-name"), t = $("<input>", { val: e.text(), type: "text" }); t.addClass("form-control txtrenamefile"), e.replaceWith(t), t.select(), $(".edit-link").hide(), $("#saveFilename").show(), $("#cancelFilename").show(), $(".pdf-input").removeClass("remove-icon") }), $("#copy").click(function () { (copyDiv = []).push.apply(copyDiv, selectedDiv), disabledIcon() }), $("#paste").click(function () { for (var e = 0; e < copyDiv.length; e++) { var t = $(copyDiv[e]), i = t.attr("data-type"), a = null; "t" == i ? a = t.find('input[type="text"]').first() : "ta" == i ? a = t.find("textarea").first() : "c" == i ? a = t.find('input[type="checkbox"]').first() : "sa" != i && "btn" != i && "sa" != i && "im" != i || (a = t); var l = $("#the-svg"), n = l.offset().top, d = l.offset().left, s = a.val(), r = a.attr("fieldname"); if (null != r) if (r.includes("undefined")) { r = "undefined_" + generateFieldName(), $("#jobFields").val("select") } else { var o = r = r.split("_")[0] + "_" + r.split("_")[1], c = 2; for ($("#jobFields").val(r); $("[fieldname='" + o + "']").length > 0;)o = r + "_" + c, c++; c > 2 && (r = r + "_" + (c - 1)), $("#jobFieldValue").val(r) } _elementLeft = t.offset().left - d + 10, _elementTop = t.offset().top - n + 10, _elementWidth = t.outerWidth() + "px", _elementHeight = t.outerHeight() + "px", _maxLength = a.prop("maxlength"), _fontSize = a.css("font-size"), _fontName = a.css("font-family"), _horiAlign = a.attr("horialign"), _vertAlign = a.attr("vertalign"), _aspectRatio = a.attr("aspectratio"), _pageNum = t.attr("pagenumber"), _textColor = a.css("color"), _isBold = "700" == a.css("font-weight"), _isItalic = "italic" == a.css("font-style"), _bgcolor = t.css("background-color"), _bordercolor = t.css("border-left-color"), _align = a.css("text-align"); var f = AddInitialControlOnPageLoad(i, s, r, _elementLeft, _elementTop, _elementWidth, _elementHeight, _maxLength, _fontSize, _fontName, _horiAlign, _vertAlign, _aspectRatio, _pageNum, _textColor, _isBold, _isItalic, "", _bgcolor, _bordercolor, _align); "t" == f.data("type") || "c" == f.data("type") ? setOutlinerValue(f, f.find("input").attr("fieldname")) : "ta" == f.data("type") ? setOutlinerValue(f, f.find("textarea").attr("fieldname")) : setOutlinerValue(f, f.attr("fieldname")), populateOutlinerDropdown(), trackData.push(f) } foo.disable(), foo.enable(), $(selectedDiv[0]).hasClass("grouping") && $("#ungroupElement").click(), selectedDiv = []; for (var g = 0; g < trackData.length; g++)g >= trackData.length - copyDiv.length && selectedDiv.push(trackData[g]); for (g = 0; g < copyDiv.length; g++)$(copyDiv[g]).removeClass("blueBorder"); for (g = 0; g < selectedDiv.length; g++)$(selectedDiv[g]).addClass("blueBorder"); copyDiv = [], $("#groupElement").click(), disabledIcon(), $(".outliner_list").getNiceScroll().resize() }), $("#document-paging").change(function () { 0 == $(this).val() ? $(".page-icon").hide() : disabledPageIcon(1), $("#the-svg").find(".svg").remove(), $(".added").remove(), $("[class^='groupingDiv']").remove(), init(pdfloadurl), $("#current-page").val(1) }), $(".caustam-editor-outer").scroll(function () { 0 == $("#document-paging").val() && setPageNumber() }), controlClick(), $("#next-page").click(function () { $("#the-svg").find(".svg").remove(), $(".added").remove(), $("[class^='groupingDiv']").remove(); var e = parseInt($("#current-page").val()); disabledPageIcon(e + 1), $("[pagenumber='" + e + "']").remove(), renderPage(e + 1, pdfDoc.numPages), $("#current-page").val(e + 1) }), $("#previous-page").click(function () { $("#the-svg").find(".svg").remove(), $(".added").remove(), $("[class^='groupingDiv']").remove(); var e = parseInt($("#current-page").val()); disabledPageIcon(e - 1), $("[pagenumber='" + e + "']").remove(), renderPage(e - 1, pdfDoc.numPages), $("#current-page").val(e - 1) }), $("#current-page").keydown(function (e) { "13" == e.which && $("#current-page").focusout() }), $("#current-page").focus(function () { t = $(this).val() }), $("#current-page").focusout(function () { if ($("#current-page").val() <= pdfDoc.numPages) if (0 == $("#document-paging").val()) { var e = $("#header").height() + $(".doc-editor-header").innerHeight() + $(".upper-toolbar").innerHeight(), i = $($("#the-svg").find(".svg")[$("#current-page").val() - 1]).offset().top - e, a = $(".caustam-editor-outer").scrollTop(); i > window.innerHeight && $(".caustam-editor-outer").animate({ scrollTop: i + a }, 1e3), i < 0 && $(".caustam-editor-outer").animate({ scrollTop: Math.abs(i + a) }, 1e3) } else { $("#the-svg").find(".svg").remove(), $(".added").remove(), $("[class^='groupingDiv']").remove(); var l = parseInt($("#current-page").val()); renderPage(l, pdfDoc.numPages), disabledPageIcon(l) } else $("#current-page").val(t) }), $("#groupElement").click(function () { if (!$(selectedDiv[0]).hasClass("grouping")) { for (var e = $("#holderParentDiv").width(), t = 0, i = $("#the-svg").height(), a = 0, l = 0; l < selectedDiv.length; l++) { var n = parseFloat($(selectedDiv[l]).css("left")); n < e && (e = n); var d = n + $(selectedDiv[l]).width(); d > t && (t = d); var s = parseFloat($(selectedDiv[l]).css("top")); s < i && (i = s); var r = s + $(selectedDiv[l]).height(); r > a && (a = r), $(selectedDiv[l]).addClass("grouping") } if (selectedDiv.length > 0) { var o = t - e, c = a - i, f = !0; i = i, e = e; var g, p, u = generateGroup(), h = '<div class="' + u + '" style="position:absolute;top:' + i + "px;left:" + e + "px;border:2px solid blue;width:" + (parseInt(o) + 10) + "px;height:" + (parseInt(c) + 10) + 'px;"></div>'; $("#holder").append(h); for (l = 0; l < selectedDiv.length; l++)$("." + u).append($(selectedDiv[l])), g = parseFloat($(selectedDiv[l]).css("left")), p = parseFloat($(selectedDiv[l]).css("top")), $(selectedDiv[l]).css("top", p - i), $(selectedDiv[l]).css("left", g - e), $(selectedDiv[l]).draggable("disable"), 0 == l ? (o = $(selectedDiv[l]).outerWidth(), c = $(selectedDiv[l]).outerHeight()) : f && (o == $(selectedDiv[l]).outerWidth() && c == $(selectedDiv[l]).outerHeight() ? ($("#field_width").val($(selectedDiv[l]).outerWidth()), $("#field_height").val($(selectedDiv[l]).outerHeight())) : ($("#field_width").val(""), $("#field_height").val(""), f = !1)); var v = { x: 0, y: 0 }; $("." + u).draggable({ start: function (e) { v.x = e.clientX, v.y = e.clientY }, drag: function (e, t) { var i = parseFloat($("#zoom-dropdown").val() / 100), a = t.originalPosition; t.position = { left: (e.clientX - v.x + a.left) / i, top: (e.clientY - v.y + a.top) / i } }, cancel: "canvas", containment: ".ui-droppable", handle: $(".grouping"), scroll: !0 }), $(".ungroup").show(), $(".group").hide(), disabledIcon() } } }), $("#ungroupElement").click(function () { for (i = 0; i < selectedDiv.length; i++) { var e = parseFloat($(selectedDiv[i]).parent().css("left")), t = parseFloat($(selectedDiv[i]).parent().css("top")); if ($(selectedDiv[i]).parent().find(".added").each(function () { var i = parseFloat($(this).css("left")), a = parseFloat($(this).css("top")); $(this).css("position", "absolute"), $(this).css("left", e + i + "px"), $(this).css("top", t + a + "px") }), $(selectedDiv[i]).hasClass("grouping")) { var a = $(selectedDiv[i]).parent().contents(); $(selectedDiv[i]).parent().replaceWith(a) } $(selectedDiv[i]).parent().children().removeClass("grouping"), $(selectedDiv[i]).hasClass("ui-draggable") && $(selectedDiv[i]).draggable("enable") } $(".ungroup").hide(), $(".group").show(), disabledIcon() }), $("#FontFamily").change(function () { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).css("font-family", $("#FontFamily").val()) }), $("#field_maxlength").focusout(function () { var e = $("#field_maxlength").val(); for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").attr("maxlength", e), $($(selectedDiv[i])).find("textarea").attr("maxlength", e) }), $("#text-bold").click(function () { if ($("#text-bold").hasClass("active")) { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("font-weight", ""), $($(selectedDiv[i])).find("textarea").css("font-weight", ""); $("#text-bold").removeClass("active") } else { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("font-weight", "bold"), $($(selectedDiv[i])).find("textarea").css("font-weight", "bold"); $("#text-bold").addClass("active") } }), $("#text-italic").click(function () { if ($("#text-italic").hasClass("active")) { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("font-style", ""), $($(selectedDiv[i])).find("textarea").css("font-style", ""); $("#text-italic").removeClass("active") } else { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("font-style", "italic"), $($(selectedDiv[i])).find("textarea").css("font-style", "italic"); $("#text-italic").addClass("active") } }), $("#text-left").click(function () { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("text-align", "left"), $($(selectedDiv[i])).find("textarea").css("text-align", "left"); $("#text-left").addClass("active"), $("#text-center").removeClass("active"), $("#text-right").removeClass("active") }), $("#text-center").click(function () { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("text-align", "center"), $($(selectedDiv[i])).find("textarea").css("text-align", "center"); $("#text-center").addClass("active"), $("#text-right").removeClass("active"), $("#text-left").removeClass("active") }), $("#text-right").click(function () { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("text-align", "right"), $($(selectedDiv[i])).find("textarea").css("text-align", "right"); $("#text-right").addClass("active"), $("#text-center").removeClass("active"), $("#text-left").removeClass("active") }), $("#font-size-plus").click(function () { var e = $("#font-size").val().match(/\d/g); for (e = e.join(""), e = parseInt(e) + 1, i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("font-size", e + "px"), $($(selectedDiv[i])).find("textarea").css("font-size", e + "px"); $("#font-size").val(e + "px") }), $("#font-size-minus").click(function () { var e = $("#font-size").val().match(/\d/g); for (e = e.join(""), e = parseInt(e) - 1, i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("input").css("font-size", e + "px"), $($(selectedDiv[i])).find("textarea").css("font-size", e + "px"); $("#font-size").val(e + "px") }), $("#line-height-plus").click(function () { var e = $("#line-height").val().match(/\d/g); for (e = e.join(""), e = parseInt(e) + 3, i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("textarea").css("line-height", e + "px"); $("#line-height").val(e + "px") }), $("#line-height-minus").click(function () { var e = $("#line-height").val().match(/\d/g); for (e = e.join(""), e = parseInt(e) - 3, i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).find("textarea").css("line-height", e + "px"); $("#line-height").val(e + "px") }), $("#text-color-chk").change(function () { $(this).prop("checked") ? $("#text-color-choice").show() : $("#text-color-choice").hide() }), $("#bg-color-chk").change(function () { $(this).prop("checked") ? $("#bg-color-choice").show() : $("#bg-color-choice").hide() }), $("#border-color-chk").change(function () { $(this).prop("checked") ? $("#border-color-choice").show() : $("#border-color-choice").hide() }), $("#zoom-dropdown").change(function () { var e = $("#zoom-dropdown").val(), t = parseInt(e); $(".caustam-editor-con").css("transform", "scale(" + t / 100 + ")"), $(".caustam-editor-con").css("transform-origin", "left top"), $("#zoom-dropdown").val(t), $(".caustam-editor-outer").getNiceScroll().resize(), disabledIcon() }), $("#zoom-in").click(function () { var e = $("#zoom-dropdown").val(), t = parseInt(e) + 25; $(".caustam-editor-con").css("transform", "scale(" + t / 100 + ")"), $(".caustam-editor-con").css("transform-origin", "left top"), $("#zoom-dropdown").val(t), disabledIcon(), $(".caustam-editor-outer").getNiceScroll().resize(), setPageNumber() }), $("#zoom-out").click(function () { var e = $("#zoom-dropdown").val(), t = parseInt(e) - 25; $(".caustam-editor-con").css("transform", "scale(" + t / 100 + ")"), $(".caustam-editor-con").css("transform-origin", "left top"), $("#zoom-dropdown").val(t), disabledIcon(), $(".caustam-editor-outer").getNiceScroll().resize(), setPageNumber() }), $("#undo").click(function () { var e = trackData.pop(); if (0 == $("#holder").find(e).length) { var t = { x: 0, y: 0 }; e.removeClass("blueBorder"), $("#holder").append(e), $(".added .control").click(function () { $(this).focus() }), e.click(function (e) { InputControlClick($(this), e) }), e.draggable({ start: function (e) { t.x = e.clientX, t.y = e.clientY }, drag: function (e, i) { var a = parseFloat($("#zoom-dropdown").val() / 100), l = i.originalPosition; i.position = { left: (e.clientX - t.x + l.left) / a, top: (e.clientY - t.y + l.top) / a } }, cancel: "canvas", containment: ".ui-droppable", scroll: !0 }).resizable({ containment: ".ui-droppable", handles: "nw,ne,sw,se", stop: function (e, t) { setTimeout(function () { setAspectRatioResize(), "im" == $(t.element).data("type") && (1 == $(t.element).attr("fill-height") ? $("#fill-height").click() : 1 == $(t.element).attr("fill-width") ? $("#fill-width").click() : 1 == $(t.element).attr("fill-content") && $("#fill-content").click()) }, 500) }, resize: function (e, t) { var i = t.size.width - t.originalSize.width, a = t.originalSize.width + i / parseFloat($("#zoom-dropdown").val() / 100), l = t.size.height - t.originalSize.height, n = t.originalSize.height + l / parseFloat($("#zoom-dropdown").val() / 100); t.size.width = a, t.size.height = n, "dw" == $(t.element).data("type") && ($(t.element).find(".jSignature").attr("width", a + "px"), $(t.element).find(".jSignature").attr("height", n + "px"), $("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").settings.data)) } }), "t" == e.data("type") || "c" == e.data("type") ? ($("#jobFields").val(e.find("input").attr("fieldname").split("_")[0] + "_" + e.find("input").attr("fieldname").split("_")[1]), $("#jobFieldValue").val(""), setOutlinerValue(e, e.find("input").attr("fieldname"))) : "ta" == e.data("type") ? ($("#jobFields").val(e.find("textarea").attr("fieldname").split("_")[0] + "_" + e.find("textarea").attr("fieldname").split("_")[1]), setOutlinerValue(e, e.find("textarea").attr("fieldname"))) : ($("#jobFields").val(e.attr("fieldname").split("_")[0] + "_" + e.attr("fieldname").split("_")[1]), setOutlinerValue(e, e.attr("fieldname"))) } else e.remove(), removeOutlinerValue(e); populateOutlinerDropdown(), undoData.push(e), disabledIcon(), $(".outliner_list").getNiceScroll().resize() }), $("#redo").click(function () { var e = undoData.pop(); if (0 == $("#holder").find(e).length) { e.removeClass("blueBorder"), $("#holder").append(e); var t = { x: 0, y: 0 }; e.draggable({ start: function (e) { t.x = e.clientX, t.y = e.clientY }, drag: function (e, i) { var a = parseFloat($("#zoom-dropdown").val() / 100), l = i.originalPosition; i.position = { left: (e.clientX - t.x + l.left) / a, top: (e.clientY - t.y + l.top) / a } }, cancel: "canvas", containment: ".ui-droppable", scroll: !0 }).resizable({ containment: ".ui-droppable", handles: "nw,ne,sw,se", stop: function (e, t) { "im" == $(t.element).data("type") && (1 == $(t.element).attr("fill-height") ? $("#fill-height").click() : 1 == $(t.element).attr("fill-width") ? $("#fill-width").click() : 1 == $(t.element).attr("fill-content") && $("#fill-content").click()) }, resize: function (e, t) { var i = t.size.width - t.originalSize.width, a = t.originalSize.width + i / parseFloat($("#zoom-dropdown").val() / 100), l = t.size.height - t.originalSize.height, n = t.originalSize.height + l / parseFloat($("#zoom-dropdown").val() / 100); t.size.width = a, t.size.height = n, "dw" == $(t.element).data("type") && ($(t.element).find(".jSignature").attr("width", a + "px"), $(t.element).find(".jSignature").attr("height", n + "px"), $("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").settings.data)) } }), e.click(function (e) { InputControlClick($(this), e) }), $(".added .control").click(function () { $(this).focus() }), "t" == e.data("type") || "c" == e.data("type") ? ($("#jobFields").val(e.find("input").attr("fieldname").split("_")[0] + "_" + e.find("input").attr("fieldname").split("_")[1]), $("#jobFieldValue").val(""), setOutlinerValue(e, e.find("input").attr("fieldname"))) : "ta" == e.data("type") ? ($("#jobFields").val(e.find("textarea").attr("fieldname").split("_")[0] + "_" + e.find("textarea").attr("fieldname").split("_")[1]), setOutlinerValue(e, e.find("textarea").attr("fieldname"))) : ($("#jobFields").val(e.attr("fieldname").split("_")[0] + "_" + e.attr("fieldname").split("_")[1]), setOutlinerValue(e, e.attr("fieldname"))) } else e.remove(), removeOutlinerValue(e); populateOutlinerDropdown(), 5 == trackData.length && trackData.splice(1, 1), trackData.push(e), disabledIcon(), $(".outliner_list").getNiceScroll().resize() }), $("#delete").click(function () { if (selectedDiv.length > 0) { for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).hasClass("grouping") && $("#ungroupElement").click(), $(selectedDiv[e]).remove(), 5 == trackData.length && trackData.splice(1, 1), trackData.push($(selectedDiv[e])), disabledIcon(), removeOutlinerValue($(selectedDiv[e])), selectedDiv.splice(e, 1), e--; populateOutlinerDropdown() } else alert("Please select field to delete") }), $("#toFront").click(function () { var e = $(selectedDiv[0]).attr("pagenumber"), t = $(selectedDiv[0]).position().left, i = $(selectedDiv[0]).position().left + $(selectedDiv[0]).width(), a = $(selectedDiv[0]).position().top, l = $(selectedDiv[0]).position().top + $(selectedDiv[0]).height(); $("[pagenumber=" + e + "]").each(function () { var e = $(this); if (e != $(selectedDiv[0])) { var n = e.position().left, d = e.position().left + e.width(), s = e.position().top, r = e.position().top + e.height(); (n > t && n < i || d >= t && d < i || t > n && t < d || i >= n && i < d) && (s > a && s < l || r > a && r < l || a > s && a < r || l >= s && l < s) && e.css("z-index", "0") } }), $(selectedDiv[0]).css("z-index", "2") }), $("#toBack").click(function () { var e = $(selectedDiv[0]).attr("pagenumber"), t = $(selectedDiv[0]).position().left, i = $(selectedDiv[0]).position().left + $(selectedDiv[0]).width(), a = $(selectedDiv[0]).position().top, l = $(selectedDiv[0]).position().top + $(selectedDiv[0]).height(); $("[pagenumber=" + e + "]").each(function () { var e = $(this); if (e != $(selectedDiv[0])) { var n = e.position().left, d = e.position().left + e.width(), s = e.position().top, r = e.position().top + e.height(); (n > t && n < i || d >= t && d < i || t > n && t < d || i >= n && i < d) && (s > a && s < l || r > a && r < l || a > s && a < r || l >= s && l < s) && e.css("z-index", "2") } }), $(selectedDiv[0]).css("z-index", "0") }), $("#field_autosize").click(function () { for (i = 0; i < selectedDiv.length; i++)"t" == $(selectedDiv[i]).data("type") ? ($(selectedDiv[i]).width(198), $(selectedDiv[i]).height(28), $("#field_width").val(198), $("#field_height").val(28), $(selectedDiv[i]).attr("height", "28px"), $(selectedDiv[i]).attr("width", "198px")) : "ta" == $(selectedDiv[i]).data("type") ? ($(selectedDiv[i]).width(298), $(selectedDiv[i]).height(98), $("#field_width").val(298), $("#field_height").val(98), $(selectedDiv[i]).attr("height", "298px"), $(selectedDiv[i]).attr("width", "98px")) : "sa" == $(selectedDiv[i]).data("type") || "btn" == $(selectedDiv[i]).data("type") || "dw" == $(selectedDiv[i]).data("type") ? ($(selectedDiv[i]).width(258), $(selectedDiv[i]).height(98), $("#field_width").val(258), $("#field_height").val(98), $(selectedDiv[i]).attr("height", "98px"), $(selectedDiv[i]).attr("width", "258px")) : "c" == $(selectedDiv[i]).data("type") && ($(selectedDiv[i]).width(28), $(selectedDiv[i]).height(28), $("#field_width").val(28), $("#field_height").val(28), $(selectedDiv[i]).attr("height", "28px"), $(selectedDiv[i]).attr("width", "28px")) }), $("#align-to-left").click(function () { if (1 == $("#align-to-left").css("opacity")) { for (var e = $(window).width(), t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).position().left < e && (e = $(selectedDiv[t]).position().left); for (t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("left", e); $("#field_left").val(e), setHeightWidthGroupingDiv() } }), $("#align-to-top").click(function () { if (1 == $("#align-to-top").css("opacity")) { for (var e = $(window).height(), t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).position().top < e && (e = $(selectedDiv[t]).position().top); for (t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("top", e); $("#field_top").val(e), setHeightWidthGroupingDiv() } }), $("#align-justify").click(function () { if (1 == $("#align-justify").css("opacity")) { $(window).width(); for (var e = $(selectedDiv[0]).position().left + $(selectedDiv[0]).width() / 2, t = 1; t < selectedDiv.length; t++)$(selectedDiv[t]).css("left", e - $(selectedDiv[t]).width() / 2); setHeightWidthGroupingDiv() } }), $("#align-middle").click(function () { if (1 == $("#align-middle").css("opacity")) { $(window).height(); for (var e = $(selectedDiv[0]).position().top + $(selectedDiv[0]).height() / 2, t = 1; t < selectedDiv.length; t++)$(selectedDiv[t]).css("top", e - $(selectedDiv[t]).height() / 2); setHeightWidthGroupingDiv() } }), $("#align-to-bottom").click(function () { if (1 == $("#align-to-bottom").css("opacity")) { for (var e = 0, t = 0; t < selectedDiv.length; t++) { var i = $(selectedDiv[t]).position().top + $(selectedDiv[t]).height(); i > e && (e = i) } for (t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("top", e - $(selectedDiv[t]).height()); setHeightWidthGroupingDiv() } }), $("#align-to-right").click(function () { if (1 == $("#align-to-right").css("opacity")) { for (var e = 0, t = 0; t < selectedDiv.length; t++) { var i = $(selectedDiv[t]).position().left + $(selectedDiv[t]).width(); i > e && (e = i) } for (t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("left", e - $(selectedDiv[t]).width()); setHeightWidthGroupingDiv() } }), $("#horizontal-distribute-center").click(function () { if (1 == $("#horizontal-distribute-center").css("opacity") && selectedDiv.length > 2) { for (var e = $(selectedDiv[0]).parent().width(), t = 0, i = 0; i < selectedDiv.length; i++)t += $(selectedDiv[i]).outerWidth(); var a = (e - t) / (selectedDiv.length - 1), l = selectedDiv; for (i = 0; i < selectedDiv.length; i++)for (var n = i; n > 0;) { if ($(selectedDiv[n]).position().left < $(selectedDiv[n - 1]).position().left) { var d = selectedDiv[n - 1]; selectedDiv[n - 1] = selectedDiv[n], selectedDiv[n] = d } n-- } var s = $(selectedDiv[0]).position().left + $(selectedDiv[0]).outerWidth(); for (i = 1; i < selectedDiv.length; i++)selectedDiv[i].css("left", s + a), s = $(selectedDiv[i]).position().left + $(selectedDiv[i]).outerWidth() } setHeightWidthGroupingDiv(), selectedDiv = l }), $("#vertical-distribute-center").click(function () { if (1 == $("#vertical-distribute-center").css("opacity") && selectedDiv.length > 2) { for (var e = $(selectedDiv[0]).parent().height(), t = 0, i = 0; i < selectedDiv.length; i++)t += $(selectedDiv[i]).outerHeight(); var a = (e - t) / (selectedDiv.length - 1), l = selectedDiv; for (i = 0; i < selectedDiv.length; i++)for (var n = i; n > 0;) { if ($(selectedDiv[n]).position().top < $(selectedDiv[n - 1]).position().top) { var d = selectedDiv[n - 1]; selectedDiv[n - 1] = selectedDiv[n], selectedDiv[n] = d } n-- } var s = $(selectedDiv[0]).position().top + $(selectedDiv[0]).outerHeight(); for (i = 1; i < selectedDiv.length; i++)selectedDiv[i].css("top", s + a), s = $(selectedDiv[i]).position().top + $(selectedDiv[i]).outerHeight() } setHeightWidthGroupingDiv(), selectedDiv = l }), $("#rotate-90").click(function () { for (i = 0; i < selectedDiv.length; i++) { var e = getAngle($(selectedDiv[i])); $(selectedDiv[i]).css("transform", "rotate(" + (e + 90) + "deg)") } }), $("#angle-minus").click(function () { var e = parseInt($("#field_angle").val()); $("#field_angle").val(e - 1), $(selectedDiv[0]).css("transform", "rotate(" + (e - 1) + "deg)") }), $("#angle-plus").click(function () { var e = parseInt($("#field_angle").val()); $("#field_angle").val(e + 1), e = getAngle($(selectedDiv[0])), $(selectedDiv[0]).css("transform", "rotate(" + (e + 1) + "deg)") }), $("#width-plus").click(function () { "" == $("#field_width").val() && $("#field_width").val(0); var e = parseInt($("#field_width").val()) + 1 < 0 ? 0 : parseInt($("#field_width").val()) + 1; $("#field_width").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("width", e), $(selectedDiv[t]).attr("width", e + "px"), $(selectedDiv[t]).find("input[type='checkbox']").length > 0 && ($(selectedDiv[t]).css("height", e), $(selectedDiv[t]).attr("height", e + "px"), $("#field_height").val(e)); setHeightWidthGroupingDiv() }), $("#field_width").focusout(function () { for (var e = parseInt($("#field_width").val()), t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("width", e), $(selectedDiv[t]).attr("width", e + "px"), $(selectedDiv[t]).find("input[type='checkbox']").length > 0 && ($(selectedDiv[t]).css("height", e), $(selectedDiv[t]).attr("height", e + "px"), $("#field_height").val(e)); setHeightWidthGroupingDiv() }), $("#field_width").keypress(function (e) { "13" == (e.keyCode ? e.keyCode : e.which) && $("#field_width").focusout() }), $("#field_height").focusout(function () { for (var e = parseInt($("#field_height").val()), t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("height", e), $(selectedDiv[t]).attr("height", e + "px"), $(selectedDiv[t]).find("input[type='checkbox']").length > 0 && ($(selectedDiv[t]).css("width", e), $(selectedDiv[t]).attr("width", e + "px"), $("#field_width").val(e)); setHeightWidthGroupingDiv() }), $("#field_height").keypress(function (e) { "13" == (e.keyCode ? e.keyCode : e.which) && $("#field_height").focusout() }), $("#width-minus").click(function () { "" == $("#field_width").val() && $("#field_width").val(0); var e = parseInt($("#field_width").val()) - 1 < 0 ? 0 : parseInt($("#field_width").val()) - 1; $("#field_width").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("width", e), $(selectedDiv[t]).attr("width", e + "px"), $(selectedDiv[t]).find("input[type='checkbox']").length > 0 && ($(selectedDiv[t]).css("height", e), $(selectedDiv[t]).attr("height", e + "px"), $("#field_height").val(e)); setHeightWidthGroupingDiv() }), $("#height-plus").click(function () { "" == $("#field_height").val() && $("#field_height").val(0); var e = parseInt($("#field_height").val()) + 1 < 0 ? 0 : parseInt($("#field_height").val()) + 1; $("#field_height").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("height", e), $(selectedDiv[t]).attr("height", e + "px"), $(selectedDiv[t]).find("input[type='checkbox']").length > 0 && ($(selectedDiv[t]).css("width", e), $(selectedDiv[t]).attr("width", e + "px"), $("#field_width").val(e)); setHeightWidthGroupingDiv() }), $("#height-minus").click(function () { "" == $("#field_height").val() && $("#field_height").val(0); var e = parseInt($("#field_height").val()) - 1 < 0 ? 0 : parseInt($("#field_height").val()) - 1; $("#field_height").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("height", e), $(selectedDiv[t]).attr("height", e + "px"), $(selectedDiv[t]).find("input[type='checkbox']").length > 0 && ($(selectedDiv[t]).css("width", e), $(selectedDiv[t]).attr("width", e + "px"), $("#field_width").val(e)); setHeightWidthGroupingDiv() }), $("#pos-left-plus").click(function () { var e = parseInt($("#field_left").val()) + 1; $("#field_left").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("left", e), $(selectedDiv[t]).attr("left", e + "px") }), $("#pos-left-minus").click(function () { var e = parseInt($("#field_left").val()) - 1; $("#field_left").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("left", e), $(selectedDiv[t]).attr("left", e + "px") }), $("#field_left").focusout(function () { for (var e = parseInt($("#field_left").val()), t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("left", e), $(selectedDiv[t]).attr("left", e + "px") }), $("#field_top").focusout(function () { for (var e = parseInt($("#field_top").val()), t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("top", e), $(selectedDiv[t]).attr("top", e + "px") }), $("#pos-top-plus").click(function () { var e = parseInt($("#field_top").val()) + 1; $("#field_top").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("top", e), $(selectedDiv[t]).attr("top", e + "px") }), $("#pos-top-minus").click(function () { var e = parseInt($("#field_top").val()) - 1; $("#field_top").val(e); for (var t = 0; t < selectedDiv.length; t++)$(selectedDiv[t]).css("top", e), $(selectedDiv[t]).attr("top", e + "px") }), $("#btnBack").click(function () { document.location.href = document.referrer }), $("#jSignature").jSignature(), $("#the-svg").click(function () { if (issvgClick) { foo.enable(), $("#ungroupElement").click(); for (var e = 0; e < selectedDiv.length; e++)$(selectedDiv[e]).removeClass("blueBorder"), selectedDiv.splice(e, 1), e--; $("#align-to-left").addClass("disabled"), $("#align-to-top").addClass("disabled"), $("#align-middle").addClass("disabled"), $("#horizontal-distribute-center").addClass("disabled"), $("#vertical-distribute-center").addClass("disabled"), $("#align-to-bottom").addClass("disabled"), $("#align-justify").addClass("disabled"), $("#align-to-right").addClass("disabled"), $("[class^='groupingDiv']").css("border", ""), disabledIcon(), removeallValue() } else issvgClick = !0; controlClick() }), $("#saveFilename").click(function () { $.ajax({ url: renameFilenamUrl, type: "POST", data: JSON.stringify({ docTemplateId: $("#DocumentTemplateId").val(), fileName: $(".txtrenamefile").val() }), contentType: "application/json", success: function (e) { if (e.status) { var t = $("<span>", { text: e.filename }); t.addClass("pdf-name"); var i = $(".pdf-input").find(".txtrenamefile"); $(i).replaceWith(t), $(".edit-link").show(), $(".pdf-name").text(e.filename), $("#saveFilename").hide(), $("#cancelFilename").hide(); var a = pdfloadurl.split("?"); pdfloadurl = e.filepath + "?" + a[1], pdfUrl = e.filepath, $(".pdf-input").addClass("remove-icon") } }, error: function () { } }) }), $("#cancelFilename").click(function () { var e = $("<span>", { text: pdfname }); e.addClass("pdf-name"); var t = $(".pdf-input").find(".txtrenamefile"); $(t).replaceWith(e), $(".edit-link").show(), $(".pdf-name").text(pdfname), $("#saveFilename").hide(), $("#cancelFilename").hide(), $(".pdf-input").addClass("remove-icon") }) }); var issvgClick = !0; function setSelectable() { foo = new Selectables({ elements: ".added", selectedClass: "blueBorder", enable: !0, zone: "#holder", start: function (e) { $("#ungroupElement").click(), selectedDiv = [] }, onSelect: function (e) { selectedDiv.push($(e)) }, stop: function (e) { for (selectable = !0, cntrlIsPressed = !0, i = 0; i < selectedDiv.length; i++)InputControlClick($(selectedDiv[i]), e); selectable = !1, cntrlIsPressed = !1, disabledIcon(), $("#groupElement").click(), heightlightSelectionOutliner(), selectedDiv.length > 1 && (issvgClick = !1) } }) } function heightlightSelectionOutliner() { $("#field_outliner_dropdown").find(".items").removeClass("active"); for (var e = 0; e < selectedDiv.length; e++) { if ($this = $(selectedDiv[e]), $this.find("input[type=text]").length > 0) -1 != (t = $this.find("input[type=text]").attr("fieldname")).indexOf("undefined") ? clickItemOutliner(t.replace("undefined", "Textbox"), !0) : clickItemOutliner(t, !0); else if ($this.find("textarea").length > 0) { -1 != (t = $this.find("textarea").attr("fieldname")).indexOf("undefined") ? clickItemOutliner(t.replace("undefined", "Textarea"), !0) : clickItemOutliner(t, !0) } else if ($this.find("input[type=checkbox]").length > 0) { var t; -1 != (t = $this.find("input[type=checkbox]").attr("fieldname")).indexOf("undefined") ? clickItemOutliner(t.replace("undefined", "Checkbox"), !0) : clickItemOutliner(t, !0) } if ("sa" == $this.attr("data-type") || "btn" == $this.attr("data-type")) -1 != (t = $this.attr("fieldname")).indexOf("undefined") ? clickItemOutliner(t.replace("undefined", "Signature"), !0) : clickItemOutliner(t, !0); if ("dw" == $this.attr("data-type")) -1 != (t = $this.attr("fieldname")).indexOf("undefined") ? clickItemOutliner(t.replace("undefined", "Draw"), !0) : clickItemOutliner(t, !0); if ("im" == $this.attr("data-type")) -1 != (t = $this.attr("fieldname")).indexOf("undefined") ? clickItemOutliner(t.replace("undefined", "Image"), !0) : clickItemOutliner(t, !0) } } function readURL(e) { if (e.files && e.files[0]) { var t, i, a, l = window.URL || window.webkitURL, n = new FileReader; (t = new Image).onload = function () { i = this.width, a = this.height, n.onload = function (t) { $(e).parent().parent().find(".image").attr("src", t.target.result), $(e).parent().parent().find(".image").attr("width", i), $(e).parent().parent().find(".image").css("max-width", i), $(e).parent().parent().find(".image").css("width", i), $(e).parent().parent().find(".image").attr("height", a), $(e).parent().parent().find(".image").css("max-height", a), $(e).parent().parent().find(".image").css("height", a), $(e).parent().parent().find(".image").show(), $("input[type=radio][name=aspectratio]").change() }, n.readAsDataURL(e.files[0]) }, t.src = l.createObjectURL(e.files[0]) } } function filterOutliner(e, t, i, a) { $.each(pdfItems, function (l, n) { var d; n.Type.toString() == e && n.IsTextArea == i && (t ? -1 != n.FieldName.indexOf("undefined") ? found_names.push(n.FieldName.replace("undefined", a)) : found_names.push(n.FieldName) : -1 != n.FieldName.indexOf("undefined") ? -1 != (d = $.inArray(n.FieldName.replace("undefined", a), found_names)) && found_names.splice(d, 1) : -1 != (d = $.inArray(n.FieldName, found_names)) && found_names.splice(d, 1)) }) } function populateOutlinerDropdown() { $("#field_outliner_dropdown").html(""), found_names = found_names.filter(function (e, t) { return found_names.indexOf(e) === t }), $("#field_outliner_dropdown").append('<a class="items" id="select">select</a>'), $.each(found_names, function (e, t) { $("#field_outliner_dropdown").append('<a class="items" id="' + t + '" onclick="setOutliner(this,event);">' + t + "</a>") }) } function populateOutlinerDropdownForSelectFieldName() { $("#field_outliner_dropdown").html(""), $("#field_outliner_dropdown").append('<a class="items" id="select">select</a>'), $.each(found_names, function (e, t) { $("#field_outliner_dropdown").append('<a class="items" id="' + t + '" onclick="setOutliner(this,event);">' + t + "</a>") }) } function setPageNumber() { $("#the-svg").find(".svg").each(function () { $(this).position().top - $(".doc-editor-header").innerHeight() - $(".upper-toolbar").innerHeight() - $("#header").height() - 30 <= 0 && $("#current-page").val($(this).attr("pagenumber")) }) } function getAngle(e) { var t = e.css("transform"), i = 0; if ("none" !== t) { var a = t.split("(")[1].split(")")[0].split(","), l = a[0], n = a[1]; i = Math.round(Math.atan2(n, l) * (180 / Math.PI)) } return i } function disabledIcon() { if ("150" == $("#zoom-dropdown").val() ? $("#zoom-in").addClass("disabled") : $("#zoom-in").removeClass("disabled"), "25" == $("#zoom-dropdown").val() ? $("#zoom-out").addClass("disabled") : $("#zoom-out").removeClass("disabled"), trackData.length > 0 ? $("#undo").removeClass("disabled") : $("#undo").addClass("disabled"), undoData.length > 0 ? $("#redo").removeClass("disabled") : $("#redo").addClass("disabled"), $("#align-to-left").addClass("disabled"), $("#align-justify").addClass("disabled"), $("#align-to-right").addClass("disabled"), $("#align-to-top").addClass("disabled"), $("#align-middle").addClass("disabled"), $("#horizontal-distribute-center").addClass("disabled"), $("#vertical-distribute-center").addClass("disabled"), $("#align-to-bottom").addClass("disabled"), selectedDiv.length > 0) { $("#delete").removeClass("disabled"), $("#toFront").removeClass("disabled"), $("#toBack").removeClass("disabled"), $("#groupElement").addClass("disabled"), $("#copy").removeClass("disabled"), copyDiv.length > 0 ? $("#paste").removeClass("disabled") : $("#paste").addClass("disabled"), $(".wdht-properties").find(".wdht").show(), $(".pos-properties").show(), $("#text-li").removeClass("disabled"), $("#properties-li").removeClass("disabled"), $("#rotate-90").removeClass("disabled"), $(".field-label").show(); for (var e = !0, t = !0, a = !0, l = 0; l < selectedDiv.length; l++)0 == $(selectedDiv[l]).find('[type="checkbox"]').length && (e = !1), 0 == $(selectedDiv[l]).find(".image").length && (t = !1), "dw" != $(selectedDiv[l]).data("type") && (a = !1); e ? $(".checkbox-properties").show() : $(".checkbox-properties").hide(), t ? ($("#fill-width").removeClass("disabled"), $("#fill-height").removeClass("disabled"), $("#fill-content").removeClass("disabled"), $("#fill-box-image").removeClass("disabled"), $(".image-align-properties").show()) : ($("#fill-width").addClass("disabled"), $("#fill-height").addClass("disabled"), $("#fill-content").addClass("disabled"), $("#fill-box-image").addClass("disabled"), $(".image-align-properties").hide()), a ? $(".draw-properties").show() : $(".draw-properties").hide() } else $("#delete").addClass("disabled"), $("#toFront").addClass("disabled"), $("#toBack").addClass("disabled"), $("#copy").addClass("disabled"), $("#paste").addClass("disabled"), $("#fill-width").addClass("disabled"), $("#fill-height").addClass("disabled"), $("#fill-content").addClass("disabled"), $("#fill-box-image").addClass("disabled"), $("#groupElement").addClass("disabled"); for (selectedDiv.length > 1 && ($("#toFront").addClass("disabled"), $("#toBack").addClass("disabled"), $("#field_maxlength").val(""), $("#jobFields").val(""), $("#text-color-spectrum").css("background-color", "rgb(0,0,0)"), $("#bg-color-spectrum").css("background-color", "rgb(207,243,207)"), $("#border-color-spectrum").css("background-color", "rgb(0,0,255)"), $("#text-bold").removeClass("active"), $("#text-underline").removeClass("active"), $("#text-italic").removeClass("active"), $("#groupElement").removeClass("disabled"), $(".pos-properties").hide(), $(".image-properties").hide(), $(".field-label").hide(), $("#align-to-left").removeClass("disabled"), $("#align-justify").removeClass("disabled"), $("#align-to-right").removeClass("disabled"), $("#align-to-top").removeClass("disabled"), $("#align-middle").removeClass("disabled"), $("#horizontal-distribute-center").removeClass("disabled"), $("#vertical-distribute-center").removeClass("disabled"), $("#align-to-bottom").removeClass("disabled")), flagGroup = !1, i = 0; i < selectedDiv.length; i++)if ($(selectedDiv[i]).hasClass("grouping")) { flagGroup = !0; break } !flagGroup && selectedDiv.length > 1 ? $("#rotate-90").removeClass("disabled") : flagGroup && $("#rotate-90").addClass("disabled") } function removeallValue() { $("#field_maxlength").val(""), $("#jobFields").val("select"), $("#field_width").val(""), $("#field_height").val(""), $("#field_left").val(""), $("#field_top").val(""), $("#field_outliner_dropdown").find("a").removeClass("active"), $("#field_outliner_dropdown").find("#select").addClass("active"), $("#field_lineWidth").val("") } function init(e) { var t = e; $.ajaxSetup({ cache: !1 }), PDFJS.workerSrc = pdfWorkerJsUrl, PDFJS.getDocument(t).then(function (e) { pdfDoc = e, $("#total-page").text(pdfDoc.numPages); var t = "<option value = '0'> All Pages</options>"; if (pdfDoc.numPages > 1) for (var i = 0; i < pdfDoc.numPages; i++)t = t + "<option value='" + (i + 1) + "'>" + (i + 1) + " Pages</options>"; $("#filter-outliner-bypage").append(t), 0 == pdfDoc.numPages && $("#loading-image").hide(), renderPage(1, pdfDoc.numPages) }) } function setOutlinerValueForPage(e) { "t" == $(e).data("type") ? found_names.push($(e).find("input").attr("fieldname").replace("undefined", "Textbox")) : "ta" == $(e).data("type") ? found_names.push($(e).find("textarea").attr("fieldname").replace("undefined", "Textarea")) : "sa" == $(e).data("type") || "btn" == $(e).data("type") ? found_names.push($(e).attr("fieldname").replace("undefined", "Signature")) : "c" == $(e).data("type") ? found_names.push($(e).find("input").attr("fieldname").replace("undefined", "Checkbox")) : "im" == $(e).data("type") ? found_names.push($(e).attr("fieldname").replace("undefined", "Image")) : "dw" == $(e).data("type") && found_names.push($(e).attr("fieldname").replace("undefined", "Draw")) } function generateGroup() { for (var e = 0; $(".groupingDiv" + e).length > 0;)e++; return "groupingDiv" + e } function removeOptions(e) { var t; for (t = e.options.length - 1; t >= 0; t--)e.remove(t) } var scale = 2, containerWidth = 0; function renderPage(e, t) { $("#loading-image").show(), pageRendering = !0, pdfDoc.getPage(e).then(function (i) { var a = i.getViewport(scale), l = document.getElementById("the-svg"); containerWidth < a.width && (containerWidth = a.width), l.style.width = containerWidth + "px", l.style.height = a.height + "px"; i.getOperatorList().then(function (e) { return new PDFJS.SVGGraphics(i.commonObjs, i.objs).getSVG(e, a) }).then(function (n) { $(n).attr("class", "svg"), $(n).attr("pagenumber", e), l.appendChild(n), offsetY = $(n).offset().top - $("#the-svg").offset().top, a.offsetY = offsetY, l.style.height = offsetY + $(n).height() + "px", setupForm(i, a, e), applyDrop(l), e++, 0 == $("#document-paging").val() && e <= t ? renderPage(e, t) : $("#loading-image").hide() }) }) } function setupForm(e, t, i) { e.getAnnotations().then(function (e) { for (var a = 0; a < e.length; a++) { var l = e[a], n = "t"; switch (l.subtype) { case "Widget": "Btn" == l.fieldType && (n = 32768 & l.fieldFlags ? "r" : 65536 & l.fieldFlags ? "btn" : "c"), "r" != n && "c" != n || !l.fullName || $.each(l.fullName, function (e) { e == l.fullName.length - 1 && validation.isGlyphsNumber(this) }); var d = "", s = "", r = 50, o = "14px", c = eleType[n].font, f = "Left", g = "Bottom", p = 0, u = "rgb(86, 91, 93)", h = "rgb(203,247,203)", v = "rgb(0,0,255)", m = "left", b = ""; isBold = !1, isItalic = !1; for (var x = $('input[fieldname="' + l.fullName[0] + '"]').length, D = x, w = 0; w < pdfItems.length; w++)if (null != l.fullName[0] && l.fullName[0] == pdfItems[w].FieldName) { if ("c" == n) { if (x > 0) { x--; continue } for (var y = 1, _ = 0; _ < a; _++)if (e[_].fullName == l.fullName[0]) { if (D > 0) { D--; continue } y++ } d = pdfItems[w].AvailableValues[pdfItems[w].AvailableValues.length - y] } else d = pdfItems[w].Value; if (0 == (s = pdfItems[w].FieldName).indexOf("Pre_") ? s = s.substr(4) : 0 == s.indexOf("Conn_") && (s = s.substr(5)), "t" != n && "ta" != n || null == pdfItems[w].PdfItemProperties || (0 != parseInt(pdfItems[w].PdfItemProperties.MaxLength) && (r = parseInt(pdfItems[w].PdfItemProperties.MaxLength)), 0 != parseInt(pdfItems[w].PdfItemProperties.FontSize) && (o = pdfItems[w].PdfItemProperties.FontSize + "px"), c = pdfItems[w].PdfItemProperties.FontName, null != pdfItems[w].PdfItemProperties.TextColor && "" != pdfItems[w].PdfItemProperties.TextColor && (u = pdfItems[w].PdfItemProperties.TextColor), null != pdfItems[w].PdfItemProperties.BackgroundColor && "" != pdfItems[w].PdfItemProperties.BackgroundColor && (h = pdfItems[w].PdfItemProperties.BackgroundColor), null != pdfItems[w].PdfItemProperties.BorderColor && "" != pdfItems[w].PdfItemProperties.BorderColor && (v = pdfItems[w].PdfItemProperties.BorderColor), null != pdfItems[w].PdfItemProperties.Alignment && "" != pdfItems[w].PdfItemProperties.Alignment && (m = pdfItems[w].PdfItemProperties.Alignment), isBold = pdfItems[w].PdfItemProperties.Bold, isItalic = pdfItems[w].PdfItemProperties.Italic), pdfItems[w].ReadOnly && (n = "sa", null != pdfItems[w].PdfItemProperties.HoriAlign && "" != pdfItems[w].PdfItemProperties.HoriAlign && (f = pdfItems[w].PdfItemProperties.HoriAlign), null != pdfItems[w].PdfItemProperties.VertAlign && "" != pdfItems[w].PdfItemProperties.VertAlign && (g = pdfItems[w].PdfItemProperties.VertAlign), null != pdfItems[w].PdfItemProperties.BackgroundColor && "" != pdfItems[w].PdfItemProperties.BackgroundColor && (h = pdfItems[w].PdfItemProperties.BackgroundColor), null != pdfItems[w].PdfItemProperties.BorderColor && "" != pdfItems[w].PdfItemProperties.BorderColor && (v = pdfItems[w].PdfItemProperties.BorderColor), p = pdfItems[w].PdfItemProperties.AspectRatio), pdfItems[w].IsTextArea) { n = "ta"; var k = String.fromCharCode(13, 10); d = d.replaceAll("//n", k) } pdfItems[w].IsImageField && (n = "im", b = pdfItems[w].Value), pdfItems[w].IsDraw && (n = "dw", b = pdfItems[w].Value); break } var C = PDFJS.Util.normalizeRect(t.convertToViewportRectangle(l.rect)); AddInitialControlOnPageLoad(n, d, s, C[0], C[1] + t.offsetY, C[2] - C[0] + "px", C[3] - C[1] + "px", r, o, c, f, g, p, i, u, isBold, isItalic, "", h, v, m, b) } } setInputValuesAtInit() }), $(".caustam-editor-outer").getNiceScroll().resize() } function OutlinerField(e, t, i, a) { var l = $("#header").innerHeight() + $(".doc-editor-header").innerHeight() + $(".upper-toolbar").innerHeight(); if (null != $("[fieldname='" + e + "']").offset()) { var n = $("[fieldname='" + e + "']").offset().top - l; l = l + +$(".pageing-block").innerHeight() + $("#footer").innerHeight() + 15; var d = $(".caustam-editor-outer").scrollTop(); n > window.innerHeight - l && (n -= $(".pageing-block").height(), $(".caustam-editor-outer").animate({ scrollTop: n + d }, 1e3)), n < 0 && $(".caustam-editor-outer").animate({ scrollTop: Math.abs(n + d) }, 1e3) } if ($("[fieldname='" + e + "']").closest("div").addClass("blueBorder"), $("[fieldname='" + e + "']").length > 0) { if (!t && !i) { for (var s = 0; s < selectedDiv.length; s++)$(selectedDiv[s]).removeClass("blueBorder"); selectedDiv = [] } for (s = 0; s < $("[fieldname='" + e + "']").length; s++) { var r = $($("[fieldname='" + e + "']")[s]).closest("div"); cntrlIsPressed = !0, selectable = !0, InputControlClick(r, a), selectedDiv.push(r), selectable = !1 } } cntrlIsPressed = !1, disabledIcon(), disabledPageIcon() } function BindExportValue(e, t) { $.get(getExportFieldValueUrl + "?jobFieldVal=" + e, function (e) { if (e.length > 0) { var i = $("#ddlExportValue"); i.html(""); for (var a = e, l = 0; l < a.length; l++) { var n = a[l].ExportValue, d = a[l].ExportValueID; if (t == n) { var s = '<option value="' + n + '"id="' + d + '" selected="selected">' + n + "</option>"; i.append(s) } else { s = '<option value="' + n + '"id="' + d + '">' + n + "</option>"; i.append(s) } } $(".export").show() } }) } function OnCheckboxChange(e) { var t = e.checked, i = $(e).attr("fieldname"); $(':checkbox[fieldname="' + i + '"]').prop("checked", !1), e.checked = t } function signatureChange(e) { clickSignId = $(e).attr("id"), $("#" + clickSignId).jSignature("isModified") && 0 == $(e).find("#redoSignBtn").length && $(e).append('<input type="button" class="reset" onclick=resetClick() id="resetBtn" value="Clear Draw" style="position: absolute; top: auto; margin: 0px !important; left: 10px;">') } function resetClick() { $("#" + clickSignId).jSignature("reset") } function AddInitialControlOnPageLoad(e, t, i, a, l, n, d, s, r, o, c, f, g, p, u, h, v, m, b, x, D, w) { t = null != t ? t : ""; var y = e, _ = $("#the-svg"), k = _.offset().top; a += _.offset().left, l += k; var C = "" != o ? "font-family:" + o : "", j = 1 == h ? "font-weight: bold;" : "", I = 1 == v ? "font-style: italic;" : "", S = "text-align : left;"; r = Math.round(parseInt(r, 10)) + "px", "right" == D ? S = "text-align : right;" : "center" == D && (S = "text-align : center;"); var F = generateSignatureId(); if ("t" == y) { "off" == t.toLowerCase() && (t = ""); var P = $("<div data-type=" + y + ' class="added" style="border: 1px dotted ' + x + ";opacity:0.8;width:" + n + ";height:" + d + ";position:absolute;background:" + b + ";" + C + " ;font-size: " + r + '"><input class="control" value="' + t + '" type="text" maxlength="' + s + '"  fieldname="' + i + '" style="width:100%; height:100%; background:transparent; border:0px; ' + j + I + S + " color:" + u + ';"></input></div>') } else if ("ta" == y) P = $("<div data-type=" + y + ' class="added" style="border: 1px dotted ' + x + ";opacity:0.8;width:" + n + ";height:" + d + ";position:absolute;background:" + b + ";" + C + " ;font-size: " + r + '"><textarea class="control" value="' + t + '" fieldname="' + i + '" maxlength="' + s + '" style="width:100%; height:100%; background:transparent; border:0px; ' + j + I + S + " color:" + u + ';"></textarea></div>'); else if ("r" == y) P = $("<div data-type=" + y + ' class="added"  style="border: 1px dotted rgb(0, 0, 0);width:' + n + ";height:" + d + ';position:absolute;"><input id="radbtn" class="control" type="radio" style="width:100%; height:100%; background:transparent"></input></div>'); else if ("c" == y) { var O = "yes" == t.toLowerCase() ? "checked=checked" : ""; P = $("<div data-type=" + y + ' class="added" style="border: 1px dotted rgb(0, 0, 0);width:' + n + ";height:" + d + ';position:absolute;"><label class="checkbox"><input type = "checkbox" class="icheck" value="' + t + '"' + O + '" fieldname="' + i + '" onchange="OnCheckboxChange(this)"><span></span></label ></div>') } else if ("sa" == y || "btn" == y) P = $('<div tabindex=1  id="jSignature' + F + '" data-type= "' + y + '"fieldname="' + i + '" class="added signature" onclick=signatureChange(this) style="border: 1px dotted ' + x + ";opacity:0.8;width:" + n + ";height:" + d + ";position:absolute;background:" + b + ';"></div>'); else if ("dw" == y) P = $('<div tabindex=1 id="jSignature' + F + '" data-type= "' + y + '"fieldname="' + i + '" class="added drawing" onclick=signatureChange(this) style="border: 1px dotted ' + x + ";opacity:0.8;width:" + n + ";height:" + d + ";position:absolute;background:" + b + ';"></div>'); else if ("im" == y) if ("" != w && "" != w.split(",")[1]) P = $("<div data-type=" + y + ' fieldname= "' + i + '" class="added"  style="overflow:hidden;border: 1px dotted rgb(0, 0, 0);opacity:1;width:' + n + ";height:" + d + ";position:absolute;background:" + b + ';"><img src="' + w + '" class="image" /><div class="fileUpload primary document_imageUpload"><span>Upload</span><input type="file" class="upload" value="Upload" accept="image/x-png,image/gif,image/jpeg" onchange="readURL(this);"/></div></div>'); else P = $("<div data-type=" + y + ' fieldname= "' + i + '" class="added"  style="overflow:hidden;border: 1px dotted rgb(0, 0, 0);opacity:1;width:' + n + ";height:" + d + ";position:absolute;background:" + b + ';"><img class="image"  alt="No Image" style="display:none;"/><div class="fileUpload primary document_imageUpload"><span>Upload</span><input type="file" class="upload" value="Upload" accept="image/x-png,image/gif,image/jpeg" onchange="readURL(this);"/></div></div>'); if (P.attr("pagenumber", p), $("#holder").append(P), "ta" == e && P.find("textarea").val(t), P.offset({ left: a, top: l }), P.click(function (e) { setTimeout(InputControlClick($(this), e), 100) }), "sa" == P.data("type") || "btn" == y) { $("#jSignature" + F).jSignature(); var z = 15 * P.height() / 100; P.find("canvas").css("margin-top", z), P.find("canvas").css("margin-bottom", z), P.find("canvas.jSignature").add(P.filter("canvas.jSignature")).data("jSignature.this").settings.readOnly = !0, P.find("canvas.jSignature").add(P.filter("canvas.jSignature")).data("jSignature.this").resetCanvas(P.find("canvas.jSignature").add(P.filter("canvas.jSignature")).data("jSignature.this").settings.data) } "dw" == P.data("type") && ($("#jSignature" + F).jSignature(), P.find("canvas.jSignature").add(P.filter("canvas.jSignature")).data("jSignature.this").settings.readOnly = !1, P.find("canvas.jSignature").add(P.filter("canvas.jSignature")).data("jSignature.this").resetCanvas(P.find("canvas.jSignature").add(P.filter("canvas.jSignature")).data("jSignature.this").settings.data)), $(".added .control").click(function () { $(this).focus() }); var N = { x: 0, y: 0 }; return P.draggable({ start: function (e) { N.x = e.clientX, N.y = e.clientY }, drag: function (e, t) { var i = parseFloat($("#zoom-dropdown").val() / 100), a = t.originalPosition; t.position = { left: (e.clientX - N.x + a.left) / i, top: (e.clientY - N.y + a.top) / i } }, cancel: "canvas", containment: ".ui-droppable", scroll: !0 }).resizable({ containment: ".ui-droppable", handles: "nw,ne,sw,se", stop: function (e, t) { setTimeout(function () { setAspectRatioResize(), "im" == $(t.element).data("type") && (1 == $(t.element).attr("fill-height") ? $("#fill-height").click() : 1 == $(t.element).attr("fill-width") ? $("#fill-width").click() : 1 == $(t.element).attr("fill-content") && $("#fill-content").click()) }, 500) }, resize: function (e, t) { var i = t.size.width - t.originalSize.width, a = t.originalSize.width + i / parseFloat($("#zoom-dropdown").val() / 100), l = t.size.height - t.originalSize.height, n = t.originalSize.height + l / parseFloat($("#zoom-dropdown").val() / 100); t.size.width = a, t.size.height = n, "dw" == $(t.element).data("type") && ($(t.element).find(".jSignature").attr("width", a + "px"), $(t.element).find(".jSignature").attr("height", n + "px"), $("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").settings.data)) } }), P } function OutlinerPreviousPage(e, t) { if ($("#the-svg .svg").is(":visible")) { if ($("#current-page").val() > 1 && 0 == $("[fieldname='" + e + "']").length) for (i = parseInt($("#current-page").val()); i >= 1; i--) { 0 == $("[fieldname='" + e + "']").length ? $("#current-page").val() > 0 && ($("#previous-page").click(), setTimeout(function () { OutlinerPreviousPage(e) }, 200)) : OutlinerField(e, !1, !1, t); break } else if (0 != $("[fieldname='" + e + "']").length) return void OutlinerField(e, !1, !1, t) } else setTimeout(function () { OutlinerPreviousPage(e, t) }, 200) } function OutlinerNextPage(e, t) { if ($("#the-svg .svg").is(":visible")) { if ($("#current-page").val() == pdfDoc.numPages && 0 == $("[fieldname='" + e + "']").length) return void OutlinerPreviousPage(e, t); if (0 != $("[fieldname='" + e + "']").length) return void OutlinerField(e, !1, !1, t); for (i = parseInt($("#current-page").val()); i <= pdfDoc.numPages; i++) { 0 == $("[fieldname='" + e + "']").length ? ($("#next-page").click(), setTimeout(function () { OutlinerNextPage(e, t) }, 200)) : OutlinerField(e, !1, !1, t); break } } else setTimeout(function () { OutlinerNextPage(e, t) }, 200) } function InputControlClick(e, t) { if (e.hasClass("grouping") || e.is('[class*="groupingDiv"]') || e.hasClass("ui-resizable-handle") || e.hasClass("fileUpload") || $("#ungroupElement").click(), !e.hasClass("ui-resizable-handle") && !e.hasClass("fileUpload") && !e.is('[class*="groupingDiv"]')) { if (!selectable) if (cntrlIsPressed) { for (var i = 0; i < selectedDiv.length; i++)$(selectedDiv[i])[0] == e[0] && (e.removeClass("blueBorder"), selectedDiv.splice(i, 1), a = !0); a || (e.addClass("blueBorder"), selectedDiv.push(e)) } else { if (null != t && !t.shiftKey) { for (i = 0; i < selectedDiv.length; i++)$($(selectedDiv[i])).removeClass("blueBorder"); selectedDiv = [] } e.addClass("blueBorder"), selectedDiv.push(e) } var a = !1, l = "", n = "", d = ""; $("#holderParentDiv").offset().top; if ($("#holderParentDiv").scrollTop() <= 0 && $("#holderParentDiv").offset().top + 30, $("#field-properties").show(), e.find('input[type="checkbox"]').length > 0 && ($("#jobFieldValue").val(e.find("input").attr("fieldname")), $(".color-properties").hide(), BindExportValue(e.find('input[type="checkbox"]').attr("fieldname"), e.find('input[type="checkbox"]').val()), e.find("input[type=checkbox]").prop("checked") ? $("#onOffSwitchChkChecked").prop("checked", !0) : $("#onOffSwitchChkChecked").prop("checked", !1)), "btn" == e.data("type") || "sa" == e.data("type") || "dw" == e.data("type")) { $("#jobFieldValue").val(e.attr("fieldname")), $("#ddlLineWidth").val(e.attr("lineWidth")); var s = 15 * e.height() / 100; e.find("canvas").css("margin-top", s), e.find("canvas").css("margin-bottom", s), n = rgb2hex(e.css("background-color")), $("#bg-color-spectrum").css("background-color", n), d = rgb2hex(e.css("border-left-color")), $("#border-color-spectrum").css("background-color", d) } if (e.find('input[type="text"]').length > 0 || e.find("textarea").length > 0) { $(".color-properties").show(), e.find('input[type="text"]').length > 0 ? $("#jobFieldValue").val(e.find("input").attr("fieldname")) : $("#jobFieldValue").val(e.find("textarea").attr("fieldname")); var r = !1, o = !1, c = 14; l = e.find('input[type="text"]').length > 0 ? rgb2hex(e.find('input[type="text"]').css("color")) : rgb2hex(e.find("textarea").css("color")), r = e.find('input[type="text"]').length > 0 ? "700" == e.find('input[type="text"]').css("font-weight") : "700" == e.find("textarea").css("font-weight"), o = e.find('input[type="text"]').length > 0 ? "italic" == e.find('input[type="text"]').css("font-style") : "italic" == e.find("textarea").css("font-style"), c = e.find('input[type="text"]').length > 0 ? e.find('input[type="text"]').css("font-size") : e.find("textarea").css("font-size"), $("#font-size").val(parseInt(c) + "px"), $("#text-color-spectrum").css("background-color", l), n = rgb2hex(e.css("background-color")), $("#bg-color-spectrum").css("background-color", n), d = rgb2hex(e.css("border-left-color")), $("#border-color-spectrum").css("background-color", d), r ? $("#text-bold").addClass("active") : $("#text-bold").removeClass("active"), o ? $("#text-italic").addClass("active") : $("#text-italic").removeClass("active"), e.find('input[type="text"]').length > 0 ? "right" == e.find("input").css("text-align") ? ($("#text-right").addClass("active"), $("#text-center").removeClass("active"), $("#text-left").removeClass("active")) : "center" == e.find("input").css("text-align") ? ($("#text-center").addClass("active"), $("#text-left").removeClass("active"), $("#text-right").removeClass("active")) : ($("#text-left").addClass("active"), $("#text-center").removeClass("active"), $("#text-right").removeClass("active")) : "right" == e.find("textarea").css("text-align") ? ($("#text-right").addClass("active"), $("#text-center").removeClass("active"), $("#text-left").removeClass("active")) : "center" == e.find("textarea").css("text-align") ? ($("#text-center").addClass("active"), $("#text-left").removeClass("active"), $("#text-right").removeClass("active")) : ($("#text-left").addClass("active"), $("#text-center").removeClass("active"), $("#text-right").removeClass("active")), $("#FontFamily").val(e.css("font-family").toLowerCase()), $(".export").hide() } if ($("#bg-color-spectrum").spectrum({ color: $("#bg-color-spectrum").css("background-color"), showInput: !0, className: "full-spectrum bg-color-spectrum", showInitial: !0, showPalette: !0, showSelectionPalette: !0, maxSelectionSize: 10, preferredFormat: "hex", localStorageKey: "spectrum.demo", move: function (e) { }, show: function (e) { ischange = !1, previousColor = e }, beforeShow: function () { }, hide: function () { if (ischange && previousColor) for ($("#bg-color-spectrum").css("background-color", $(".bg-color-spectrum").find(".sp-input").val()), i = 0; i < selectedDiv.length; i++)$(selectedDiv[i]).css("background-color", $(".bg-color-spectrum").find(".sp-input").val()) }, change: function () { for (ischange = !0, $("#bg-color-spectrum").css("background-color", $(".bg-color-spectrum").find(".sp-input").val()), i = 0; i < selectedDiv.length; i++)$(selectedDiv[i]).css("background-color", $(".bg-color-spectrum").find(".sp-input").val()) }, palette: [["rgb(0, 0, 0)", "rgb(67, 67, 67)", "rgb(102, 102, 102)", "rgb(204, 204, 204)", "rgb(217, 217, 217)", "rgb(255, 255, 255)"], ["rgb(152, 0, 0)", "rgb(255, 0, 0)", "rgb(255, 153, 0)", "rgb(255, 255, 0)", "rgb(0, 255, 0)", "rgb(0, 255, 255)", "rgb(74, 134, 232)", "rgb(0, 0, 255)", "rgb(153, 0, 255)", "rgb(255, 0, 255)"], ["rgb(230, 184, 175)", "rgb(244, 204, 204)", "rgb(252, 229, 205)", "rgb(255, 242, 204)", "rgb(217, 234, 211)", "rgb(208, 224, 227)", "rgb(201, 218, 248)", "rgb(207, 226, 243)", "rgb(217, 210, 233)", "rgb(234, 209, 220)", "rgb(221, 126, 107)", "rgb(234, 153, 153)", "rgb(249, 203, 156)", "rgb(255, 229, 153)", "rgb(182, 215, 168)", "rgb(162, 196, 201)", "rgb(164, 194, 244)", "rgb(159, 197, 232)", "rgb(180, 167, 214)", "rgb(213, 166, 189)", "rgb(204, 65, 37)", "rgb(224, 102, 102)", "rgb(246, 178, 107)", "rgb(255, 217, 102)", "rgb(147, 196, 125)", "rgb(118, 165, 175)", "rgb(109, 158, 235)", "rgb(111, 168, 220)", "rgb(142, 124, 195)", "rgb(194, 123, 160)", "rgb(166, 28, 0)", "rgb(204, 0, 0)", "rgb(230, 145, 56)", "rgb(241, 194, 50)", "rgb(106, 168, 79)", "rgb(69, 129, 142)", "rgb(60, 120, 216)", "rgb(61, 133, 198)", "rgb(103, 78, 167)", "rgb(166, 77, 121)", "rgb(91, 15, 0)", "rgb(102, 0, 0)", "rgb(120, 63, 4)", "rgb(127, 96, 0)", "rgb(39, 78, 19)", "rgb(12, 52, 61)", "rgb(28, 69, 135)", "rgb(7, 55, 99)", "rgb(32, 18, 77)", "rgb(76, 17, 48)"]] }), $("#text-color-spectrum").spectrum({ color: $("#text-color-spectrum").css("background-color"), showInput: !0, className: "full-spectrum text-color-spectrum", showInitial: !0, showPalette: !0, showSelectionPalette: !0, maxSelectionSize: 10, preferredFormat: "hex", localStorageKey: "spectrum.demo", move: function (e) { }, show: function (e) { ischange = !1, previousColor = e }, beforeShow: function () { }, hide: function () { if (ischange && previousColor) for ($("#text-color-spectrum").css("background-color", $(".text-color-spectrum").find(".sp-input").val()), i = 0; i < selectedDiv.length; i++)$(selectedDiv[i]).find("input").css("color", $(".text-color-spectrum").find(".sp-input").val()), $(selectedDiv[i]).find("textarea").css("color", $(".text-color-spectrum").find(".sp-input").val()) }, change: function () { for (ischange = !0, $("#text-color-spectrum").css("background-color", $(".text-color-spectrum").find(".sp-input").val()), i = 0; i < selectedDiv.length; i++)$(selectedDiv[i]).find("input").css("color", $(".text-color-spectrum").find(".sp-input").val()), $(selectedDiv[i]).find("textarea").css("color", $(".text-color-spectrum").find(".sp-input").val()) }, palette: [["rgb(0, 0, 0)", "rgb(67, 67, 67)", "rgb(102, 102, 102)", "rgb(204, 204, 204)", "rgb(217, 217, 217)", "rgb(255, 255, 255)"], ["rgb(152, 0, 0)", "rgb(255, 0, 0)", "rgb(255, 153, 0)", "rgb(255, 255, 0)", "rgb(0, 255, 0)", "rgb(0, 255, 255)", "rgb(74, 134, 232)", "rgb(0, 0, 255)", "rgb(153, 0, 255)", "rgb(255, 0, 255)"], ["rgb(230, 184, 175)", "rgb(244, 204, 204)", "rgb(252, 229, 205)", "rgb(255, 242, 204)", "rgb(217, 234, 211)", "rgb(208, 224, 227)", "rgb(201, 218, 248)", "rgb(207, 226, 243)", "rgb(217, 210, 233)", "rgb(234, 209, 220)", "rgb(221, 126, 107)", "rgb(234, 153, 153)", "rgb(249, 203, 156)", "rgb(255, 229, 153)", "rgb(182, 215, 168)", "rgb(162, 196, 201)", "rgb(164, 194, 244)", "rgb(159, 197, 232)", "rgb(180, 167, 214)", "rgb(213, 166, 189)", "rgb(204, 65, 37)", "rgb(224, 102, 102)", "rgb(246, 178, 107)", "rgb(255, 217, 102)", "rgb(147, 196, 125)", "rgb(118, 165, 175)", "rgb(109, 158, 235)", "rgb(111, 168, 220)", "rgb(142, 124, 195)", "rgb(194, 123, 160)", "rgb(166, 28, 0)", "rgb(204, 0, 0)", "rgb(230, 145, 56)", "rgb(241, 194, 50)", "rgb(106, 168, 79)", "rgb(69, 129, 142)", "rgb(60, 120, 216)", "rgb(61, 133, 198)", "rgb(103, 78, 167)", "rgb(166, 77, 121)", "rgb(91, 15, 0)", "rgb(102, 0, 0)", "rgb(120, 63, 4)", "rgb(127, 96, 0)", "rgb(39, 78, 19)", "rgb(12, 52, 61)", "rgb(28, 69, 135)", "rgb(7, 55, 99)", "rgb(32, 18, 77)", "rgb(76, 17, 48)"]] }), $("#border-color-spectrum").spectrum({ color: $("#border-color-spectrum").css("background-color"), showInput: !0, className: "full-spectrum border-color-spectrum", showInitial: !0, showPalette: !0, showSelectionPalette: !0, maxSelectionSize: 10, preferredFormat: "hex", localStorageKey: "spectrum.demo", move: function (e) { }, show: function (e) { ischange = !1, previousColor = e }, beforeShow: function () { }, hide: function () { if (ischange && previousColor) for ($("#border-color-spectrum").css("background-color", $(".border-color-spectrum").find(".sp-input").val()), i = 0; i < selectedDiv.length; i++)$(selectedDiv[i]).css("border", "1px dotted " + $(".border-color-spectrum").find(".sp-input").val()), $(selectedDiv[i]).removeClass("blueBorder") }, change: function () { for ($("#border-color-spectrum").css("background-color", $(".border-color-spectrum").find(".sp-input").val()), i = 0; i < selectedDiv.length; i++)$(selectedDiv[i]).css("border", "1px dotted " + $(".border-color-spectrum").find(".sp-input").val()), $(selectedDiv[i]).removeClass("blueBorder") }, palette: [["rgb(0, 0, 0)", "rgb(67, 67, 67)", "rgb(102, 102, 102)", "rgb(204, 204, 204)", "rgb(217, 217, 217)", "rgb(255, 255, 255)"], ["rgb(152, 0, 0)", "rgb(255, 0, 0)", "rgb(255, 153, 0)", "rgb(255, 255, 0)", "rgb(0, 255, 0)", "rgb(0, 255, 255)", "rgb(74, 134, 232)", "rgb(0, 0, 255)", "rgb(153, 0, 255)", "rgb(255, 0, 255)"], ["rgb(230, 184, 175)", "rgb(244, 204, 204)", "rgb(252, 229, 205)", "rgb(255, 242, 204)", "rgb(217, 234, 211)", "rgb(208, 224, 227)", "rgb(201, 218, 248)", "rgb(207, 226, 243)", "rgb(217, 210, 233)", "rgb(234, 209, 220)", "rgb(221, 126, 107)", "rgb(234, 153, 153)", "rgb(249, 203, 156)", "rgb(255, 229, 153)", "rgb(182, 215, 168)", "rgb(162, 196, 201)", "rgb(164, 194, 244)", "rgb(159, 197, 232)", "rgb(180, 167, 214)", "rgb(213, 166, 189)", "rgb(204, 65, 37)", "rgb(224, 102, 102)", "rgb(246, 178, 107)", "rgb(255, 217, 102)", "rgb(147, 196, 125)", "rgb(118, 165, 175)", "rgb(109, 158, 235)", "rgb(111, 168, 220)", "rgb(142, 124, 195)", "rgb(194, 123, 160)", "rgb(166, 28, 0)", "rgb(204, 0, 0)", "rgb(230, 145, 56)", "rgb(241, 194, 50)", "rgb(106, 168, 79)", "rgb(69, 129, 142)", "rgb(60, 120, 216)", "rgb(61, 133, 198)", "rgb(103, 78, 167)", "rgb(166, 77, 121)", "rgb(91, 15, 0)", "rgb(102, 0, 0)", "rgb(120, 63, 4)", "rgb(127, 96, 0)", "rgb(39, 78, 19)", "rgb(12, 52, 61)", "rgb(28, 69, 135)", "rgb(7, 55, 99)", "rgb(32, 18, 77)", "rgb(76, 17, 48)"]] }), 1 != selectedDiv.length ? ($("#align-to-left").removeClass("disabled"), $("#align-justify").removeClass("disabled"), $("#align-to-right").removeClass("disabled"), $("#align-to-top").removeClass("disabled"), $("#align-middle").removeClass("disabled"), $("#horizontal-distribute-center").removeClass("disabled"), $("#vertical-distribute-center").removeClass("disabled"), $("#align-to-bottom").removeClass("disabled")) : ($("#align-to-left").addClass("disabled"), $("#align-justify").addClass("disabled"), $("#align-to-right").addClass("disabled"), $("#align-to-top").addClass("disabled"), $("#align-middle").addClass("disabled"), $("#horizontal-distribute-center").addClass("disabled"), $("#vertical-distribute-center").addClass("disabled"), $("#align-to-bottom").addClass("disabled")), $("#ddlExportValue").change(function () { for (var e = 0; e < selectedDiv.length; e++) { var t = $("#ddlExportValue option:selected").attr("id"), i = $("#jobFieldValue").val() + "_" + t; $(selectedDiv[e]).find("input[type=checkbox]").attr("fieldname", i), $(selectedDiv[e]).find("input[type=checkbox]").val($("#ddlExportValue option:selected").val()), $("#jobFieldLabel").val($("#jobFields").val()), $("#job_field_label").text(i), $("#jobFields").val(i), found_names.pop(), found_names.push(i), populateOutlinerDropdownForSelectFieldName() } }), e.find('input[type="checkbox"]').length > 0 ? $("#jobFields").autocomplete({ source: data, select: function (e, t) { t.item && (e.preventDefault(), $("#jobFieldValue").val(t.item.value), $("#jobFieldLabel").val(t.item.label), $("#jobFields").val(t.item.label), BindExportValue(t.item.value), setTimeout(function () { for (var e = "", i = 0; i < selectedDiv.length; i++)if ("select" == $("#jobFieldValue").val() || "" == $("#jobFieldValue").val() || "select" == $("#jobFields").val()) { var a = generateFieldName(); $(selectedDiv[i]).find("input[type=checkbox]").attr("fieldname", "undefined_" + a), found_names.push("Checkbox_" + a), e = "Checkbox_" + a } else { var l = $("#ddlExportValue option:selected").attr("id"), n = $("#jobFieldValue").val() + "_" + l; $(selectedDiv[i]).find("input[type=checkbox]").attr("fieldname", n), $(selectedDiv[i]).find("input[type=checkbox]").val($("#ddlExportValue option:selected").val()), found_names.pop(), found_names.push(t.item.value + "_" + l), e = t.item.value + "_" + l } populateOutlinerDropdownForSelectFieldName(), clickItemOutliner(e, !1), $("#jobFieldLabel").val($("#jobFields").val()), $("#job_field_label").text(e), $("#jobFields").val(e) }, 1e3)) } }) : $("#jobFields").autocomplete({ source: data, select: function (e, t) { var i = ""; if (t.item) { var a = 2; $("#jobFields").val(t.item.label); for (var l = i = (i = t.item.value).split("_").length > 1 ? i.split("_")[0] + "_" + i.split("_")[1] : i.split("_")[0]; ;) { if (!($("[fieldname='" + i + "_" + (a - 1) + "']").length > 0)) { l = i + "_1"; break } l = i + "_" + a, a++ } i = a > 2 ? i + "_" + (a - 1) : l, $("#jobFieldValue").val(i), e.preventDefault(), $("#jobFieldValue").val(i), $("#jobFieldLabel").val(t.item.label), $("#jobFields").val(t.item.label), $("#ddlExportValue").val("") } for (var n = "", d = 0; d < selectedDiv.length; d++)n = setOutlinerValue($(selectedDiv[d]), i); if ($("[fieldname='" + oldFieldName + "']").length <= 0) { var s = -1, r = $("[fieldname='" + n + "']").closest("div"); "t" == r.data("type") ? s = $.inArray(oldFieldName.replace("undefined", "Textbox"), found_names) : "ta" == r.data("type") ? s = $.inArray(oldFieldName.replace("undefined", "Textarea"), found_names) : "sa" == r.data("type") || "btn" == r.data("type") ? s = $.inArray(oldFieldName.replace("undefined", "Signature"), found_names) : "im" == r.data("type") ? s = $.inArray(oldFieldName.replace("undefined", "Image"), found_names) : "dw" == r.data("type") && (s = $.inArray(oldFieldName.replace("undefined", "Draw"), found_names)), -1 != s && found_names.splice(s, 1) } populateOutlinerDropdown(), clickItemOutliner(n, !1), $("#jobFieldLabel").val($("#jobFields").val()), $("#job_field_label").text(n) } }), $("#field_width").val(e.outerWidth()), $("#field_height").val(e.outerHeight()), $("#field_left").val(e.position().left), $("#field_top").val(e.position().top), $("#field_angle").val("0"), e.find("input[type=text]").length > 0) { $(".image-properties").hide(); var f = e.find("input[type=text]").attr("fieldname"); if (selectable || e.hasClass("grouping") || (-1 != f.indexOf("undefined") ? (clickItemOutliner(f.replace("undefined", "Textbox"), !1), $("#job_field_label").text(f.replace("undefined", "Textbox"))) : (clickItemOutliner(f, !1), $("#job_field_label").text(f))), $("#job_field_type").text("TextBox"), null == f || f.includes("undefined")) $("#jobFields").val("select"); else { $("#jobFields").val(f.split("_")[0] + "_" + f.split("_")[1]); for (i = 0; i < data.length; i++)if (data[i].value == f) { $("#jobFields").val(data[i].label), $("#job_field_label").text(data[i].label); break } } $("#field_maxlength").val(e.find("input[type=text]").attr("maxlength")), $(".line-height-div").hide() } else if (e.find("textarea").length > 0) { $(".image-properties").hide(); f = e.find("textarea").attr("fieldname"); if (selectable || e.hasClass("grouping") || null != f && (-1 != f.indexOf("undefined") ? (clickItemOutliner(f.replace("undefined", "Textarea"), !1), $("#job_field_label").text(f.replace("undefined", "Textarea"))) : (clickItemOutliner(f, !1), $("#field_outliner_dropdown").val(f), $("#job_field_label").text(f))), $("#job_field_type").text("Textarea"), null == f || f.includes("undefined")) $("#jobFields").val("select"); else { $("#jobFields").val(f.split("_")[0] + "_" + f.split("_")[1]); for (i = 0; i < data.length; i++)if (data[i].value == f) { $("#jobFields").val(data[i].label), $("#job_field_label").text(data[i].label); break } } $("#field_maxlength").val(e.find("textarea").attr("maxlength")), $(".line-height-div").show(), $("#line-height").val(e.find("textarea").css("line-height")) } else if (e.find("input[type=checkbox]").length > 0) { $(".image-properties").hide(); f = e.find("input[type=checkbox]").attr("fieldname"); if (selectable || e.hasClass("grouping") || (-1 != f.indexOf("undefined") ? (clickItemOutliner(f.replace("undefined", "Checkbox"), !1), $("#job_field_label").text(f.replace("undefined", "Checkbox"))) : (clickItemOutliner(f), $("#job_field_label").text(f, !1))), $("#job_field_type").text("Checkbox"), null == f || f.includes("undefined")) $("#jobFields").val("select"); else { $("#jobFields").val(f.split("_")[0] + "_" + f.split("_")[1]); for (i = 0; i < data.length; i++)if (data[i].value == f) { $("#jobFields").val(data[i].label), $("#job_field_label").text(data[i].label); break } } $(".line-height-div").hide() } if ("sa" == e.attr("data-type") || "btn" == e.attr("data-type") || "dw" == e.attr("data-type")) { $(".image-properties").hide(); f = e.attr("fieldname"); selectable || e.hasClass("grouping") || (-1 != f.indexOf("undefined") && "dw" == !e.attr("data-type") ? (clickItemOutliner(f.replace("undefined", "Signature"), !1), $("#job_field_label").text(f.replace("undefined", "Signature"))) : -1 != f.indexOf("undefined") && "dw" == e.attr("data-type") ? (clickItemOutliner(f.replace("undefined", "Draw"), !1), $("#job_field_label").text(f.replace("undefined", "Draw"))) : (clickItemOutliner(f, !1), $("#job_field_label").text(f))); var g = e.attr("id"); if ($("#field_lineWidth").val($("#" + g).find("canvas.jSignature").add($("#" + g).filter("canvas.jSignature")).data("jSignature.this").settings.lineWidth), "dw" == e.attr("data-type")) $("#" + g).find("canvas.jSignature").add($("#" + g).filter("canvas.jSignature")).data("jSignature.this").settings.readOnly ? $("#onOffSwitchDrawEnable").prop("checked", !1) : $("#onOffSwitchDrawEnable").prop("checked", !0), $("#job_field_type").text("Draw"); else $("#job_field_type").text("Signature"); if (null == f || f.includes("undefined")) $("#jobFields").val("select"); else { $("#jobFields").val(f.split("_")[0] + "_" + f.split("_")[1]); for (i = 0; i < data.length; i++)if (data[i].value == f) { $("#jobFields").val(data[i].label), $("#job_field_label").text(data[i].label); break } } null != e.attr("lineWidth") ? $("#ddlLineWidth").val(e.attr("lineWidth")) : $("#ddlLineWidth").val(2), "dw" == !e.attr("data-type") && (e.find("canvas.jSignature").add(e.filter("canvas.jSignature")).data("jSignature.this").settings.readOnly = !0, e.find("canvas.jSignature").add(e.filter("canvas.jSignature")).data("jSignature.this").resetCanvas(e.find("canvas.jSignature").add(e.filter("canvas.jSignature")).data("jSignature.this").settings.data)), $('input[type="radio"][name="aspectratio"][value="' + e.attr("aspectratio") + '"]').prop("checked", !0), $(".line-height-div").hide() } if ("im" == e.attr("data-type")) { $(".image-properties").show(); f = e.attr("fieldname"); if ($("#jobFieldValue").val(f), !selectable && !e.hasClass("grouping")) if (-1 != f.indexOf("undefined")) clickItemOutliner(f.replace("undefined", "Image"), !1), $("#job_field_label").text(f.replace("undefined", "Image")), $("#jobFields").val("select"); else { clickItemOutliner(f, !1), $("#job_field_label").text(f); for (i = 0; i < data.length; i++)if (data[i].value == f) { $("#jobFields").val(data[i].label), $("#job_field_label").text(data[i].label); break } } $("#job_field_type").text("Image"), 100 == e.attr("aspectratio") ? $("input:radio[name=aspectratio]").val(["1"]) : $("input:radio[name=aspectratio]").val(["0"]) } if (e.hasClass("grouping")) { for ($("[class^='groupingDiv']").css("border", ""), e.parent().css("border", "2px solid blue"), e.parent().children(".added").addClass("blueBorder"), selectedDiv = [], i = 0; i < e.parent().children(".added").length; i++)selectedDiv.push(e.parent().children(".added")[i]); $(".ungroup").show(), $(".group").hide(), disabledIcon() } else $("[class^='groupingDiv']").css("border", ""), $(".ungroup").hide(), $(".group").show(); selectable || disabledIcon(), $ActiveDiv = e } } function serachOutliner() { "" != $("#searchOutliner").val() ? found_names = found_names.filter(function (e) { return e.toLowerCase().includes($("#searchOutliner").val().toLowerCase()) }) : getOutlinerData(), populateOutlinerDropdown() } function clickItemOutliner(e, t) { $("#field_outliner_dropdown").find(".items").each(function () { if ($(this).attr("id") == e) { $(this).addClass("active"); var i = $("#field_outliner_dropdown").scrollTop(), a = $(this).offset().top; (a = a - $("#header").innerHeight() - $(".doc-editor-header").innerHeight() - $(".upper-toolbar").innerHeight() - $(".custom-tabs").innerHeight() - ($("#outliner-pane .form-section").innerHeight() - 15 - $("#field_outliner_dropdown").innerHeight())) > parseInt($("#field_outliner_dropdown").css("max-height")) && $("#field_outliner_dropdown").animate({ scrollTop: a + i }, 500), a < 0 && $("#field_outliner_dropdown").animate({ scrollTop: Math.abs(a + i) }, 500) } else t || $(this).removeClass("active") }) } function generateFieldName() { for (var e = 1; j = e, contain = !1, $(".added").each(function () { null != $(this).find("input").attr("fieldname") && $(this).find("input").attr("fieldname").split("_")[1] == e ? contain = !0 : null != $(this).attr("fieldname") && $(this).attr("fieldname").split("_")[1] == e ? contain = !0 : null != $(this).find("textarea").attr("fieldname") && $(this).find("textarea").attr("fieldname").split("_")[1] == e ? contain = !0 : contain = !1, 1 == contain && e++ }), j != e;); return e } function queueRenderPage(e, t, i) { pageRendering ? (pageNumPending = e, pageLeftPending = t, pageTopPending = i) : renderPage(e, t, i, !1) } function getInheritableProperty(e, t) { for (var i = e; i && !i.has(t);)i = i.get("Parent"); return i ? i.get(t) : null } String.prototype.replaceAll = function (e, t) { var i = this; do { var a = i.split(e); i = a.join(t) } while (a.length > 1); return i }, $("#holder").keydown(function (e) { if (e.keyCode != ctrlKey && e.keyCode != cmdKey || (ctrlDown = !0), 46 == e.keyCode) { if (selectedDiv) for (r = 0; r < selectedDiv.length; r++)$(selectedDiv[r]).remove(), 5 == trackData.length && trackData.splice(1, 1), trackData.push($(selectedDiv[r])), selectedDiv.slice(r, 1), disabledIcon() } else { if (38 == e.keyCode && 1 == selectedDiv.length) return $("#pos-top-minus").click(), !1; if (40 == e.keyCode && 1 == selectedDiv.length) return $("#pos-top-plus").click(), !1; if (37 == e.keyCode && 1 == selectedDiv.length) return $("#pos-left-minus").click(), !1; if (39 == e.keyCode && 1 == selectedDiv.length) return $("#pos-left-plus").click(), !1 } if (ctrlDown && e.keyCode == cKey) return $CopyDiv = $ActiveDiv, !1; if (ctrlDown && e.keyCode == vKey && null != $CopyDiv) { var t = $CopyDiv.attr("data-type"), i = null; "t" == t ? i = $CopyDiv.find('input[type="text"]').first() : "ta" == t ? i = $CopyDiv.find("textarea").first() : "c" == t ? i = $CopyDiv.find('input[type="checkbox"]').first() : "sa" != t && "btn" != t || (i = $CopyDiv); var a = $("#the-svg"), l = a.offset().top, n = a.offset().left, d = i.val(), s = i.attr("fieldname"); if (s.includes("undefined")) { var r = generateFieldName(); s = "undefined_" + r } return _elementLeft = $CopyDiv.offset().left - n + 10, _elementTop = $CopyDiv.offset().top - l + 10, _elementWidth = $CopyDiv.width() + 2 + "px", _elementHeight = $CopyDiv.height() + 2 + "px", _maxLength = i.prop("maxlength"), _fontSize = i.closest(".added").css("font-size"), _fontName = i.closest(".added").css("font-family"), _horiAlign = i.attr("horialign"), _vertAlign = i.attr("vertalign"), _aspectRatio = i.attr("aspectratio"), _pageNum = i.attr("pagenumber"), _textColor = i.css("color"), _isBold = "bold" == i.css("font-weight"), _isItalic = "italic" == i.css("font-style"), _bgcolor = $CopyDiv.css("background-color"), _bordercolor = $CopyDiv.css("border-left-color"), _align = $CopyDiv.css("text-align"), AddInitialControlOnPageLoad(t, d, s, _elementLeft, _elementTop, _elementWidth, _elementHeight, _maxLength, _fontSize, _fontName, _horiAlign, _vertAlign, _aspectRatio, _pageNum, _textColor, _isBold, _isItalic, "", _bgcolor, _bordercolor, _align), ctrlDown = !1, !1 } }).keyup(function (e) { e.keyCode != ctrlKey && e.keyCode != cmdKey || (ctrlDown = !1) }), $("#btnDownloadFile").click(function () { window.location.href = downloadDocumentUrl + "?docTemplateId=" + $("#DocumentTemplateId").val() + "&isWithoutBg=" + $("#without-bg-color").prop("checked") + "&isWithoutBorder=" + $("#without-border-color").prop("checked") }), $("#btnSaveFile").click(function (e) { var t = []; $(".groupingDiv").each(function () { var e = $(this).position().left - 10, t = $(this).position().top - 10; $(this).children("div").each(function () { var i = $(this).position().left, a = $(this).position().top; $(this).css("position", "absolute"), $(this).css("left", e + i + "px"), $(this).css("top", t + a + "px") }); var i = $(this).contents(); $(this).replaceWith(i) }), e.preventDefault(); var i = []; $(".added").each(function () { var e = $(this), a = 0, l = 0, n = getAngle(e); 90 == n || 270 == n ? (a = e.height(), l = e.width()) : (a = e.width(), l = e.height()); var d = parseInt($(this).attr("pagenumber")), s = $("#the-svg").offset().top, r = $("#the-svg").offset().left, o = e.offset().top - ($($("#the-svg").find(".svg")[d - 1]).offset().top - s), c = e.offset().left; o = (o - s) / scale + s; var f, g = (c = (c - r) / scale + r) - r, p = (s += $($("#the-svg").find(".svg")[d - 1]).height() / scale) - (o += (l + 2) / scale), u = { type: e.data("type"), "font-size": e.css("font-size"), llx: g, lly: p, urx: g + (a + 2) / scale, ury: p + (l + 2) / scale, "font-family": e.css("font-family"), group: e.data("group"), check: e.find("input[type=checkbox]").is(":checked"), radio: "on" == e.find("input[type=radio]:checked").val(), pagenumber: d }; if ("t" == u.type) { if ((f = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").attr("fieldname") : null) && -1 === t.indexOf(f)) u.fieldname = f; else b = "undefined_" + generateFieldName(), e.find("input[type=text]").attr("fieldname", b), u.fieldname = b; u.value = "off" == e.find("input[type=text]").val().toLowerCase() ? "" : e.find("input[type=text]").val(), u.vertalign = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").attr("vertalign") : null, u.horialign = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").attr("horialign") : null, u.aspectratio = $('input[type="radio"][name="aspectratio"]:checked').val(), u.maxlength = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").attr("maxlength") : null, u.textcolor = e.find("input[type=text]").length > 0 ? rgb2hex(e.find("input[type=text]").css("color")) : null, u.bgcolor = e.find("input[type=text]").length > 0 ? rgb2hex(e.css("background-color")) : null, u.bordercolor = e.find("input[type=text]").length > 0 ? rgb2hex(e.css("border-left-color")) : null; var h = "700" == e.find("input[type=text]").css("font-weight") ? "bold" : "normal"; u.fontWeight = e.find("input[type=text]").length > 0 ? h : "normal", u.fontStyle = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").css("font-style") : "normal", u.textDecoration = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").css("text-decoration") : "none", u.textAlign = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").css("text-align") : "left", u["font-size"] = e.find("input[type=text]").length > 0 ? e.find("input[type=text]").css("font-size") : "10" } else if ("ta" == u.type) { if ((f = e.find("textarea").length > 0 ? e.find("textarea").attr("fieldname") : null) && -1 === t.indexOf(f)) u.fieldname = f; else b = "undefined_" + generateFieldName(), e.find("textarea").attr("fieldname", b), u.fieldname = b; u.fieldname = e.find("textarea").length > 0 ? e.find("textarea").attr("fieldname") : null, u.value = e.find("textarea").val(), u.maxlength = e.find("textarea").length > 0 ? e.find("textarea").attr("maxlength") : null, u.textcolor = e.find("textarea").length > 0 ? rgb2hex(e.find("textarea").css("color")) : null, u.bgcolor = e.find("textarea").length > 0 ? rgb2hex(e.css("background-color")) : null, u.bordercolor = e.find("textarea").length > 0 ? rgb2hex(e.css("border-left-color")) : null; h = "700" == e.find("textarea").css("font-weight") ? "bold" : "normal"; u.fontWeight = e.find("textarea").length > 0 ? h : "normal", u.fontStyle = e.find("textarea").length > 0 ? e.find("textarea").css("font-style") : "normal", u.textDecoration = e.find("textarea").length > 0 ? e.find("textarea").css("text-decoration") : "normal", u.textAlign = e.find("textarea").length > 0 ? e.find("textarea").css("text-align") : "left", u["font-size"] = e.find("textarea").length > 0 ? e.find("textarea").css("font-size") : "10"; var v = e.find("textarea").css("line-height").match(/\d/g).join(""); u["line-height"] = e.find("textarea").length > 0 ? v : "18" } else if ("c" == u.type) { if ((f = e.find("input[type=checkbox]").length > 0 ? e.find("input[type=checkbox]").attr("fieldname") : null) && -1 === t.indexOf(f)) u.fieldname = f; else b = "undefined_" + generateFieldName(), e.find("input[type=checkbox]").attr("fieldname", b), u.fieldname = b; u.value = e.find("input[type=checkbox]").val(), u.check = e.find("input[type=checkbox]").prop("checked") } else if ("sa" == u.type || "btn" == u.type || "dw" == u.type) { if (datapair = e.jSignature("getData", "image"), u.sign = datapair.join(","), u.base30string = e.jSignature("getData", "base30").join(","), (f = e.length > 0 ? e.attr("fieldname") : null) && -1 === t.indexOf(f)) u.fieldname = f; else b = "undefined_" + generateFieldName(), e.attr("fieldname", b), u.fieldname = b; u.vertalign = e.length > 0 ? e.attr("vertalign") : null, u.horialign = e.length > 0 ? e.attr("horialign") : null, u.aspectratio = e.length > 0 ? e.attr("aspectratio") : null; var m = e.attr("id"); u.lineWidth = $("#" + m).find("canvas.jSignature").add($("#" + m).filter("canvas.jSignature")).data("jSignature.this").settings.lineWidth, u.bgcolor = "" != e.css("background-color") ? rgb2hex(e.css("background-color")) : null, u.bordercolor = "" != e.css("border-left-color") ? rgb2hex(e.css("border-left-color")) : null } else if ("im" == u.type) { var b; if (datapair = "#" != e.find(".image").attr("src") ? e.find(".image").attr("src") : "", u.sign = datapair, (f = e.find(".image").length > 0 ? e.attr("fieldname") : null) && -1 === t.indexOf(f)) u.fieldname = f; else b = "undefined_" + generateFieldName(), e.attr("fieldname", b), u.fieldname = b; u["aspect-ratio"] = e.find(".image").length > 0 ? e.find(".image").attr("width") / e.find(".image").attr("height") : 1, 1 == e.attr("fill-width") && (u["fill-option"] = 1), 1 == e.attr("fill-height") && (u["fill-option"] = 2), 1 == e.attr("fill-content") && (u["fill-option"] = 3), u.width = e.find(".image").length > 0 ? e.find(".image").width() : 0, u.height = e.find(".image").length > 0 ? e.find(".image").height() : 0, u.align = "" != e.attr("align") ? e.attr("align") : "1" } i.push(u), t.push(f) }), $.ajax({ url: saveOpenDocumentTemplateUrl + "?docTemplateId=" + $("#DocumentTemplateId").val(), type: "POST", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(i), success: function (e) { e.status ? (showSuccessMessage("Document Template has been updated successfully."), $(".caustam-editor-outer").getNiceScroll().resize()) : showErrorMessage(e.error) }, error: function () { showErrorMessage("Document Template has not been updated.") } }) }); var validation = { isGlyphsNumber: function (e) { return /^`+\d+$/.test(e) } }, setInputValuesAtInit = function () { $.each(pdfItems, function (e, t) { try { var i = t.FieldName.substring(0, t.FieldName.lastIndexOf("_")); if (!i.includes("undefined") && /_\d/.test(i) && (t.FieldName = t.FieldName.substring(0, t.FieldName.lastIndexOf("_"))), t.Type.toString() == textHashCode || t.Type.toString() == buttonHashCode) { if (t.Value.includes("jsignature")) $('div[fieldname="' + t.FieldName + '"]').jSignature("setData", "data:" + t.Value), $('div[fieldname="' + t.FieldName + '"]').find("canvas.jSignature").add($('div[fieldname="' + t.FieldName + '"]').filter("canvas.jSignature")).data("jSignature.this").settings.lineWidth = t.lineWidth, $('div[fieldname="' + t.FieldName + '"]').find("canvas.jSignature").add($('div[fieldname="' + t.FieldName + '"]').filter("canvas.jSignature")).data("jSignature.this").resetCanvas($('div[fieldname="' + t.FieldName + '"]').find("canvas.jSignature").add($('div[fieldname="' + t.FieldName + '"]').filter("canvas.jSignature")).data("jSignature.this").settings.data), $('div[fieldname="' + t.FieldName + '"]').attr("lineWidth", t.lineWidth), "" != !t.Value.split(",")[1] || t.IsDraw || ($('div[fieldname="' + t.FieldName + '"]').append('<input type="button" onclick=undoClick(this) class="undo" id="undoSignBtn" value="undo last stroke" style="position: absolute; top: auto; margin: 0px !important; left: 0px;">'), $('div[fieldname="' + t.FieldName + '"]').append('<input type="button" class="redo" onclick=redoClick(this) id="redoSignBtn" value="redo last stroke" style="position: absolute; top: auto; margin: 0px !important; left: 136px;">')); else if ($('input[fieldname="' + t.FieldName + '"]').length > 0) $('input[fieldname="' + t.FieldName + '"]').val(t.Value), t.PdfItemProperties && t.PdfItemProperties.MaxLength && $('input[fieldname="' + t.FieldName + '"]').attr("maxLength", t.PdfItemProperties.MaxLength); else if ($('div[fieldname="' + t.FieldName + '"]').find("img").length > 0) { var a = $('div[fieldname="' + t.FieldName + '"]'); 1 == t.PdfItemProperties.FillOption ? (a.find(".image").attr("width", $(a).width()), a.find(".image").attr("height", $(a).width() / t.PdfItemProperties.AspectRatio), $(a).attr("fill-width", "1")) : 2 == t.PdfItemProperties.FillOption ? (a.find(".image").attr("width", ($(a).height() - 30) * t.PdfItemProperties.AspectRatio), a.find(".image").attr("height", $(a).height() - 30), $(a).attr("fill-height", "1")) : 3 == t.PdfItemProperties.FillOption && (a.find(".image").attr("width", $(a).width()), a.find(".image").attr("height", $(a).height()), $(a).attr("fill-content", "1")), 2 == t.PdfItemProperties.ImageAlign ? $(a).find(".image").css("right", "0") : 3 == t.PdfItemProperties.ImageAlign ? $(a).find(".image").addClass("img-center") : 4 == t.PdfItemProperties.ImageAlign ? $(a).find(".image").css("top", "0") : 5 == t.PdfItemProperties.ImageAlign ? $(a).find(".image").css("bottom", "30px") : 6 == t.PdfItemProperties.ImageAlign && $(a).find(".image").addClass("img-middle") } t.PdfItemProperties.LineHeight && ($('textarea[fieldname="' + t.FieldName + '"]').attr("lineHeight", t.PdfItemProperties.LineHeight), $('textarea[fieldname="' + t.FieldName + '"]').css("line-height", t.PdfItemProperties.LineHeight)) } else if (t.Type.toString() == radioButtonHashCode) { var l = t.AvailableValues; l = $.grep(l, function (e, t) { return null != e ? "off" != e.toLowerCase() : "" }), $.each($('input[fieldname="' + t.FieldName + '"]'), function (e) { this.value = l.length - (e + 1) > -1 && l.length - (e + 1) < l.length ? l[l.length - (e + 1)] : "" }), $('input[fieldname="' + t.FieldName + '"][value="' + t.Value + '"]').prop("checked", !0) } else if (t.Type.toString() == checkBoxHashCode) { l = t.AvailableValues; 1 == $('input[fieldname="' + t.FieldName + '"]').length && $.each($('input[fieldname="' + t.FieldName + '"]'), function (e) { this.value = l[0], t.Value == this.value && $(this).prop("checked", !0) }) } } catch (e) { } }), $('input[type="checkbox"]').click(function () { $(this).prop("checked") && $('input[fieldname="' + $(this).attr("fieldname") + '"]').not($(this)).prop("checked", !1) }), getOutlinerData(), populateOutlinerDropdown(), setSelectable() }; function setAspectRatio(e, t) { if (1 == e) t.attr("aspectratio", 100), t.find("img").css("object-fit", "fill"), t.find("img").width("100%"), t.find("img").height("100%"); else if (0 == e) { var i = t.find("img").attr("width"), a = t.find("img").attr("height"), l = t.width(), n = t.height(), d = l * (a / i); if (d > n) { var s = 100 * (n * (i / a)) / l; t.find("img").width(s + "%"), t.attr("aspectratio", s), t.attr("fittosize", 0) } else { var r = 100 * d / n; t.find("img").height(r + "%"), t.attr("aspectratio", r), t.attr("fittosize", 1) } } } function getOutlinerData() { found_names = [], $.each(pdfItems, function (e, t) { if (-1 != t.FieldName.indexOf("undefined")) { if (t.Type.toString() == textHashCode) if (t.IsTextArea) { var i = t.FieldName.replace("undefined", "Textarea"); found_names.push(i) } else { i = t.FieldName.replace("undefined", "Textbox"); found_names.push(i) } else if (t.Type.toString() == buttonHashCode) if ("im" == $("[fieldname='" + t.FieldName + "']").data("type")) { i = t.FieldName.replace("undefined", "Image"); found_names.push(i) } else if ("dw" == $("[fieldname='" + t.FieldName + "']").data("type")) { i = t.FieldName.replace("undefined", "Draw"); found_names.push(i) } else { i = t.FieldName.replace("undefined", "Signature"); found_names.push(i) } else if (t.Type.toString() == checkBoxHashCode) { i = t.FieldName.replace("undefined", "Checkbox"); found_names.push(i) } } else found_names.push(t.FieldName) }) } function generateSignatureId() { var e = 1; return $(".jSignature").each(function () { $(this).parent().attr("id").includes(e) && e++ }), e } function applyDrop(e) { $(e).droppable({ over: function (e, t) { $(this).addClass("droppable-above").removeClass("droppable-below") }, classes: { "ui-droppable-active": "", "ui-droppable-hover": "" }, drop: function (e, t) { if ("draggable" != $(t.helper).attr("id")) { var i = $(t.helper).data("type"); if ($(t.helper).hasClass("added")) { var a = $(t.helper).offset().left, l = $(t.helper).offset().top, n = !1; return $("#the-svg").find(".svg").each(function (e) { if (n) return l = $(this).offset().top, $(t.helper).attr("pagenumber", ++e), !1; var i = $(this).height() + $(this).offset().top; if (i >= l) { if (!(i < l + $(t.helper).height())) return $(t.helper).attr("pagenumber", ++e), !1; if (i >= l + $(t.helper).height() / 2) return l = parseInt(i - $(t.helper).height()), $(t.helper).attr("pagenumber", ++e), !1; n = !0 } }), void $(t.helper).offset({ left: a, top: l }) } foo.disable(); var d = generateFieldName(); if ("t" == i) { var s = $("<div data-type=" + i + ' class="added" style="border: 1px dotted rgb(0, 0, 0);opacity:0.8;width:' + eleType[i].width + ";height:" + eleType[i].height + ";position:absolute;background:" + eleType[i].color + ';font-family:arialmt"><input fieldname="undefined_' + d + '" class="control" type="text" style="width:100%;height:100%;background:transparent;border:0px" maxlength="50"></input></div>'); found_names.push("Textbox_" + d) } else if ("ta" == i) { s = $("<div data-type=" + i + ' class="added" style="border: 1px dotted rgb(0, 0, 0);opacity:0.8;width:' + eleType[i].width + ";height:" + eleType[i].height + ";position:absolute;background:" + eleType[i].color + ';font-family:arialmt"><textarea  fieldname="undefined_' + d + '" class="control" style="width:100%;height:100%;background:transparent;border:0px" maxlength="50"></textarea></div>'); found_names.push("Textarea_" + d) } else if ("r" == i) { s = $("<div data-type=" + i + ' class="added" style="border: 1px dotted rgb(0, 0, 0);width:' + eleType[i].width + ";height:" + eleType[i].height + ';position:absolute;"><input id="radbtn"  fieldname="undefined_' + d + '" class="control" type="radio" style="width:100%;height:100%;background:transparent"></input></div>'); found_names.push("Radio_" + d) } else if ("c" == i) { s = $("<div data-type=" + i + ' class="added" style="border: 1px dotted rgb(0, 0, 0);width:' + eleType[i].width + ";height:" + eleType[i].height + ';position:absolute;"><label class="checkbox"><input type = "checkbox"  fieldname="undefined_' + d + '" class="icheck" " onchange="OnCheckboxChange(this)"><span></span></label ></div>'); found_names.push("Checkbox_" + d) } else if ("sa" == i) { var r = generateSignatureId(); s = $('<div tabindex=1 id="jSignature' + r + '" fieldname="undefined_' + d + '" data-type=' + i + ' class="added signature" onclick=signatureChange(this) style="border: 1px dotted rgb(0, 0, 0);opacity:0.8;width:' + eleType[i].width + ";height:" + eleType[i].height + ";position:absolute;background:" + eleType[i].color + ';"></div>'); found_names.push("Signature_" + d) } else if ("im" == i) { s = $("<div data-type=" + i + ' fieldname= "undefined_' + d + '" class="added"  style="border: 1px dotted rgb(0, 0, 0);overflow:hidden;opacity:1;width:' + eleType[i].width + ";height:" + eleType[i].height + ";position:absolute;background:" + eleType[i].color + ';"><img src="#" class="image" style="display:none;"/><div class="fileUpload primary document_imageUpload"><span>Upload</span><input type="file" class="upload" value="Upload" accept="image/x-png,image/gif,image/jpeg" onchange="readURL(this);"/></div></div>'); found_names.push("Image_" + d) } else if ("dw" == i) { r = generateSignatureId(), s = $('<div tabindex=1 id="jSignature' + r + '" fieldname="undefined_' + d + '" enable=false  data-type=' + i + ' class="added drawing" onclick=signatureChange(this) style="border: 1px dotted rgb(0, 0, 0);opacity:0.8;width:' + eleType[i].width + ";height:" + eleType[i].height + ";position:absolute;background:" + eleType[i].color + ';"></div>'); found_names.push("Draw_" + d) } if (populateOutlinerDropdown(), null != s) { $("#holder").append(s), 5 == trackData.length && trackData.splice(1, 1), trackData.push(s), disabledIcon(); a = $(t.helper).offset().left, l = $(t.helper).offset().top, n = !1; if (a + s.width() > $("#the-svg").width() + $(".custom-list").width() && (a = $("#the-svg").width() + $(".custom-list").width() - s.width()), $("#the-svg").find(".svg").each(function (e) { if (n) return l = $(this).offset().top, s.attr("pagenumber", ++e), !1; var t = $(this).height() + $(this).offset().top; if (t >= l) { if (!(t < l + s.height())) return s.attr("pagenumber", ++e), !1; if (t >= l + s.height() / 2) return l = parseInt(t - s.height()), s.attr("pagenumber", ++e), !1; n = !0 } }), s.offset({ left: a, top: l }), s.click(function (e) { InputControlClick($(this), e) }), "sa" == s.data("type")) { $("#jSignature" + r).jSignature({ lineWidth: 2 }); var o = 15 * s.height() / 100; s.find("canvas").css("margin-top", o), s.find("canvas").css("margin-bottom", o), s.find("canvas.jSignature").add(s.filter("canvas.jSignature")).data("jSignature.this").settings.readOnly = !0, s.find("canvas.jSignature").add(s.filter("canvas.jSignature")).data("jSignature.this").resetCanvas(s.find("canvas.jSignature").add(s.filter("canvas.jSignature")).data("jSignature.this").settings.data) } "dw" == s.data("type") && ($("#jSignature" + r).jSignature({ lineWidth: 2 }), $("#jSignature" + r).find("canvas.jSignature").width(0), $("#jSignature" + r).find("canvas.jSignature").height(0), s.find("canvas.jSignature").add(s.filter("canvas.jSignature")).data("jSignature.this").settings.readOnly = !0, s.find("canvas.jSignature").add(s.filter("canvas.jSignature")).data("jSignature.this").resetCanvas(s.find("canvas.jSignature").add(s.filter("canvas.jSignature")).data("jSignature.this").settings.data)), $(".added .control").click(function () { $(this).focus() }); var c = { x: 0, y: 0 }; s.draggable({ start: function (e) { c.x = e.clientX, c.y = e.clientY }, drag: function (e, t) { var i = parseFloat($("#zoom-dropdown").val() / 100), a = t.originalPosition; t.position = { left: (e.clientX - c.x + a.left) / i, top: (e.clientY - c.y + a.top) / i } }, cancel: "canvas", containment: ".ui-droppable", scroll: !0 }).resizable({ containment: ".ui-droppable", handles: "nw,ne,sw,se", stop: function (e, t) { setTimeout(function () { setAspectRatioResize(), "im" == $(t.element).data("type") && (1 == $(t.element).attr("fill-height") ? $("#fill-height").click() : 1 == $(t.element).attr("fill-width") ? $("#fill-width").click() : 1 == $(t.element).attr("fill-content") && $("#fill-content").click()) }, 500) }, resize: function (e, t) { var i = t.size.width - t.originalSize.width, a = t.originalSize.width + i / parseFloat($("#zoom-dropdown").val() / 100), l = t.size.height - t.originalSize.height, n = t.originalSize.height + l / parseFloat($("#zoom-dropdown").val() / 100); t.size.width = a, t.size.height = n, "dw" == $(t.element).data("type") && ($(t.element).find(".jSignature").attr("width", a + "px"), $(t.element).find(".jSignature").attr("height", n + "px"), $("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").resetCanvas($("#" + $(t.element).attr("id")).find("canvas.jSignature").add($("#" + $(t.element).attr("id")).filter("canvas.jSignature")).data("jSignature.this").settings.data)) } }) } foo.enable() } } }) } $("#selectable li").draggable({ helper: "clone", start: function (e, t) { $(t.helper).css("z-index", 9) }, scroll: !0 }); var color = "#EDC201", eleType = { t: { ele: "Textbox", height: "30px", width: "200px", color: "#cbf7cb", font: "Arial", prop: ["height", "width", "maxlength", "font-size", "font-family", "job-field", "colorpicker", "bold", "italic", "jobFieldName"] }, ta: { ele: "Textarea", height: "100px", width: "300px", color: "#cbf7cb", font: "Arial", prop: ["height", "width", "maxlength", "font-size", "font-family", "job-field", "colorpicker", "bold", "italic", "jobFieldName"] }, c: { ele: "Checkbox", height: "30px", width: "30px", prop: ["height", "width", "job-field", "export-value", "jobFieldName"] }, r: { ele: "Radio", height: "30px", width: "30px", prop: ["height", "width", "group", "jobFieldName"] }, sa: { ele: "Signature", height: "100px", width: "260px", color: "#cbf7cb", prop: ["height", "width", "job-field", "aspectratio", "signlineWidth"] }, im: { ele: "Images", height: "130px", width: "260px", color: "#cbf7cb", prop: ["height", "width", "job-field", "aspectratio", "signlineWidth"] }, btn: { ele: "Signature", height: "100px", width: "260px", color: "#cbf7cb", prop: ["height", "width", "job-field", "aspectratio", "signlineWidth"] }, dw: { ele: "Draw", height: "100px", width: "260px", color: "#cbf7cb", prop: ["height", "width", "job-field", "aspectratio", "signlineWidth"] } }, jobFields = $("#jobFields")[0].outerHTML.replace(/\n/g, "<br />"); function CheckProperty(e) { $(e).hasClass("active") ? $(e).removeClass("active") : $(e).addClass("active") } var mousePos = { x: 0, y: 0 }; function showErrorMessage(e) { $(".alert").hide(), $("#successMsgRegion").hide(), $("#errorMsgRegion").html(closeButton + e), $("#errorMsgRegion").show() } function showSuccessMessage(e) { $(".alert").hide(), $("#errorMsgRegion").hide(), $("#successMsgRegion").html(closeButton + e), $("#successMsgRegion").show() } $("body").mousemove(function (e) { mousePos.x = e.pageX, mousePos.y = e.pageY }); var hexDigits = new Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"); function rgb2hex(e) { return "#" + hex((e = e.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/))[1]) + hex(e[2]) + hex(e[3]) } function hex(e) { return isNaN(e) ? "00" : hexDigits[(e - e % 16) / 16] + hexDigits[e % 16] } function setOutlinerValue(e, t) { if (e.find("input[type=text]").length > 0) if ("select" == $("#jobFieldValue").val() || "" == $("#jobFieldValue").val() || "select" == $("#jobFields").val()) { var i = t.split("_")[1]; e.find("input").attr("fieldname", "undefined_" + i), found_names.push("Textbox_" + i), newFieldName = "Textbox_" + i } else e.find("input").attr("fieldname", $("#jobFieldValue").val()), e.find("input").val($("#ddlExportValue option:selected").val()), found_names.push(t), newFieldName = t; else if (e.find("textarea").length > 0) if ("select" == $("#jobFieldsValue").val() || "" == $("#jobFieldValue").val() || "select" == $("#jobFields").val()) { i = t.split("_")[1]; e.find("textarea").attr("fieldname", "undefined_" + i), found_names.push("Textarea_" + i), newFieldName = "Textarea_" + i } else e.find("textarea").attr("fieldname", $("#jobFieldValue").val()), found_names.push(t), newFieldName = t; else if ("sa" == e.attr("data-type") || "btn" == e.attr("data-type")) if ("select" == $("#jobFieldValue").val() || "" == $("#jobFieldValue").val() || "select" == $("#jobFields").val()) { i = t.split("_")[1]; e.attr("fieldname", "undefined_" + i), found_names.push("Signature_" + i), newFieldName = "Signature_" + i } else e.attr("fieldname", $("#jobFieldValue").val()), found_names.push(t), newFieldName = t; else if ("im" == e.attr("data-type")) if ("select" == $("#jobFieldValue").val() || "" == $("#jobFieldValue").val() || "select" == $("#jobFields").val()) { i = t.split("_")[1]; e.attr("fieldname", "undefined_" + i), found_names.push("Image_" + i), newFieldName = "Image_" + i } else e.attr("fieldname", $("#jobFieldValue").val()), found_names.push(t), newFieldName = t; else if ("dw" == e.attr("data-type")) if ("select" == $("#jobFieldValue").val() || "" == $("#jobFieldValue").val() || "select" == $("#jobFields").val()) { i = t.split("_")[1]; e.attr("fieldname", "undefined_" + i), found_names.push("Draw_" + i), newFieldName = "Draw_" + i } else e.attr("fieldname", $("#jobFieldValue").val()), found_names.push(t), newFieldName = t; else if ("c" == e.attr("data-type")) if ("select" == $("#jobFieldValue").val() || "" == $("#jobFieldValue").val() || "select" == $("#jobFields").val()) { i = t.split("_")[1]; e.attr("fieldname", "undefined_" + i), $(e).find('[type="checkbox"]').attr("fieldname", "undefined_" + i), found_names.push("Checkbox_" + i), newFieldName = "Checkbox_" + i } else e.attr("fieldname", $("#jobFieldValue").val()), found_names.push(t), newFieldName = t; return newFieldName } function setAspectRatioResize() { $("input[type=radio][name=aspectratio]").change() } function removeOutlinerValue(e) { var t = -1; "t" == e.data("type") ? $("[fieldname='" + e.find("input").attr("fieldname") + "']").length <= 0 && (t = -1 != e.find("input").attr("fieldname").indexOf("undefined") ? $.inArray(e.find("input").attr("fieldname").replace("undefined", "Textbox"), found_names) : $.inArray(e.find("input").attr("fieldname"), found_names)) : "ta" == e.data("type") ? $("[fieldname='" + e.find("textarea").attr("fieldname") + "']").length <= 0 && (t = -1 != e.find("textarea").attr("fieldname").indexOf("undefined") ? $.inArray(e.find("textarea").attr("fieldname").replace("undefined", "Textarea"), found_names) : $.inArray(e.find("textarea").attr("fieldname"), found_names)) : "sa" == e.data("type") || "btn" == e.data("type") ? $("[fieldname='" + e.attr("fieldname") + "']").length <= 0 && (t = -1 != e.attr("fieldname").indexOf("undefined") ? $.inArray(e.attr("fieldname").replace("undefined", "Signature"), found_names) : $.inArray(e.attr("fieldname"), found_names)) : "c" == e.data("type") ? $("[fieldname='" + e.find("input").attr("fieldname") + "']").length <= 0 && (t = -1 != e.find("input").attr("fieldname").indexOf("undefined") ? $.inArray(e.find("input").attr("fieldname").replace("undefined", "Checkbox"), found_names) : $.inArray(e.find("input").attr("fieldname"), found_names)) : "im" == e.data("type") ? $("[fieldname='" + e.attr("fieldname") + "']").length <= 0 && (t = -1 != e.attr("fieldname").indexOf("undefined") ? $.inArray(e.attr("fieldname").replace("undefined", "Image"), found_names) : $.inArray(e.attr("fieldname"), found_names)) : "dw" == e.data("type") && $("[fieldname='" + e.attr("fieldname") + "']").length <= 0 && (t = -1 != e.attr("fieldname").indexOf("undefined") ? $.inArray(e.attr("fieldname").replace("undefined", "Draw"), found_names) : $.inArray(e.attr("fieldname"), found_names)), -1 != t && found_names.splice(t, 1) } function setHeightWidthGroupingDiv() { var e = $("#holderParentDiv").width(), t = 0, i = $("#the-svg").height(), a = 0; if ($(selectedDiv[0]).hasClass("grouping")) for (var l = 0; l < selectedDiv.length; l++) { var n = parseFloat($(selectedDiv[l]).css("left")); n < e && (e = n); var d = n + $(selectedDiv[l]).outerWidth(); d > t && (t = d); var s = parseFloat($(selectedDiv[l]).css("top")); s < i && (i = s); var r = s + $(selectedDiv[l]).outerHeight(); r > a && (a = r) } $(selectedDiv[0]).parent().width(t - e), $(selectedDiv[0]).parent().height(a - i) } function controlClick() { $(document).on("click", ".added", function (e) { if (e.shiftKey) { for (var t = 1; t < selectedDiv.length; t++)selectedDiv[t][0] == selectedDiv[t - 1][0] && (selectedDiv.splice(t, 1), t--); $("#groupElement").click() } heightlightSelectionOutliner() }) } function PreviewDocument(e) { $("#divViewer").load(previewDocumentUrl + "?docTemplateId=" + $("#DocumentTemplateId").val() + "&isWithoutBg=" + e), $("#popupSelectOptionForDocumentPreviewDownload").modal("toggle"), $("#popupDocPreview").modal({ backdrop: "static", keyboard: !1 }), withoutBg = e }