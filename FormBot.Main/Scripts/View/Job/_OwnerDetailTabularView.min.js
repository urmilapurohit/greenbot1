function OwnerSignatureView() { $("#imgOwnerSign").attr("src", signatureURL + modelOwnerSignURL), $("#imgOwnerSign").show(), $("#loading-image").css("display", ""), $("#imgOwnerSign").attr("src", SRCOwnerSign).load(function () { logoWidth1 = this.width, logoHeight1 = this.height, $(window).height() <= logoHeight1 ? ($("#imgOwnerSign").closest("div").height($(window).height() - 150), $("#imgOwnerSign").closest("div").css("overflow-y", "scroll"), $("#imgOwnerSign").height(logoHeight1)) : ($("#imgOwnerSign").height(logoHeight1), $("#imgOwnerSign").closest("div").removeAttr("style")), screen.width <= logoWidth1 || (logoWidth1, screen.width), $("#imgOwnerSign").width(logoWidth1), $("#loading-image").css("display", "none") }), $("#imgOwnerSign").unbind("error"), $("#imgOwnerSign").attr("src", SRCOwnerSign).error(function () { alert("Image does not exist."), $("#loading-image").css("display", "none") }) } function UploadAllSignatureOfJob(e) { var a = e.attr("typeOfSignature"); e.fileupload({ url: urlUploadJobSignature, dataType: "json", done: function (e, t) { var i = []; i.length = 0; for (var r = 0; r < t.result.length; r++)if (1 == t.result[r].Status) { var n = signatureURL + "JobDocuments/" + Model_JobID + "/" + t.result[r].FileName; 1 == a ? (isOwnerSignUpload = !0, SRCOwnerSign = n, $("#imgOwnerSignatureView").hide(), OwnerSignatureView()) : $("#imgOwnerSignatureView").show() } else i.push(t.result[r].FileName.replace("%", "$")); i.length > 0 ? showErrorMessage("File has not been uploaded.") : showSuccessMessage("File has been uploaded successfully.") }, progressall: function (e, a) { }, singleFileUploads: !1, send: function (e, a) { var t = a.files[0].type.split("/"), i = t[0]; if (a.files.length > 1) for (var r = 0; r < a.files.length; r++) { if (a.files[r].size / 1048576 > parseInt(documentSizeLimit)) return showErrorMessage(" " + a.files[r].name + " Maximum file size limit exceeded. Please upload a file smaller  than " + maxsize + "MB"), !1; if (CheckSpecialCharInFileName(a.files[r].name)) return showErrorMessage("Please upload file that not conatain <> ^ [] ."), !1 } else { if (a.files[0].size / 1048576 > parseInt(documentSizeLimit)) return showErrorMessage("Maximum file size limit exceeded.Please upload a file smaller than " + maxsize + "MB"), !1; if (CheckSpecialCharInFileName(a.files[0].name)) return showErrorMessage("Please upload file that not conatain <> ^ [] ."), !1 } return "image" != i ? (showErrorMessage("Please upload a file with .jpg , .jpeg or .png extension."), $("html").animate({ scrollTop: 0 }, "slow"), $("body").animate({ scrollTop: 0 }, "slow"), !1) : ($(".alert").hide(), $("#errorMsgRegion").html(""), $("#errorMsgRegion").hide(), !0) }, formData: { jobId: BasicDetails_JobID, typeOfSignature: a } }) } function validateOrganisation() { "Government body" == $("#JobOwnerDetails_OwnerType").val() || "Corporate body" == $("#JobOwnerDetails_OwnerType").val() || "Trustee" == $("#JobOwnerDetails_OwnerType").val() ? ($("#JobOwnerDetails_CompanyABN").removeAttr("disabled"), $("#JobOwnerDetails_CompanyName").removeAttr("disabled"), $("#OwnerCompanyABN").addClass("required"), $("#OwnerCompanyName").addClass("required"), $("#OwnerEmail").addClass("required"), $("#OwnerCompanyABNValidate").show(), $("#OwnerCompanyNameValidate").show(), $("#OwnerEmailValidate").show(), $("#JobOwnerDetails_CompanyName").rules("add", { required: !0, messages: { required: "Company Name is required." } }), $("#JobOwnerDetails_CompanyABN").rules("add", { required: !0, messages: { required: "Company ABN is required." } }), $("#JobOwnerDetails_Email").rules("add", { required: !0, messages: { required: "Email address is required." } })) : ($("#JobOwnerDetails_CompanyABN").val(""), $("#JobOwnerDetails_CompanyABN").prop("disabled", !0), $("#JobOwnerDetails_CompanyABN").rules("remove"), $("#JobOwnerDetails_CompanyABN").removeClass("input-validation-error"), $("#OwnerCompanyABN").removeClass("required"), $("#OwnerCompanyABNValidate").hide(), $("#JobOwnerDetails_CompanyName").prop("selectedIndex", 0), $("#JobOwnerDetails_CompanyName").prop("disabled", !0), $("#JobOwnerDetails_CompanyName").rules("remove"), $("#JobOwnerDetails_CompanyName").removeClass("input-validation-error"), $("#OwnerCompanyName").removeClass("required"), $("#OwnerCompanyNameValidate").hide(), $("#JobOwnerDetails_Email").rules("remove"), $("#JobOwnerDetails_Email").removeClass("input-validation-error"), $("#OwnerEmail").removeClass("required"), $("#OwnerEmailValidate").hide()) } function fillOwnerAddressDetail() { showHideOwnerAddress(modelOwnerAddressID), $("#JobOwnerDetails_AddressID").change(function () { showHideOwnerAddress($("#JobOwnerDetails_AddressID").val()) }), fillOwnerAddress = function () { "0" != $("#BasicDetails_JobID").val() && $("#JobOwnerDetails_UnitTypeID").find("option").length > 0 && $("#JobOwnerDetails_PostalAddressID").find("option").length > 0 && $("#JobOwnerDetails_StreetTypeID").find("option").length > 0 && (1 == $("#JobOwnerDetails_AddressID").val() ? OwnerAddressJson.push({ CompanyABN: $("#JobOwnerDetails_CompanyABN").val(), OwnerType: $("#JobOwnerDetails_OwnerType").val(), CompanyName: $("#JobOwnerDetails_CompanyName").val(), Phone: $("#JobOwnerDetails_Phone").val(), Mobile: $("#JobOwnerDetails_Mobile").val(), FirstName: $("#JobOwnerDetails_FirstName").val(), LastName: $("#JobOwnerDetails_LastName").val(), Email: $("#JobOwnerDetails_Email").val(), PostalAddressType: $("#JobOwnerDetails_AddressID").val(), UnitType: $("#JobOwnerDetails_UnitTypeID").val(), UnitNumber: $("#JobOwnerDetails_UnitNumber").val(), StreetNumber: $("#JobOwnerDetails_StreetNumber").val(), StreetName: $("#JobOwnerDetails_StreetName").val(), StreetType: $("#JobOwnerDetails_StreetTypeID").val(), Town: $("#JobOwnerDetails_Town").val(), State: $("#JobOwnerDetails_State").val(), PostCode: $("#JobOwnerDetails_PostCode").val() }) : OwnerAddressJson.push({ CompanyABN: $("#JobOwnerDetails_CompanyABN").val(), OwnerType: $("#JobOwnerDetails_OwnerType").val(), CompanyName: $("#JobOwnerDetails_CompanyName").val(), Phone: $("#JobOwnerDetails_Phone").val(), Mobile: $("#JobOwnerDetails_Mobile").val(), FirstName: $("#JobOwnerDetails_FirstName").val(), LastName: $("#JobOwnerDetails_LastName").val(), Email: $("#JobOwnerDetails_Email").val(), PostalAddressType: $("#JobOwnerDetails_AddressID").val(), PostalAddressID: $("#JobOwnerDetails_PostalAddressID").val(), PostalDeliveryNumber: $("#JobOwnerDetails_PostalDeliveryNumber").val(), Town: $("#JobOwnerDetails_Town").val(), State: $("#JobOwnerDetails_State").val(), PostCode: $("#JobOwnerDetails_PostCode").val() }), OwnerPostcodeFromjson = $("#JobOwnerDetails_PostCode").val(), OwnerEmailFromJson = $("#JobOwnerDetails_Email").val(), OwnerFirstNameFromJson = $("#JobOwnerDetails_FirstName").val(), OwnerLastNameFromJson = $("#JobOwnerDetails_LastName").val()), DisplayOwnerAdd() } } function buttonOwnerDetailClick() { $("#btnOwnerDetails").click(function () { $("#errorMsgRegionOwnerPopup").hide(), $("#successMsgRegionInstallerPopup").hide(), $("#popupOwner").modal({ backdrop: "static", keyboard: !1 }), setTimeout(function () { $("#JobOwnerDetails_OwnerType").focus(), $("#JobOwnerDetails_OwnerType").change() }, 1e3), $(".popupOwner").find("input[type=text]").each(function () { $(this).attr("class", "form-control valid") }), $(".popupOwner").find(".field-validation-error").attr("class", "field-validation-valid"), RebindOwnerDetailsPopup(), "" == $("#JobOwnerDetails_UnitTypeID option:selected").val() ? ($("#lblOwnerUnitNumber").removeClass("required"), $("#lblOwnerUnitTypeID").removeClass("required"), $("#lblOwnerStreetNumber").addClass("required")) : ($("#lblOwnerUnitNumber").addClass("required"), $("#lblOwnerUnitTypeID").addClass("required"), $("#lblOwnerStreetNumber").removeClass("required")), 1 == $("#JobOwnerDetails_AddressID").val() ? ($(".OwnerDPA").show(), $(".OwnerPDA").hide()) : ($(".OwnerPDA").show(), $(".OwnerDPA").hide()), $("#JobOwnerDetails_LocationValidation").hide() }) } function OwnerAutoComplete() { $("#JobOwnerDetails_Town").autocomplete({ minLength: 3, source: function (e, a) { $.ajax({ type: "GET", url: actionProcessRequest, dataType: "json", data: { excludePostBoxFlag: !0, q: e.term }, success: function (e) { var t = JSON.parse(e); t.localities.locality instanceof Array ? a($.map(t.localities.locality, function (e) { return { label: e.location + ", " + e.state + ", " + e.postcode, value: e.location, state: e.state, postcode: e.postcode } })) : a($.map(t.localities, function (e) { return { label: e.location + ", " + e.state + ", " + e.postcode, value: e.location, state: e.state, postcode: e.postcode } })) } }) }, select: function (e, a) { $("#JobOwnerDetails_State").val(a.item.state), $("#JobOwnerDetails_PostCode").val(a.item.postcode), $("#JobOwnerDetails_State").valid(), $("#JobOwnerDetails_PostCode").valid() } }), $("#JobOwnerDetails_PostCode").autocomplete({ minLength: 3, source: function (e, a) { $.ajax({ type: "GET", url: actionProcessRequest, dataType: "json", data: { excludePostBoxFlag: !0, q: e.term }, success: function (e) { var t = JSON.parse(e); t.localities.locality instanceof Array ? a($.map(t.localities.locality, function (e) { return { label: e.location + ", " + e.state + ", " + e.postcode, value: e.postcode, state: e.state, location: e.location } })) : a($.map(t.localities, function (e) { return { label: e.location + ", " + e.state + ", " + e.postcode, value: e.postcode, state: e.state, location: e.location } })) } }) }, select: function (e, a) { $("#JobOwnerDetails_State").val(a.item.state), $("#JobOwnerDetails_Town").val(a.item.location), $("#JobOwnerDetails_State").valid(), $("#JobOwnerDetails_Town").valid() } }) } function CheckOwnerAddressIsValidOrNot() { if ("" == jobOwd_IsOwnerAddressValid) { var e, a = $("#JobOwnerDetails_UnitTypeID").find("option:selected").text(), t = $("#JobOwnerDetails_UnitNumber").val(), i = $("#JobOwnerDetails_StreetNumber").val(), r = $("#JobOwnerDetails_StreetName").val(), n = $("#JobOwnerDetails_StreetTypeID").find("option:selected").text(), s = $("#JobOwnerDetails_Town").val(), l = $("#JobOwnerDetails_State").val(), o = $("#JobOwnerDetails_PostCode").val(); if (1 == $("#JobOwnerDetails_AddressID").val()) { if ("" != t && "" != a ? (e = a + " " + t + "/" + i + " " + r + " " + n + ", " + s + " " + l + " " + o, e = e.replace("Select", "")) : (e = i + " " + r + " " + n + ", " + s + " " + l + " " + o, e = e.replace("Select", "")), e = e.replace("Select", ""), "undefined" == typeof google) { var d = document.createElement("script"); d.type = "text/javascript", d.async = !0; var u = JobMapKeyUrl; u = u.toString().replace(/&amp;/g, "&"), d.src = u, document.body.appendChild(d) } setTimeout(function () { 1 == ProjectSession_UserTypeId && geocodeAddress(e, !0, !1) }, 2e3), $("#errorMsgRegionMap").hide() } } else "False" == jobOwd_IsOwnerAddressValid && 1 == ProjectSession_UserTypeId ? ($("#errorMsgValidOwnerAddress").html(closeButton + "Owner address does not match google street address."), $("#errorMsgValidOwnerAddress").show(), $("#ownerAdd").css("color", "Red")) : ($("#errorMsgValidOwnerAddress").hide(), $("#ownerAdd").css("color", "")) } function showHideOwnerAddress(e) { 1 == e || 0 == e ? ($(".OwnerDPA").show(), $(".OwnerPDA").hide()) : ($(".OwnerPDA").show(), $(".OwnerDPA").hide()) } function initializeOwnerDetails(e) { $("#JobOwnerDetails_CompanyName").change(function () { $.each(e, function (e, a) { a.CompanyName, $("select#JobOwnerDetails_CompanyName option:selected").val() }) }) } function showErrorMessage(e) { $(".alert").hide(), $("#successMsgRegion").hide(), $("#errorMsgRegion").html(closeButton + e), $("#errorMsgRegion").show(), $("html").animate({ scrollTop: 0 }, "slow"), $("body").animate({ scrollTop: 0 }, "slow") } function showErrorMessageForPopup(e, a, t) { $(".alert").hide(), t && t.hide(), a.html(closeButton + e), a.show() } function clearSignature(e) { confirm("Are you sure you want to delete uploaded signature?") && 1 == e && (ClearAllSignature(e, SRCOwnerSign, isOwnerSignUpload), isOwnerSignUpload = !1, $("#imgOwnerSignatureView").hide()) } function ClearAllSignature(e, a, t) { $.ajax({ url: urlClearJobSignture, dataType: "json", contentType: "application/json; charset=utf-8", type: "get", data: { typeOfSignature: e, signaturePath: a, jobId: BasicDetails_JobID, isUpload: t.toString().toLowerCase() }, success: function (e) { e.status ? showSuccessMessage("Signature has been deleted successfully.") : showErrorMessage(e.error) }, error: function () { showErrorMessage("Signature has not been deleted.") } }) } function DisplayOwnerAdd() { var e, a, t, i, r, n, s, l = $("#JobOwnerDetails_PostalAddressID").val() > 0 ? $("#JobOwnerDetails_PostalAddressID option:selected").text() : "", o = $("#JobOwnerDetails_UnitTypeID").val() > 0 ? $("#JobOwnerDetails_UnitTypeID option:selected").text() : "", d = $("#JobOwnerDetails_StreetNumber").val(), u = $("#JobOwnerDetails_StreetName").val(), c = $("#JobOwnerDetails_StreetTypeID").val() > 0 ? $("#JobOwnerDetails_StreetTypeID option:selected").text() : "", p = $("#JobOwnerDetails_PostalDeliveryNumber").val(), w = $("#JobOwnerDetails_UnitNumber").val(); l = "" == l || null == l ? "" : l, o = "" == o || null == o ? "" : o, d = "" == d || null == d ? "" : d, i = d + ("" == u || null == u ? "" : " " + u) + ("" == c || null == c ? "" : " " + c), r = $("#JobOwnerDetails_Town").val() + " " + $("#JobOwnerDetails_State").val() + " " + $("#JobOwnerDetails_PostCode").val(), 1 == $("#JobOwnerDetails_AddressID").val() ? "" != o && null != o || "" != w && null != w ? (e = o + ("" == w || null == w ? "" : " " + w), a = i, t = r) : (e = i, a = r, t = "") : (e = l + ("" == p || null == p ? "" : " " + p), a = r), n = $("#JobOwnerDetails_CompanyName").val(), s = $("#JobOwnerDetails_FirstName").val() + " " + $("#JobOwnerDetails_LastName").val(); var g = n + "</br>" + s + "</br > " + e + "</br > " + a + (null != t && "" != t && null != t ? "</br > " + t : ""), m = e + "," + a + (null != t && "" != t && null != t ? "," + t : ""); $("#ownerFullAddress").html(m), $("#ownerAdd").html(g), $("#ownerTypeName").html($("#JobOwnerDetails_OwnerType").val()); var b = $("#JobOwnerDetails_Email").val(); $("#phoneOwner").html($("#JobOwnerDetails_Phone").val()), $("#mobileOwner").html($("#JobOwnerDetails_Mobile").val()), $(".emailOwnerA").html($("#JobOwnerDetails_Email").val()), $(".emailOwnerA").attr("href", "mailto:'" + b + "'"), $(".emailOwnerA").attr("title", $("#JobOwnerDetails_Email").val()) } function SendEmailSignature() { $("#errorMsgRegionSignaturePopup").hide(), $("#successMsgRegionSignaturePopup").hide(); var e, a, t, i, r = $("[name=optType]:checked").val(), n = $("#drpSendMail").val(), s = $("#BasicDetails_JobType").val(), l = "", o = ""; if ("S" == r) { if ("2" == n) { if (1 == s ? (e = InstallerView_Mobile_Glbl, l = InstallerView_FirstName_Glbl, o = InstallerView_LastName_Glbl) : (e = $("#JobInstallerDetails_Mobile").val().trim(), l = $("#JobInstallerDetails_FirstName").val(), o = $("#JobInstallerDetails_LastName").val()), i = "No", 1 == s && "" == InstallerView_Mobile_Glbl) return $("#errorMsgRegionSignaturePopup").html("Installer Mobile Number is required."), $("#errorMsgRegionSignaturePopup").show(), !1; if (2 == s && "" == $("#JobInstallerDetails_Mobile").val().trim()) return $("#errorMsgRegionSignaturePopup").html("Installer Mobile Number is required."), $("#errorMsgRegionSignaturePopup").show(), !1 } else if ("1" == n) { if (e = $("#JobOwnerDetails_Mobile").val(), i = "Yes", l = $("#JobOwnerDetails_FirstName").val(), o = $("#JobOwnerDetails_LastName").val(), "" == $("#JobOwnerDetails_Mobile").val()) return $("#errorMsgRegionSignaturePopup").html("Owner Mobile Number is required."), $("#errorMsgRegionSignaturePopup").show(), !1 } else if ("4" == n) { if (e = DesignerView_Mobile_Glbl, l = DesignerView_FirstName_Glbl, o = DesignerView_LastName_Glbl, i = "No", "" == DesignerView_Mobile_Glbl) return $("#errorMsgRegionSignaturePopup").html("Designer Mobile Number is required."), $("#errorMsgRegionSignaturePopup").show(), !1 } else if ("3" == n && (e = JobElectricians_Mobile_Glbl, l = JobElectricians_FirstName_Glbl, o = JobElectricians_LastName_Glbl, i = "No", "" == JobElectricians_Mobile_Glbl)) return $("#errorMsgRegionSignaturePopup").html("Electrician Mobile Number is required."), $("#errorMsgRegionSignaturePopup").show(), !1 } else "2" == n ? (1 == s ? (a = InstallerView_Email_Glbl, l = InstallerView_FirstName_Glbl, o = InstallerView_LastName_Glbl) : (a = $("#JobInstallerDetails_Email").val(), l = $("#JobInstallerDetails_FirstName").val(), o = $("#JobInstallerDetails_LastName").val()), t = "Installer Email is required for it.", i = "No") : "1" == n ? (a = $("#JobOwnerDetails_Email").val(), t = "Owner Email is required for it.", i = "Yes", l = $("#JobOwnerDetails_FirstName").val(), o = $("#JobOwnerDetails_LastName").val()) : "4" == n ? (a = DesignerView_Email_Glbl, t = "Designer Email is required for it.", i = "No", l = DesignerView_FirstName_Glbl, o = DesignerView_LastName_Glbl) : "3" == n && (a = JobElectricians_Email_Glbl, t = "Electrician Email is required for it.", i = "No", l = $("#JobElectricians_FirstName").val(), o = $("#JobElectricians_LastName").val()); if ("S" == r && "" != e && null != e && null != e || "M" == r && "" != a && null != a && null != a) { var d, u = $("#BasicDetails_CompanyName").val(), c = $("#resellerName").text(), p = id, w = $("#txtAddress").val(); "1" == n ? d = loginLink + "Job/_OwnerSignature/" + p : "2" == n ? d = loginLink + "Job/_InstallerSignature?Id=" + p : "3" == n ? d = loginLink + "Job/_ElectricianSignature/" + p : "4" == n && (d = loginLink + "Job/_DesignerSignature/" + p); var g = new Date, m = g.getMonth() + 1 + "%2F" + g.getDate() + "%2F" + g.getFullYear() + "%20" + g.getHours() + "%3A" + g.getMinutes() + "%3A" + g.getSeconds(); if ("2" == n) { var b = ""; b = "S" == r ? d + "&Type=" + s + "&SMSOrMail=" + r : '<a href="' + d + "&Type=" + s + "&SMSOrMail=" + r + "&LinkSentedDateTime=" + m + '">' + d + "&Type=" + s + "&SMSOrMail=" + r + "&LinkSentedDateTime=" + m + "</a>"; var O = a; $.ajax({ url: actionMailForCollectSignature, data: { MailUrl: b, MailTo: O, JobType: s, IsOwner: i, FirstName: l, LastName: o, Type: r, url: b, mobile: e, IsClassicJob: !1, jobId: modelJobId, Reseller: c, solarCompany: u, installationAddress: w }, contentType: "application/json", method: "get", success: function (e) { if (1 == e) { if ($(".alert").hide(), $("#successMsgRegionSignaturePopup").html("S" == r ? "SMS has been sent successfully." : "Mail has been sent successfully.")) return $("#successMsgRegionSignaturePopup").html("S" == r ? "SMS has been sent successfully." : "Mail has been sent successfully."), $("#successMsgRegionSignaturePopup").show(), !1; $(".alert").hide(), $("#errorMsgRegionSignaturePopup").html("S" == r ? "SMS has not been sent." : "Mail has not been sent."), $("#errorMsgRegionSignaturePopup").show() } else $("#successMsgRegionSignaturePopup").html("S" == r ? "SMS has been sent successfully." : "Mail has been sent successfully.") || ($(".alert").hide(), $("#errorMsgRegionSignaturePopup").html("S" == r ? "SMS has not been sent." : "Mail has not been sent."), $("#errorMsgRegionSignaturePopup").show()) } }) } else { b = ""; b = "S" == r ? d + "?Type=" + s + "&SMSOrMail=" + r : '<a href="' + d + "?Type=" + s + "&SMSOrMail=" + r + "&LinkSentedDateTime=" + m + '">' + d + "&Type=" + s + "&SMSOrMail=" + r + "&LinkSentedDateTime=" + m + "</a>"; O = a; $.ajax({ url: actionMailForCollectSignature, data: { MailUrl: b, MailTo: O, JobType: s, IsOwner: i, FirstName: l, LastName: o, Type: r, url: b, mobile: e, IsClassicJob: !1, jobId: modelJobId, Reseller: c, solarCompany: u, installationAddress: w }, contentType: "application/json", method: "get", success: function (e) { if (1 == e) return $(".alert").hide(), $("#successMsgRegionSignaturePopup").html("S" == r ? "SMS has been sent successfully." : "Mail has been sent successfully."), $("#successMsgRegionSignaturePopup").show(), !1; $(".alert").hide(), $("#errorMsgRegionSignaturePopup").html("S" == r ? "SMS has not been sent." : "Mail has not been sent."), $("#errorMsgRegionSignaturePopup").show() } }) } } else $("#errorMsgRegionSignaturePopup").html(t), $("#errorMsgRegionSignaturePopup").show() } function SearchHistory() { var e = $("#historyCategory").val(); e = null != e ? e : 0; var a = FilterIsImportantNote_Glbl, t = $("#filter-postvisibility").val(), i = $("#BasicDetails_JobID").val(), r = $("#IsDeletedJobNote").val(), n = "DESC"; $("#loading-image").show(), setTimeout(function () { $.ajax({ url: showhistoryUrl, type: "GET", data: { jobId: i, categoryID: e, order: n, PostVisibility: t, IsImportant: a, IsDeletedJobNote: r }, cache: !1, async: !1, success: function (e) { window.onbeforeunload = null, $("#showfilteredhistory").html($.parseHTML(e)), $("divCustom").mCustomScrollbar() } }), AddHistoryIcons(), tagandsearchfilter(), hideEditDeleteIcons(), $("#loading-image").hide() }, 10) } function AddHistoryIcons() { $(".history-block li").each(function () { var e = $(this).attr("class"); void 0 !== e && (e.includes("stage-status") ? $(this).find(".border-icon").addClass("fa-regular fa-building") : e.includes("notes-status") ? $(this).find(".border-icon").addClass("fa-regular fa-note-sticky") : e.includes("message-status") ? $(this).find(".border-icon").addClass("message1") : e.includes("traded-status") ? $(this).find(".border-icon").addClass("fa-regular fa-circle-dollar-to-slot") : e.includes("stc-status") ? $(this).find(".border-icon").addClass("fa-solid fa-pen-to-square") : e.includes("scheduling-status") ? $(this).find(".border-icon").addClass("fa-solid fa-briefcase") : e.includes("documents-status") ? $(this).find(".border-icon").addClass("fa-regular fa-file-lines") : e.includes("signature-status") ? $(this).find(".border-icon").addClass("fa-regular fa-file-signature") : e.includes("spvlogs-status") ? $(this).find(".border-icon").addClass("fa-regular fa-clipboard-check") : e.includes("invoice-status") && $(this).find(".border-icon").addClass("fa-regular fa-file-invoice-dollar")) }) } function tagandsearchfilter() { var e = 0, a = $("#relatedTofilter").val(), t = "@" + a, i = $("#JobHistorySearch").val(); if ("0" == a ? $("#divCustom .history-box").each(function () { $(this).text().search(new RegExp(i, "i")) < 0 ? $(this).hide() : ($(this).show(), $("#norecords").empty(), e++) }) : $("#divCustom .history-box").each(function () { $(this).text().search(new RegExp(t, "i")) < 0 || $(this).text().search(new RegExp(i, "i")) < 0 ? $(this).hide() : ($(this).show(), $("#norecords").empty(), e++) }), e > 0) $(".history-box").css("border-top", "1px solid #e3e3e3"); else { $("#norecords").empty(); var r = "<div style='text-align:center;font-size:24px;margin-top:120px'>No Record(s) Found.</div>"; $("#norecords").append(r) } } function hideEditDeleteIcons() { $(".IconsEditDelete").each(function () { $(this).css("display", "none !important") }) } function GetSignatureFromVisit(e, a) { if (0 == $("#jobVisitDetail").attr("visitCount")) return alert("Please add visit first."), !1; $.ajax({ url: GetSignatureFromVisitURL, dataType: "json", contentType: "application/json; charset=utf-8", type: "post", data: JSON.stringify({ jobId: BasicDetails_JobID, typeOfSignature: e }), success: function (t) { if (t.status) { var i = ProjectSession_UploadedDocumentPath; t.signPath ? (3 == e ? $("#imgElectricianSign").attr("src", i + t.signPath) : 2 == e ? $("#imgInstallerSign").attr("src", i + t.signPath) : 4 == e ? $("#imgDesignerSign").attr("src", i + t.signPath) : 1 == e && $("#imgOwnerSign").attr("src", i + t.signPath), showSuccessMessageForPopup("Signature has been saved successfully.", $("#successMsgRegionInstallerDetails"), $("#errorMsgRegionInstallerDetails"))) : alert("No signature found from default submission visit."), a && $("#popupboxSetSignature").modal("toggle") } else showErrorMessageForPopup(t.error, $("#errorMsgRegionInstallerDetails"), $("#successMsgRegionInstallerDetails")) }, error: function () { showErrorMessageForPopup("Signature has not been saved.", $("#errorMsgRegionInstallerDetails"), $("#successMsgRegionInstallerDetails")) } }) } var fillOwnerAddress, OwnerAddressJson = []; $(document).ready(function () { null != Model_OwnerSignature && "" != Model_OwnerSignature && (SRCOwnerSign = signatureURL + Model_OwnerSignature_Replace, $("#imgOwnerSignatureView").hide()), validateOrganisation(), null != modelOwnerSign && "" != modelOwnerSign && null != modelOwnerSign && $("#imgOwnerSign").attr("src", signatureURL + modelOwnerSignURL), $("#ownerGetSignFromVisit").click(function (e) { GetSignatureFromVisit(1), e.preventDefault() }), 1 == $("#JobOwnerDetails_AddressID").val() ? $("#JobInstallationDetails_IsSameAsOwnerAddress").prop("disabled", !1) : $("#JobInstallationDetails_IsSameAsOwnerAddress").prop("disabled", !0), fillOwnerAddressDetail(); var e = modelOwnerPostalAddressID || 0, a = modelOwnerUnitTypeID || 0, t = modelOwnerStreetTypeID || 0, i = modelOwnerCompanyName; -1 != i.indexOf("&#39") ? i = i.replace(/&#39;/g, "'") : -1 != i.indexOf("&amp") ? i = i.replace(/&amp;/g, "&") : -1 != i.indexOf("&quot") ? i = i.replace(/&quot;/g, '"') : -1 != i.indexOf("&lt") ? i = i.replace(/&lt;/g, "<") : -1 != i.indexOf("&gt") && (i = i.replace(/&gt;/g, ">")), $("#JobOwnerDetails_CompanyName").append($("<option></option>").val(i).html(i)), $("#JobOwnerDetails_CompanyName").val(i), dropDownData = []; var r = _source.filter(e => "UnitType" == e.id); r.length > 0 && FillDropDown2("JobOwnerDetails_UnitTypeID", r[0].data, a, !0, fillOwnerAddress, null, "UnitTypeName", "UnitTypeID"); var n = _source.filter(e => "StreetType" == e.id); n.length > 0 && FillDropDown2("JobOwnerDetails_StreetTypeID", n[0].data, t, !0, fillOwnerAddress, null, "StreetTypeName", "StreetTypeID"); var s = _source.filter(e => "PostalAddress" == e.id); s.length > 0 && FillDropDown2("JobOwnerDetails_PostalAddressID", s[0].data, e, !0, fillOwnerAddress, null, "PostalDeliveryType", "PostalAddressID"), dropDownData.push({ id: "JobOwnerDetails_UnitTypeID", key: "UnitType", value: a, hasSelect: !0, callback: fillOwnerAddress, defaultText: null, proc: "UnitType_BindDropdown", param: [], bText: "UnitTypeName", bValue: "UnitTypeID" }, { id: "JobOwnerDetails_StreetTypeID", key: "StreetType", value: t, hasSelect: !0, callback: fillOwnerAddress, defaultText: null, proc: "StreetType_BindDropdown", param: [], bText: "StreetTypeName", bValue: "StreetTypeID" }, { id: "JobOwnerDetails_PostalAddressID", key: "PostalAddress", value: e, hasSelect: !0, callback: fillOwnerAddress, defaultText: null, proc: "PostalAddress_BindDropdown", param: [], bText: "PostalDeliveryType", bValue: "PostalAddressID" }), dropDownData.bindDropdown(), buttonOwnerDetailClick(), OwnerAutoComplete(), $("#JobOwnerDetails_OwnerType").change(function (e) { validateOrganisation(), localStorage.setItem("SEJobOwnerDetails_OwnerType", $("#JobOwnerDetails_OwnerType").val()), JobOwnerDetails_OwnerType_Glbl = $("#JobOwnerDetails_OwnerType").val() }), $("#JobOwnerDetails_UnitTypeID").change(function () { "" == $("#JobOwnerDetails_UnitTypeID option:selected").val() ? ($("#lblOwnerUnitNumber").removeClass("required"), $("#lblOwnerUnitTypeID").removeClass("required"), $("#lblOwnerStreetNumber").addClass("required")) : ($("#lblOwnerUnitNumber").addClass("required"), $("#lblOwnerUnitTypeID").addClass("required"), $("#lblOwnerStreetNumber").removeClass("required")) }), $("#JobInstallationDetails_UnitTypeID").change(function () { "" == $("#JobInstallationDetails_UnitTypeID option:selected").val() ? ($("#lblInstallationUnitNumber").removeClass("required"), $("#lblInstallationUnitTypeID").removeClass("required"), $("#lblInstallationStreetNumber").addClass("required")) : ($("#lblInstallationUnitNumber").addClass("required"), $("#lblInstallationUnitTypeID").addClass("required")) }), $("#JobOwnerDetails_CompanyABN").change(function () { $.ajax({ type: "GET", url: urlGetCompanyABN, data: { id: $("#JobOwnerDetails_CompanyABN").val() }, contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { return 0 == e ? ($("#JobOwnerDetails_CompanyName").empty(), $("#JobOwnerDetails_CompanyName").append($("<option></option>").val("").html("Select")), showErrorMessageForPopup("Invalid Company ABN.", $("#errorMsgRegionOwnerPopup"), $("#successMsgRegionInstallerPopup")), !1) : ($("#JobOwnerDetails_CompanyName option").length > 1 ? ($("#JobOwnerDetails_CompanyName").empty(), $("#JobOwnerDetails_CompanyName").append($("<option></option>").val("").html("Select")), $.each(e, function (e, a) { $("#JobOwnerDetails_CompanyName").append($("<option></option>").val(a.CompanyName).html(a.CompanyName)) })) : $.each(e, function (e, a) { $("#JobOwnerDetails_CompanyName").append($("<option></option>").val(a.CompanyName).html(a.CompanyName)) }), initializeOwnerDetails(e), e) } }) }), setTimeout(function () { CheckOwnerAddressIsValidOrNot() }, 3e3), localStorage.setItem("SEJobOwnerDetails_OwnerType", $("#JobOwnerDetails_OwnerType").val()), JobOwnerDetails_OwnerType_Glbl = $("#JobOwnerDetails_OwnerType").val(), UploadAllSignatureOfJob($("#uploadJobOwnerSign")) }), $("#aGetOwnerSignature").click(function (e) { e.preventDefault(), $("#mdlGetSignature").modal("show") }), $("#btnSendMail").click(function (e) { SendEmailSignature(), SearchHistory() }), $("#imgOwnerSignatureView").click(function () { $("#loading-image").css("display", ""), $("#imgOwnerSign").attr("src", SRCOwnerSign).load(function () { logoWidth1 = this.width, logoHeight1 = this.height, $("#popupOwnerSign").modal({ backdrop: "static", keyboard: !1 }), $(window).height() <= logoHeight1 ? ($("#imgOwnerSign").closest("div").height($(window).height() - 150), $("#imgOwnerSign").closest("div").css("overflow-y", "scroll"), $("#imgOwnerSign").height(logoHeight1)) : ($("#imgOwnerSign").height(logoHeight1), $("#imgOwnerSign").closest("div").removeAttr("style")), screen.width <= logoWidth1 || logoWidth1 >= screen.width - 250 ? ($("#popupOwnerSign").find(".modal-dialog").width(screen.width - 250), $("#imgOwnerSign").width(logoWidth1)) : ($("#imgOwnerSign").width(logoWidth1), $("#popupOwnerSign").find(".modal-dialog").width(logoWidth1)), $("#loading-image").css("display", "none") }), $("#imgOwnerSign").unbind("error"), $("#imgOwnerSign").attr("src", SRCOwnerSign).error(function () { alert("Image does not exist."), $("#loading-image").css("display", "none") }) }), $("#btnClosepopupOwnerSign").click(function () { $("#popupOwnerSign").modal("toggle") });