var cols = [], colsDefs = [], jobIndexTable, arrAdvanceSearchFilters = [], IsServerCallForSearch = !1; function UnlockChanges() { if ("Lock" == $("#btnLock").val()) { $("#btnLock").prop("value", "Unlock"); var e = $("#datatable").DataTable(); datatableInfo(), e.destroy(), drawJobIndex(); e = $("#datatable").DataTable(); $.fn.dataTable.ColReorder(e), e.on("column-reorder", function (e, t, a) { DataTableColResizeNotAll($("#trHeadersDynamic th").length - 1) }), DataTableColResizeNotAll($("#trHeadersDynamic th").length) } else "Unlock" == $("#btnLock").val() && ($("#btnLock").prop("value", "Lock"), DataTableColResize($("#trHeadersDynamic th").length), DisableAllColReorder()) } function DisableAllColReorder() { $(".dataTable thead th").each(function () { for (var e = $._data($(this)[0]).events.mousedown, t = 0, a = e.length; t < a; t++)"ColReorder" == e[t].namespace && (e[t].handler = function () { }) }) } function DataTableColResizeNotAll(e) { var t = []; t.push(0), (6 == UserTypeID || "true" == isAssignSSC && (4 == UserTypeID && "true" == IsSSCReseller || 8 == UserTypeID && "false" == IsSubContractor && "true" == IsSSCReseller)) && t.push(e - 2), $("#datatable").colResizable({ fixed: !0, liveDrag: !0, postbackSafe: !0, partialRefresh: !0, flush: !0, resizeMode: "fit", disabledColumns: t, onResize: a }); var a = function (e) { $(e.currentTarget) } } function BindSolarCompany(e) { $("#searchSolarCompany").val(""); var t = !1; return $.ajax({ type: "POST", url: urlGetSolarCompanyByResellerId, dataType: "json", async: !1, data: { id: e, isAll: !0 }, success: function (e) { solarCompanyList = [], $.each(e, function (e, a) { solarCompanyList.push({ value: a.Value, text: a.Text }), 0 == t && a.Value == localStorage.getItem("JobList_SolarCompanyId") && (t = !0) }), t ? $("#hdnsolarCompanyid").val(localStorage.getItem("JobList_SolarCompanyId")) : ($("#hdnsolarCompanyid").val(solarCompanyList.length > 0 ? solarCompanyList[0].value : 0), localStorage.setItem("JobList_SolarCompanyId", $("#hdnsolarCompanyid").val())), "" == localStorage.getItem("JobList_SolarCompanyId") && ($("#hdnsolarCompanyid").val(solarCompanyList.length > 0 ? solarCompanyList[0].value : 0), localStorage.setItem("JobList_SolarCompanyId", $("#hdnsolarCompanyid").val())), $.each(solarCompanyList, function (e, t) { t.value == localStorage.getItem("JobList_SolarCompanyId") && ($("#searchSolarCompany").val(t.text), $("#hdnsolarCompanyid").val(localStorage.getItem("JobList_SolarCompanyId"))) }) }, error: function (e) { alert("Failed to retrieve Solar Companies." + e) } }), !1 } function ResetSearchFilters(e) { if (localStorage.setItem("JobList_Searchfor", ""), 1 != UserTypeID && 3 != UserTypeID && 2 != UserTypeID && 5 != UserTypeID || localStorage.setItem("JobList_IsArchive", !1), (t = $("input.dropdown-filter-menu-search:text").filter(function () { return "" != this.value })).val(""), t.keyup(), $("#txtSearchfor").val(""), $("#txtFromDate").val(""), $("#txtToDate").val(""), $("#txtFromDate2").val(""), $("#txtToDate2").val(""), e) { var t; if (0 != SelectedStageId) (t = document.getElementById("jobstage_" + SelectedStageId)).style.backgroundColor = "#bdbdbd"; SelectedStageId = 0 } SetParamsFromLocalStorage(), $.fn.dataTable.ext.search = [], FilterIsArchiveData(), jobIndexTable.draw(), 7 == UserTypeID && 9 == UserTypeID && 10 == UserTypeID || GetJobStageCount(), SelectAllAdvanceSearchCategory(), SaveFilter(), $("#btnChangeSearchFilter").val("Change Filter") } function SearchJobs() { $("#loading-image").css("display", ""), 1 != UserTypeID && 3 != UserTypeID || localStorage.setItem("JobList_ResellerId", document.getElementById("ResellerId").value), 1 != UserTypeID && 3 != UserTypeID && 2 != UserTypeID && 5 != UserTypeID && 6 != UserTypeID || localStorage.setItem("JobList_SolarCompanyId", $("#hdnsolarCompanyid").val()), 1 != UserTypeID && 3 != UserTypeID && 2 != UserTypeID && 5 != UserTypeID || localStorage.setItem("JobList_IsArchive", document.getElementById("chkIsArchive").checked), 1 != UserTypeID && 3 != UserTypeID && 2 != UserTypeID && 5 != UserTypeID || (document.getElementById("chkIsArchive").checked ? ($("#btnOpenDeletedJobs").removeAttr("Style"), $("#btnDeleteJobs").attr("Style", "display:none")) : ($("#btnOpenDeletedJobs").attr("Style", "display:none"), $("#btnDeleteJobs").removeAttr("Style"))), IsServerCallForSearch && (datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex(), IsServerCallForSearch = !1), $.fn.dataTable.ext.search = [], FilterIsArchiveData(); var e = $("#txtSearchfor").val().toLowerCase().trim(); if ("" != e && null != e) { var t = []; $.each(arrAdvanceSearchFilters, function (e, a) { t.push(jobIndexTable.columns().column(a + ":name").index()) }), $.fn.dataTable.ext.search.push(function (a, o, n) { for (var l = 0, s = t.length; l < s; l++)if (-1 !== o[t[l]].toLowerCase().indexOf(e)) return !0; return !1 }) } if ("" != $("#txtFromDate").val() && "" != $("#txtToDate").val()) { var a = $("#txtFromDate").val().split("/"); mincreatedate = new Date([a[2], a[1], a[0]].join("-")); var o = $("#txtToDate").val().split("/"); maxcreatedate = new Date([o[2], o[1], o[0]].join("-")), $.fn.dataTable.ext.search.push(function (e, t, a) { if (void 0 === t._date) { var o = jobIndexTable.columns().column("CreatedDate:name").index(); t._date = t[o]; var n = t._date.split("/"); t._date = new Date([n[2], n[1], n[0]].join("-")) } return "Invalid Date" != t._date && (!(t._date < mincreatedate) && !(t._date > maxcreatedate)) }) } if ("" != $("#txtFromDate2").val() && "" != $("#txtToDate2").val()) { var n = $("#txtFromDate2").val().split("/"); min = new Date([n[2], n[1], n[0]].join("-")); var l = $("#txtToDate2").val().split("/"); max = new Date([l[2], l[1], l[0]].join("-")), $.fn.dataTable.ext.search.push(function (e, t, a) { if (void 0 === t._date2) { var o = jobIndexTable.columns().column("InstallationDate:name").index(); t._date2 = t[o]; var n = t._date2.split("/"); t._date2 = new Date([n[2], n[1], n[0]].join("-")) } return "Invalid Date" != t._date2 && (!(t._date2 < min) && !(t._date2 > max)) }) } jobIndexTable.draw(), 7 == UserTypeID && 9 == UserTypeID && 10 == UserTypeID || GetJobStageCount(), $("#loading-image").css("display", "none"), "Lock" == $("#btnLock").val() && (DataTableColResize($("#trHeadersDynamic th").length), DisableAllColReorder()) } function FilterIsArchiveData() { null != document.getElementById("chkIsArchive") && document.getElementById("chkIsArchive").checked ? $.fn.dataTable.ext.search.push(function (e, t, a) { return -1 !== t[jobIndexTable.columns().column("IsDeleted:name").index()].toLowerCase().indexOf("true") }) : $.fn.dataTable.ext.search.push(function (e, t, a) { return -1 !== t[jobIndexTable.columns().column("IsDeleted:name").index()].toLowerCase().indexOf("false") }) } function ConvertToDate(e) { if (null != e) { var t = new Date(parseInt(e.replace("/Date(", ""))); return ("0" + t.getDate()).slice(-2) + "/" + ("0" + (t.getMonth() + 1)).slice(-2) + "/" + t.getFullYear() } return "" } function GetJobStageCount() { } function DeleteSelectedJobs() { if (selectedRows = [], $('#datatable tbody input[type="checkbox"]').each(function () { if (1 == $(this).prop("checked")) { var e = { id: $(this).attr("id").substring(4), jobTitle: $(this).attr("jobtitle") }; selectedRows.push(e) } }), null != selectedRows && selectedRows.length > 0) { if (confirm("You are about to delete (" + selectedRows.length + ") jobs are you sure you want to continue?") && confirm("Are you really sure want to continue?")) { var e = '<button type="button" class="close" onclick="$(this).parent().hide();" aria-hidden="true">&times;</button>'; $.ajax({ url: urlDeleteSelectedJobs, type: "POST", async: !1, data: JSON.stringify({ jobs: selectedRows }), dataType: "json", contentType: "application/json; charset=utf-8", success: function (t) { "Failed" == t.JsonResponseObj.status ? ($(".alert").hide(), $("#errorMsgRegion").removeClass("alert-success"), $("#errorMsgRegion").addClass("alert-danger"), $("#errorMsgRegion").html(e + t.JsonResponseObj.strErrors), $("#errorMsgRegion").show()) : ($(".alert").hide(), $("#errorMsgRegion").removeClass("alert-danger"), $("#errorMsgRegion").addClass("alert-success"), $("#errorMsgRegion").html(e + t.JsonResponseObj.strErrors), $("#errorMsgRegion").show()), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex() } }) } } else alert("Please select any job for delete."); HideToolTip() } function OpenDeletedJobs() { if (selectedRows = [], $('#datatable tbody input[type="checkbox"]').each(function () { if (1 == $(this).prop("checked")) { var e = { id: $(this).attr("id").substring(4) }; selectedRows.push(e) } }), null != selectedRows && selectedRows.length > 0) { if (confirm("Are you sure want to open deleted job(s)?")) { var e = '<button type="button" class="close" onclick="$(this).parent().hide();" aria-hidden="true">&times;</button>'; $.ajax({ url: urlOpenDeletedJobs, type: "POST", async: !1, data: JSON.stringify({ jobs: selectedRows }), dataType: "json", contentType: "application/json; charset=utf-8", success: function (t) { "Failed" == t.JsonResponseObj.status ? ($(".alert").hide(), $("#errorMsgRegion").removeClass("alert-success"), $("#errorMsgRegion").addClass("alert-danger"), $("#errorMsgRegion").html(e + t.JsonResponseObj.strErrors), $("#errorMsgRegion").show()) : ($(".alert").hide(), $("#errorMsgRegion").removeClass("alert-danger"), $("#errorMsgRegion").addClass("alert-success"), $("#errorMsgRegion").html(e + t.JsonResponseObj.strErrors), $("#errorMsgRegion").show()), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex() } }) } } else alert("Please select any job for open again.") } function AssignSSC(e) { $("#loading-image").show(), FillDropDown("SSCID", urlGetSSCUser, null, !0, null), setTimeout(function () { $.get(urlAssignSSC, function (t) { $("#divAssignJobSSC").empty(), $("#divAssignJobSSC").append(t), $("#popupProof").modal({ backdrop: "static", keyboard: !1 }), $("#SSCJobID").val(e), $("#SSCID").focus(), $.ajax({ url: urlGetSSCUserByJbID + "/" + e, type: "get", async: !1, dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { AssignSSCClickEvent(), 0 == e.length ? ($("#SSCID").empty(), $("#SSCID").append('<option value="">Select</option>')) : ($("#SSCID").empty(), $("#SSCID").append('<option value="">Select</option>'), $.each(e, function (e, t) { $("#SSCID").append('<option value="' + t.Value + '">' + t.Text + "</option>") })) } }), $.ajax({ url: urlGetSSCID + "/" + e, type: "get", async: !1, dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { e.length > 0 ? ($("#SSCID").prop("disabled", !0), $("#SSCID").val(parseInt(e[0].SSCID)), $("#RemoveSSCNote").val(e[0].Notes), $("#btnJobSSCMapping").hide(), $("#sscNotes").show(), $("#btnSSCRemove").show(), 1 == e[0].IsSSCRemove ? ($("#btnSSCRemove").hide(), $("#btnSSCCancelRemovalRequest").show(), $("#divRequestedBy").show(), $("#requestBy").html(e[0].RequestedBy), $("#RemoveSSCNote").prop("disabled", !0)) : ($("#btnSSCCancelRemovalRequest").hide(), $("#RemoveSSCNote").prop("disabled", !1), $("#divRequestedBy").hide())) : ($("#SSCID").prop("disabled", !1), $("#btnJobSSCMapping").show(), $("#sscNotes").hide(), $("#btnSSCRemove").hide(), $("#btnSSCCancelRemovalRequest").hide(), $("#RemoveSSCNote").prop("disabled", !1)) } }), $("#loading-image").hide() }) }, 500) } function validateForm() { return $.validator.unobtrusive.parse("#UserDetails"), !!$("#UserDetails").valid() } function validateForm1() { return $.validator.unobtrusive.parse("#UserDetail"), !!$("#UserDetail").valid() } function SetStageId(e) { document.getElementById("jobstage_" + SelectedStageId).style.backgroundColor = "#bdbdbd", SelectedStageId = e, document.getElementById("jobstage_" + SelectedStageId).style.backgroundColor = "#5F5D5D", 1 != UserTypeID && 3 != UserTypeID && 2 != UserTypeID && 5 != UserTypeID || localStorage.setItem("JobList_IsArchive", !1), localStorage.setItem("JobList_JobScheduleTypeId", 0), document.getElementById("JobScheduleTypeId").selectedIndex = 0, localStorage.setItem("JobList_JobTypeId", 0), document.getElementById("JobTypeId").selectedIndex = 0, localStorage.setItem("JobList_JobPriorityId", 0), document.getElementById("JobPriorityId").selectedIndex = 0, localStorage.setItem("JobList_Searchfor", ""), localStorage.setItem("JobList_PreApprovalStatusId", 0), document.getElementById("PreApprovalStatusId").selectedIndex = 0, localStorage.setItem("JobList_ConnectionStatusId", 0), document.getElementById("ConnectionStatusId").selectedIndex = 0, $("#txtFromDate").val(""), $("#txtToDate").val(""), document.getElementById("chkJobRef").checked = !0, document.getElementById("chkJobDescription").checked = !0, document.getElementById("chkJobAddress").checked = !0, document.getElementById("chkClient").checked = !0, document.getElementById("chkStaff").checked = !1, document.getElementById("chkInvoiced").checked = !0, document.getElementById("chkNotInvoiced").checked = !0, document.getElementById("chkReadyToTrade").checked = !0, document.getElementById("chkNotReadyToTrade").checked = !0, document.getElementById("chkTraded").checked = !0, document.getElementById("chkNotTraded").checked = !0, document.getElementById("chkPreApprovalNotBeenApproved").checked = !0, document.getElementById("chkPreApprovalApproved").checked = !0, document.getElementById("chkConnectionCompleted").checked = !0, document.getElementById("chkConnectionNotCompleted").checked = !0, document.getElementById("chkACT").checked = !0, document.getElementById("chkNSW").checked = !0, document.getElementById("chkNT").checked = !0, document.getElementById("chkQLD").checked = !0, document.getElementById("chkSA").checked = !0, document.getElementById("chkTAS").checked = !0, document.getElementById("chkWA").checked = !0, document.getElementById("chkVIC").checked = !0, SetParamsFromLocalStorage(), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex() } function GetDates(e) { if ("" != e) { var t = ConvertDateToTick(e, dateFormat); return moment(t).format("YYYY-MM-DD") } return "" } function LoadStc() { var e = !0, t = !0, a = 0, o = 0, n = 0, l = 0, s = 0, r = 0, i = 0, c = 0, d = 0, p = 0, u = 0, m = 0, h = !1, b = 0, g = []; selectedRows = [], $("#datatable tbody input:checkbox").each(function () { if (1 == $(this).prop("checked")) { var e = { id: $(this).attr("id").substring(4), jobTitle: $(this).attr("jobtitle") }; selectedRows.push(e) } }), null != selectedRows && selectedRows.length > 0 ? $.ajax({ url: urlGetDataForTradeJob, type: "POST", async: !1, data: JSON.stringify({ jobs: selectedRows }), dataType: "json", contentType: "application/json; charset=utf-8", success: function (I) { var f = I.data; if ("All" == $("#searchSolarCompany").val()) return e = !1, alert("Please select single solar company to trade jobs."), !1; if (f.length > 0) for (var y = 0; y < f.length; y++) { if (!(parseFloat(f[y].SystemSize) <= 60)) return e = !1, alert("You can not trade for job from here which has system size greater than 60."), !1; if (1 == f[y].IsTraded || 1 == f[y].IsCustomPrice) return e = !1, alert("Please select jobs which are neither traded nor have custom price."), !1; if (1 != f[y].IsReadyToTrade) return e = !1, alert("Please select jobs which are ready to trade."), !1; if (IsAllowKW = f[y].UnderKW, JobSizeForOptiPay = parseFloat(f[y].KWValue), IsCustomAllowKW = f[y].IsCustomUnderKW, JobCustomSizeForOptiPay = parseFloat(f[y].CustomKWValue), CustTerm = f[y].CustomSettlementTerm, SystemSize = parseFloat(f[y].SystemSize), 1 == IsAllowKW && SystemSize > JobSizeForOptiPay || 8 == CustTerm && 1 == IsCustomAllowKW && SystemSize > JobCustomSizeForOptiPay) return e = !1, alert("Please select jobs which have system size less than or equal to OptiPay KW."), !1; if (t) a = parseFloat(f[y].PriceDay1), o = parseFloat(f[y].PriceDay3), n = parseFloat(f[y].PriceDay7), l = parseFloat(f[y].UpFront), s = parseFloat(f[y].PriceOnApproval), r = parseFloat(f[y].PartialPayment), i = parseFloat(f[y].RapidPay), c = parseFloat(f[y].OptiPay), d = parseFloat(f[y].Commercial), p = parseFloat(f[y].Custom), u = parseFloat(f[y].InvoiceStc), m = f[y].PropertyType, h = f[y].IsGst, b = f[y].GSTDocument, e = !0, g.push(f[y].JobID); else { if (a != parseFloat(f[y].PriceDay1) || o != parseFloat(f[y].PriceDay3) || n != parseFloat(f[y].PriceDay7) || l != parseFloat(f[y].UpFront) || s != parseFloat(f[y].PriceOnApproval) || r != parseFloat(f[y].PartialPayment) || i != parseFloat(f[y].RapidPay) || c != parseFloat(f[y].OptiPay) || d != parseFloat(f[y].Commercial) || p != parseFloat(f[y].Custom) || u != parseFloat(f[y].InvoiceStc) || m != f[y].PropertyType || h != f[y].IsGst || b.length > 0 != f[y].GSTDocument.length > 0) return e = !1, alert("Please select jobs which have same price and installation property type."), !1; e = !0, g.push(f[y].JobID) } t = !1 } } }) : alert("Please select any job for trade."), e ? g.length > 0 ? $.ajax({ url: urlBindJobSTCPriceView, type: "POST", data: { jobId: g.join(","), IsGridView: !0, IsTradedFromJobIndex: !0 }, success: function (e) { "" == e ? alert("Select Custom Price") : ($("#SettleMentBlock").html(e), $("#errorMsgRegionSTCStatus").hide(), $("#errorMsgRegionSTCStatus").html(""), $("#StcModal").modal({ backdrop: "static", keyboard: !1 }), $(".LiSettlement:first").click()) } }) : alert("Atleast one job should be selected.") : $('#datatable tbody input[type="checkbox"]').each(function () { $(this).attr("checked", !1), $("#chkAll").attr("checked", !1), chkCount = 0, $("#btotalTradedSTC").html(0) }) } function AcceptRejectJobToSSC(e, t) { $.ajax({ url: urlAcceptRejectJobToSSC, type: "POST", async: !1, data: JSON.stringify({ jobID: e, role: t }), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { e.success && ($(".alert").hide(), $("#errorMsgRegion").html(closeButton + "Job has been " + e.success + " successfully."), $("#errorMsgRegion").show(), GetJobStageCount(), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex()) } }) } function DeleteRemoveSSCRequest(e) { $.ajax({ url: urlCancelRemovalRequest, type: "POST", async: !1, data: JSON.stringify({ jobId: e }), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { e.success && ($(".alert").hide(), $("#popuperrorMsgRegion").removeClass("alert-danger"), $("#popuperrorMsgRegion").addClass("alert-success"), $("#popuperrorMsgRegion").html(closeButton + "Cancel removal request removed successfully from the job."), $("#popuperrorMsgRegion").show(), location.reload(), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex()) } }) } function BulkChangeJobStage() { document.getElementById("JobStageID").selectedIndex > 0 ? (selectedRows = [], $('#datatable tbody input[type="checkbox"]').each(function () { 1 == $(this).prop("checked") && selectedRows.push($(this).attr("JobId")) }), null != selectedRows && selectedRows.length > 0 ? $.ajax({ type: "POST", url: urlBulkChangeJobStage, async: !1, dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ jobstage: document.getElementById("JobStageID").value, jobids: selectedRows.join(",") }), success: function (e) { e.success && ($(".alert").hide(), $("#errorMsgRegion").removeClass("alert-danger"), $("#errorMsgRegion").addClass("alert-success"), $("#errorMsgRegion").html(closeButton + "Job Stages updated successfully."), $("#errorMsgRegion").show(), GetJobStageCount(), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex(), document.getElementById("JobStageID").selectedIndex = 0) }, error: function (e) { } }) : alert("Please select any Job to update Stage.")) : alert("Please select Job Stage first.") } function HideToolTip() { $(".tooltip").hide() } function ShowToolTip(e) { $(".tooltip").show() } function ToDate(e) { if (null != e) { var t = ConvertDateToTick(e, "dd/mm/yyyy"); tDate = moment(t).format("MM/DD/YYYY"); var a = new Date(tDate); return moment(a).format(dateFormatMoment) } return "" } function BindJobStages() { return $("#JobStageID").empty(), $.ajax({ type: "POST", url: urlGetJobStages, dataType: "json", async: !1, data: { usertypeid: UserTypeID }, success: function (e) { $("#JobStageID").append('<option value="0">Select job stage</option>'), $.each(e, function (e, t) { $("#JobStageID").append('<option value="' + t.Value + '">' + t.Text + "</option>") }) }, error: function (e) { alert("Failed to retrieve Job Stages." + e) } }), !1 } function SetParamsFromLocalStorage() { } function SetChangeFilter() { for (var e = !1, t = 1; t <= 11; t++)null != localStorage.getItem("locFilter_" + t) && ($("#Filter_" + t).text(localStorage.getItem("locFilter_" + t)), e = !0), null != localStorage.getItem("lochdnFilter_" + t) && ($("#hdnFilter_" + t).text(localStorage.getItem("lochdnFilter_" + t)), e = !0); e && $("#btnChangeSearchFilter").val("Change Filter *") } function DataTableColResize(e) { $("#datatable").colResizable({ disable: !0 }) } function drawJobIndex() { $(".dropdown-filter-dropdown").remove(), (jobIndexTable = $("#datatable").DataTable({ iDisplayLength: parseInt(GridConfig[0].PageSize), lengthMenu: PageSize, language: { sLengthMenu: "Page Size: _MENU_" }, aaSorting: [], columnDefs: colsDefs, columns: cols, autoWidth: !1, colReorder: !0, dom: "<<'table-responsive tbfix't><'paging grid-bottom prevar'p><'bottom'l><'clear'>> R", processing: !0, initComplete: function (e, t) { var a = $("#datatable").DataTable(); $("#chkAll").on("click", function () { var e = a.rows({ search: "applied" }).nodes(); if ($('input[type="checkbox"]', e).prop("checked", this.checked), chkCount = this.checked ? $("#datatable >tbody >tr").length : 0, this.checked) { var t = 0; $('#datatable tbody input[type="checkbox"]').each(function () { var e = "" == $(this).parent().parent().find(".clsLabel").text() || null == $(this).parent().parent().find(".clsLabel").text() ? 0 : $(this).parent().parent().find(".clsLabel").text(); t = parseFloat(parseFloat(t) + parseFloat(e)).toFixed(2) }), $("#btotalTradedSTC").html(t) } else $("#btotalTradedSTC").html(0) }); new $.fn.dataTable.Buttons(a, { buttons: [{ extend: "excel", text: "Export Excel", className: "primary exporth_ic pull-left", exportOptions: { columns: ":visible" } }] }).container().prependTo($(".totalrow")); $(".grid-bottom span:first").attr("id", "spanMain"), $("#spanMain span").html(""), $("#datatable").excelTableFilter({ columnSelector: "[data-order]" }), this.api().columns().every(function (e) { jobIndexTable.settings().init().columns; if (jobIndexTable.column("Priority:name").index() == e || jobIndexTable.column("JobStage:name").index() == e || jobIndexTable.column("JobTypeId:name").index() == e || jobIndexTable.column("OwnerType:name").index() == e || jobIndexTable.column("Distributor:name").index() == e || jobIndexTable.column("ElectricityProvider:name").index() == e || jobIndexTable.column("DeemingPeriod:name").index() == e || jobIndexTable.column("InstallationType:name").index() == e || jobIndexTable.column("TypeOfConnection:name").index() == e || jobIndexTable.column("SystemMountingType:name").index() == e || jobIndexTable.column("SolarCompany:name").index() == e || jobIndexTable.column("StaffName:name").index() == e || jobIndexTable.column("SCOName:name").index() == e || jobIndexTable.column("IsGst:name").index() == e || jobIndexTable.column("PropertyType:name").index() == e || jobIndexTable.column("IsCustPrice:name").index() == e || jobIndexTable.column("IsSTCForm:name").index() == e || jobIndexTable.column("IsCESForm:name").index() == e || jobIndexTable.column("IsBasicValidation:name").index() == e || jobIndexTable.column("IsInvoiced:name").index() == e || jobIndexTable.column("IsPreApprovaApproved:name").index() == e || jobIndexTable.column("IsConnectionCompleted:name").index() == e || jobIndexTable.column("IsOwnerSiganture:name").index() == e || jobIndexTable.column("IsInstallerSiganture:name").index() == e || jobIndexTable.column("IsGroupSiganture:name").index() == e || jobIndexTable.column("IsSerialNumberCheck:name").index() == e || jobIndexTable.column("IsSTCSubmissionPhotos:name").index() == e || jobIndexTable.column("IsTraded:name").index() == e) { var t = [], a = this, o = $('<input type="text" class=' + a.index() + " />").appendTo($(a.header()).find("div>div").empty()); $("." + a.index()).attr("Placeholder", "Search " + a.header().innerText), o.addClass("dropdown-filter-menu-search form-control"), o.addClass("getalldata"), $("." + a.index()).keyup(function (e) { "" == $(this).val() && jobIndexTable.column($(this).parent().parent().parent().index() + ":visible").search("").draw() }); var n = JSON.parse(colTradeStatus); if (jobIndexTable.column("IsTraded:name").index() == e) $.each(n, function (e, a) { t.push(a.Name) }), $("." + a.index()).autocomplete({ source: t, minLength: 0, scroll: !0, select: function (e, t) { var a = t.item.value; jobIndexTable.column($(this.parentNode.parentNode.parentNode).index() + ":visible").search(a ? "^" + a + "$" : "", !0, !1).draw() } }).focus(function () { $(this).autocomplete("search", "") }); else { var l = []; jobIndexTable.column("Priority:name").index() == e ? l = JSON.parse(colPriority) : jobIndexTable.column("JobTypeId:name").index() == e && (l = JSON.parse(colJobType)), a.data().unique().sort().each(function (o, n) { l.length > 0 ? ($.each(l, function (e, a) { o == a.ID && t.push(a.Name) }), $("." + a.index()).autocomplete({ source: t, minLength: 0, scroll: !0, select: function (e, t) { var a = t.item.value; jobIndexTable.column($(this.parentNode.parentNode.parentNode).index() + ":visible").search(a ? "^" + a + "$" : "", !0, !1).draw() } }).focus(function () { $(this).autocomplete("search", "") })) : jobIndexTable.column("IsGst:name").index() == e || jobIndexTable.column("IsCustPrice:name").index() == e || jobIndexTable.column("IsSTCForm:name").index() == e || jobIndexTable.column("IsCESForm:name").index() == e || jobIndexTable.column("IsBasicValidation:name").index() == e || jobIndexTable.column("IsOwnerSiganture:name").index() == e || jobIndexTable.column("IsInstallerSiganture:name").index() == e || jobIndexTable.column("IsGroupSiganture:name").index() == e || jobIndexTable.column("IsSerialNumberCheck:name").index() == e || jobIndexTable.column("IsSTCSubmissionPhotos:name").index() == e ? $("." + a.index()).autocomplete({ source: ["Yes", "No"], minLength: 0, scroll: !0, select: function (e, t) { var a = t.item.value; jobIndexTable.column($(this.parentNode.parentNode.parentNode).index() + ":visible").search(a ? "^" + a + "$" : "", !0, !1).draw() } }).focus(function () { $(this).autocomplete("search", "") }) : jobIndexTable.column("IsInvoiced:name").index() == e ? $("." + a.index()).autocomplete({ source: ["Invoiced", "Pending"], minLength: 0, scroll: !0, select: function (e, t) { var a = t.item.value; jobIndexTable.column($(this.parentNode.parentNode.parentNode).index() + ":visible").search(a ? "^" + a + "$" : "", !0, !1).draw() } }).focus(function () { $(this).autocomplete("search", "") }) : jobIndexTable.column("IsPreApprovaApproved:name").index() == e ? $("." + a.index()).autocomplete({ source: ["Approved", "Pending"], minLength: 0, scroll: !0, select: function (e, t) { var a = t.item.value; jobIndexTable.column($(this.parentNode.parentNode.parentNode).index() + ":visible").search(a ? "^" + a + "$" : "", !0, !1).draw() } }).focus(function () { $(this).autocomplete("search", "") }) : jobIndexTable.column("IsConnectionCompleted:name").index() == e ? $("." + a.index()).autocomplete({ source: ["Completed", "Pending"], minLength: 0, scroll: !0, select: function (e, t) { var a = t.item.value; jobIndexTable.column($(this.parentNode.parentNode.parentNode).index() + ":visible").search(a ? "^" + a + "$" : "", !0, !1).draw() } }).focus(function () { $(this).autocomplete("search", "") }) : null != o && "" != o && " " != o && (t.push(o), $("." + a.index()).autocomplete({ source: t, minLength: 0, scroll: !0, select: function (e, t) { var a = t.item.value; jobIndexTable.column($(this.parentNode.parentNode.parentNode).index() + ":visible").search(a ? "^" + a + "$" : "", !0, !1).draw() } }).focus(function () { $(this).autocomplete("search", "") })) }) } } }), $("#datatable").width($(".JCLRgrips").width()), FilterIsArchiveData(), jobIndexTable.draw() }, ajax: { url: urlGetJobListUserWiseColumns, data: null != document.getElementById("ResellerId") ? { solarcompanyid: $("#hdnsolarCompanyid").val(), sResellerId: document.getElementById("ResellerId").value, isAllScaJobView: isAllScaJobView, isShowOnlyAssignJobsSCO: isShowOnlyAssignJobsSCO } : { solarcompanyid: $("#hdnsolarCompanyid").val(), isAllScaJobView: isAllScaJobView, isShowOnlyAssignJobsSCO: isShowOnlyAssignJobsSCO }, dataSrc: "", dataType: "json", contentType: "application/json; charset=utf-8" }, fnDrawCallback: function () { if (0 == $("#chkAll").prop("checked")) { var e = (a = $("#datatable").DataTable()).rows({ search: "applied" }).nodes(); $('input[type="checkbox"]', e).prop("checked", !1) } if ($("#btotalTradedSTC").html(0), 1 == $("#chkAll").prop("checked")) { chkCount = $("#datatable >tbody >tr").length; var t = 0; $('#datatable tbody input[type="checkbox"]').each(function () { var e = "" == $(this).parent().parent().find(".clsLabel").text() || null == $(this).parent().parent().find(".clsLabel").text() ? 0 : $(this).parent().parent().find(".clsLabel").text(); t = parseFloat(parseFloat(t) + parseFloat(e)).toFixed(2) }), $("#btotalTradedSTC").html(t) } else chkCount = 0, $("#btotalTradedSTC").html(0); $("#datatable_wrapper").find(".bottom").find(".dataTables_paginate").remove(), $(".paging a.previous").html("&nbsp"), $(".paging a.next").html("&nbsp"), $(".grid-bottom span:first").attr("id", "spanMain"), $("#spanMain span").html(""), $(".ellipsis").html("..."), $(".paging").find("span").length >= 1 ? $("#datatable_length").show() : $("#datatable").find("tr").length > 11 ? $("#datatable_length").show() : $("#datatable_length").hide(); var a, o = (a = $("#datatable").DataTable()).page.info(); 0 == o.recordsTotal ? document.getElementById("numRecords").innerHTML = "<b>0</b>  of  <b>" + o.recordsDisplay + "</b>  Jobs found" : document.getElementById("numRecords").innerHTML = "<b>" + $("#datatable >tbody >tr").length + "</b>  of  <b>" + o.recordsDisplay + "</b>  Jobs found", $('[data-toggle="tooltip"]').tooltip(); var n = listColumns.concat(",Action,Chkbox").split(","); $.each(n, function (e, t) { "Action" == t ? 6 == UserTypeID || "true" == isAssignSSC && (1 == UserTypeID || 4 == UserTypeID && "true" == IsSSCReseller || 8 == UserTypeID && "false" == IsSubContractor && "true" == IsSSCReseller) ? a.columns(t + ":name").visible(!0) : a.columns(t + ":name").visible(!1) : a.columns(t + ":name").visible(!0) }); var l = []; l.push(50), $.each(listColumnsWidth.split(","), function (e, t) { l.push(t) }), l.push(50); var s = 0; $("#trHeadersDynamic th").each(function (e, t) { s += parseInt(l[e]), $(t).innerWidth(l[e]) }), $("#datatable").innerWidth(s + 100), "Unlock" == $("#btnLock").val() && (DataTableColResize($("#trHeadersDynamic th").length), DataTableColResizeNotAll($("#trHeadersDynamic th").length)) }, fnRowCallback: function (e, t, a, o) { 0 == t.UserID && (window.location = urlLogout), "1" == t.Urgent && (e.className = "urgentrow") } })).columns().every(function (e) { if (jobIndexTable.columns().column("Action:name").index() != e && jobIndexTable.columns().column("Chkbox:name").index() != e) { $(".colWiseSearch", this.footer()).on("keyup change", function () { jobIndexTable.column($(this).parent().index() + ":visible").search(this.value).draw() }) } }), $("#datatable").on("length.dt", function (e, t, a) { SetPageSizeForGrid(a, !1, ViewPageId), GridConfig[0].PageSize = a, GridConfig[0].IsKendoGrid = !1, GridConfig[0].ViewPageId = parseInt(ViewPageId) }) } function datatableInfo() { cols = [], colsDefs = []; var dbFields = []; dbFields = listColumns.split(","), cols.push({ name: "Chkbox", data: "Id", orderable: !1, render: fn_Chkbox }), $.each(dbFields, function (i, e) { var var_orderable = !1; "Priority" != e && "RefNumber" != e && "ClientName" != e && "CreatedDate" != e && "JobStage" != e && "InstallationDate" != e && "STC" != e && "StaffName" != e && "SCOName" != e || (var_orderable = !0), CheckRender(e) ? cols.push({ name: e, data: e, orderable: var_orderable, render: eval("fn_" + e) }) : cols.push({ name: e, data: e, orderable: var_orderable }) }), cols.push({ name: "Action", data: "Id", orderable: !1, render: fn_Action, visible: 6 == UserTypeID || "true" == isAssignSSC && (1 == UserTypeID || 2 == UserTypeID || 5 == UserTypeID || 4 == UserTypeID && "true" == IsSSCReseller || 8 == UserTypeID && "false" == IsSubContractor && "true" == IsSSCReseller) }), -1 == listColumns.indexOf("CreatedDate") && cols.push({ name: "CreatedDate", data: "CreatedDate", visible: !1, render: fn_CreatedDate }), -1 == listColumns.indexOf("InstallationDate") && cols.push({ name: "InstallationDate", data: "InstallationDate", visible: !1, render: fn_InstallationDate }), -1 == listColumns.indexOf("JobTypeId") && cols.push({ name: "JobTypeId", data: "JobTypeId", visible: !1, render: fn_JobTypeId }), -1 == listColumns.indexOf("RefNumber") && cols.push({ name: "RefNumber", data: "RefNumber", visible: !1, render: fn_RefNumber }), -1 == listColumns.indexOf("JobAddress") && cols.push({ name: "JobAddress", data: "JobAddress", visible: !1, render: fn_JobAddress }), -1 == listColumns.indexOf("JobTitle") && cols.push({ name: "JobTitle", data: "JobTitle", visible: !1 }), -1 == listColumns.indexOf("JobDescription") && cols.push({ name: "JobDescription", data: "JobDescription", visible: !1 }), -1 == listColumns.indexOf("FullOwnerCompanyDetails") && cols.push({ name: "FullOwnerCompanyDetails", data: "FullOwnerCompanyDetails", visible: !1 }), -1 == listColumns.indexOf("StaffName") && cols.push({ name: "StaffName", data: "StaffName", visible: !1, render: fn_StaffName }), -1 == listColumns.indexOf("InstallerFullName") && cols.push({ name: "InstallerFullName", data: "InstallerFullName", visible: !1 }), -1 == listColumns.indexOf("DesignerFullName") && cols.push({ name: "DesignerFullName", data: "DesignerFullName", visible: !1 }), -1 == listColumns.indexOf("ElectricianFullName") && cols.push({ name: "ElectricianFullName", data: "ElectricianFullName", visible: !1 }), -1 == listColumns.indexOf("InstallationState") && cols.push({ name: "InstallationState", data: "InstallationState", visible: !1 }), -1 == listColumns.indexOf("Priority") && cols.push({ name: "Priority", data: "Priority", visible: !1, render: fn_Priority }), -1 == listColumns.indexOf("IsPreApprovaApproved") && cols.push({ name: "IsPreApprovaApproved", data: "IsPreApprovaApproved", visible: !1, render: fn_IsPreApprovaApproved }), -1 == listColumns.indexOf("IsConnectionCompleted") && cols.push({ name: "IsConnectionCompleted", data: "IsConnectionCompleted", visible: !1, render: fn_IsConnectionCompleted }), -1 == listColumns.indexOf("IsTraded") && cols.push({ name: "IsTraded", data: "IsTraded", visible: !1, render: fn_IsTraded }), -1 == listColumns.indexOf("IsDeleted") && cols.push({ name: "IsDeleted", data: "IsDeleted", visible: !1 }), -1 == listColumns.indexOf("JobNumber") && cols.push({ name: "JobNumber", data: "JobNumber", visible: !1 }), -1 == listColumns.indexOf("JobID") && cols.push({ name: "JobID", data: "JobID", visible: !1 }), -1 == listColumns.indexOf("IsGst") && cols.push({ name: "IsGst", data: "IsGst", visible: !1, render: fn_IsGst }), -1 == listColumns.indexOf("PropertyType") && cols.push({ name: "PropertyType", data: "PropertyType", visible: !1 }), -1 == listColumns.indexOf("IsCustPrice") && cols.push({ name: "IsCustPrice", data: "IsCustPrice", visible: !1, render: fn_IsCustPrice }); var dbFieldsWidth = []; dbFieldsWidth = listColumnsWidth.split(","); var iCnt = 0; function CheckRender(functionName) { var isDefined = eval("(typeof fn_" + functionName + "=='function');"); return !!isDefined } colsDefs.push({ width: "50", targets: iCnt }), $.each(dbFieldsWidth, function (e, t) { iCnt += 1, colsDefs.push({ width: t, targets: iCnt }) }), iCnt += 1, colsDefs.push({ width: "50", targets: iCnt }), colsDefs.push({ targets: "0,-1", visible: !0 }), colsDefs.push({ targets: "_all", visible: !1 }) } function funTrHeadersDynamic(e) { var t = ""; t += "<th style='width: 50; background-image: none !important;'><input type='checkbox' id='chkAll' name='select_all'></th>", $.each(e, function (e, a) { t += "<th style='width:" + a.Width + "' data-columnid='" + a.ColumnID + "' data-order='" + a.OrderNumber + "'><span>" + a.DisplayName + "</span></th>" }), null != t && (t += "<th style='width: 50;' class='action'>Action</th>", $("#trHeadersDynamic").empty(), $("#trHeadersDynamic").append(t), $("#datatable > tbody").html("")) } function SaveFilter() { arrAdvanceSearchFilters = [], $('div[id*="popup_"]').each(function () { var e = $(this).attr("id"), t = $("#" + e + " input[type=checkbox]:checked").map(function () { if (this.id != "DeSel_" + e.replace("popup_", "") && this.id != "Sel_" + e.replace("popup_", "")) return this.id.replace("popup_", "") }).get().join(","), a = $("#" + e + " input[type=checkbox]:checked").map(function () { if (this.id != "DeSel_" + e.replace("popup_", "") && this.id != "Sel_" + e.replace("popup_", "")) return this.value }).get().join(","); $("#Filter_" + e.replace("popup_", "")).text(a), $("#hdnFilter_" + e.replace("popup_", "")).text(t), localStorage.setItem("locFilter_" + e.replace("popup_", ""), a), localStorage.setItem("lochdnFilter_" + e.replace("popup_", ""), t), 3 == e.replace("popup_", "") || 4 == e.replace("popup_", "") || 5 == e.replace("popup_", "") || 6 == e.replace("popup_", "") || 7 == e.replace("popup_", "") || 8 == e.replace("popup_", "") || 9 == e.replace("popup_", "") || 10 == e.replace("popup_", "") || 11 == e.replace("popup_", "") ? "" == $(this).data("columnname") && null == $(this).data("columnname") || "" != t && null != t && arrAdvanceSearchFilters.push($(this).data("columnname")) : t.split(",").map(function (e) { "" != e && null != e && arrAdvanceSearchFilters.push(e) }) }), $("#Advancefilter").modal("hide"), $("#btnChangeSearchFilter").val("Change Filter *") } function SetAdvanceSearchFiltersColumns() { arrAdvanceSearchFilters = [], $('[id*="hdnFilter_"]').each(function () { var e = $(this).attr("id"); 3 == e.replace("hdnFilter_", "") || 4 == e.replace("hdnFilter_", "") || 5 == e.replace("hdnFilter_", "") || 6 == e.replace("hdnFilter_", "") || 7 == e.replace("hdnFilter_", "") || 8 == e.replace("hdnFilter_", "") || 9 == e.replace("hdnFilter_", "") || 10 == e.replace("hdnFilter_", "") || 11 == e.replace("hdnFilter_", "") ? "" == $(this).data("columnname") && null == $(this).data("columnname") || arrAdvanceSearchFilters.push($(this).data("columnname")) : $(this).text().split(",").map(function (e) { "" != e && null != e && arrAdvanceSearchFilters.push(e) }) }) } function showErrorMessageUserWiseColumns(e) { $(".alert").hide(), $("#successMsgRegionUserWiseColumns").hide(), $("#errorMsgRegionUserWiseColumns").html(closeButton + e), $("#errorMsgRegionUserWiseColumns").show() } function showSuccessMessageUserWiseColumns(e) { $(".alert").hide(), $("#errorMsgRegionUserWiseColumns").hide(), $("#successMsgRegionUserWiseColumns").html(closeButton + e), $("#successMsgRegionUserWiseColumns").show() } function showErrorMessageColumnMaster(e) { $(".alert").hide(), $("#errorMsgRegionColumnMaster").html(closeButton + e), $("#errorMsgRegionColumnMaster").show() } $(document).ready(function () { if (4 == UserTypeID && checkIsWholeSaler(ResellerId), $("#searchSolarCompany").autocomplete({ minLength: 0, source: function (e, t) { var a = []; $.each(solarCompanyList, function (e, t) { t.text.toLowerCase().indexOf($("#searchSolarCompany").val().toLowerCase()) > -1 && a.push({ Title: t.text, id: t.value }) }), t($.map(a, function (e) { return { label: e.Title, value: e.Title, id: e.id } })) }, select: function (e, t) { $("#hdnsolarCompanyid").val(t.item.id), IsServerCallForSearch = !0 } }).on("focus", function () { $(this).keydown() }), $.ui.autocomplete.prototype._renderItem = function (e, t) { var a = new RegExp($.trim(this.term.toLowerCase())), o = t.label.replace(a, "<span style='font-weight:600;'>" + $.trim(this.term.toLowerCase()) + "</span>"); return $("<li style='font-size:14px;'></li>").data("item.autocomplete", t).append("<a>" + o + "</a>").appendTo(e) }, JobStage) { SelectedStageId = JobStage; document.getElementById("jobstage_0").style.backgroundColor = "#bdbdbd", document.getElementById("jobstage_" + SelectedStageId).style.backgroundColor = "#5F5D5D", 1 != UserTypeID && 3 != UserTypeID && 2 != UserTypeID && 5 != UserTypeID || (document.getElementById("chkIsArchive").checked = !1), $("#txtSearchfor").val(""), document.getElementById("JobScheduleTypeId").selectedIndex = 0, document.getElementById("JobTypeId").selectedIndex = 0, document.getElementById("JobPriorityId").selectedIndex = 0, $("#txtFromDate").val(""), $("#txtToDate").val(""), document.getElementById("chkJobRef").checked = !0, document.getElementById("chkJobDescription").checked = !0, document.getElementById("chkJobAddress").checked = !0, document.getElementById("chkClient").checked = !0, document.getElementById("chkStaff").checked = !1, document.getElementById("chkInvoiced").checked = !0, document.getElementById("chkNotInvoiced").checked = !0, document.getElementById("chkReadyToTrade").checked = !0, document.getElementById("chkNotReadyToTrade").checked = !0, document.getElementById("chkTraded").checked = !0, document.getElementById("chkNotTraded").checked = !0, document.getElementById("chkPreApprovalNotBeenApproved").checked = !0, document.getElementById("chkPreApprovalApproved").checked = !0, document.getElementById("chkConnectionCompleted").checked = !0, document.getElementById("chkConnectionNotCompleted").checked = !0, document.getElementById("chkACT").checked = !0, document.getElementById("chkNSW").checked = !0, document.getElementById("chkNT").checked = !0, document.getElementById("chkQLD").checked = !0, document.getElementById("chkSA").checked = !0, document.getElementById("chkTAS").checked = !0, document.getElementById("chkWA").checked = !0, document.getElementById("chkVIC").checked = !0 } if (1 == UserTypeID || 3 == UserTypeID ? $("#ResellerId").focus() : 2 == UserTypeID || 5 == UserTypeID ? $("#searchSolarcompany").focus() : $("#JobScheduleTypeId").focus(), $("#txtFromDate").datepicker({ format: dateFormat, autoclose: !0 }).on("changeDate", function () { "" != $("#txtToDate").val() && (new Date(ConvertDateToTick($("#txtFromDate").val(), dateFormat)) > new Date(ConvertDateToTick($("#txtToDate").val(), dateFormat)) && $("#txtToDate").val("")); var e = ConvertDateToTick($("#txtFromDate").val(), dateFormat); tDate = moment(e).format("MM/DD/YYYY"), $("#txtToDate").data("datepicker") && $("#txtToDate").data("datepicker").setStartDate(new Date(tDate)) }), $("#txtToDate").datepicker({ format: dateFormat, autoclose: !0 }), $("#txtToDate").change(function () { new Date(ConvertDateToTick($("#txtFromDate").val(), dateFormat)), new Date(ConvertDateToTick($("#txtToDate").val(), dateFormat)) }), 1 == UserTypeID || 3 == UserTypeID) { var e = !1; $.ajax({ type: "get", url: urlGetReseller, dataType: "json", data: "", async: !1, success: function (t) { $.each(t, function (t, a) { $("#ResellerId").append('<option value="' + a.Value + '">' + a.Text + "</option>"), 0 == e && a.Value == localStorage.getItem("JobList_ResellerId") && (e = !0) }), e ? document.getElementById("ResellerId").value = localStorage.getItem("JobList_ResellerId") : ($("#ResellerId").val($("#ResellerId option:first").val()), localStorage.setItem("JobList_ResellerId", $("#ResellerId option:first").val())), $("#ResellerId").val() > 0 && (1 == UserTypeID || 3 == UserTypeID) && (BindSolarCompany(document.getElementById("ResellerId").value), GetJobStageCount(), checkIsWholeSaler($("#ResellerId").val())) }, error: function (e) { alert("Failed to retrieve Resellers." + e) } }) } else if (2 == UserTypeID) BindSolarCompany(ResellerId), GetJobStageCount(); else if (5 == UserTypeID) if ("true" == isAllScaJobView) BindSolarCompany(ResellerId); else { $("#searchSolarCompany").val(""); var t = !1; $.ajax({ type: "POST", url: urlGetAssignedSolarCompanyToRAM, dataType: "json", async: !1, data: { isAll: !0 }, success: function (e) { solarCompanyList = [], $.each(e, function (e, a) { solarCompanyList.push({ value: a.Value, text: a.Text }), 0 == t && a.Value == localStorage.getItem("JobList_SolarCompanyId") && (t = !0) }), t ? $("#hdnsolarCompanyid").val(localStorage.getItem("JobList_SolarCompanyId")) : ($("#hdnsolarCompanyid").val(solarCompanyList.length > 0 ? solarCompanyList[0].value : 0), localStorage.setItem("JobList_SolarCompanyId", $("#hdnsolarCompanyid").val())), "" == localStorage.getItem("JobList_SolarCompanyId") && ($("#hdnsolarCompanyid").val(solarCompanyList.length > 0 ? solarCompanyList[0].value : 0), localStorage.setItem("JobList_SolarCompanyId", $("#hdnsolarCompanyid").val())), $.each(solarCompanyList, function (e, t) { t.value == localStorage.getItem("JobList_SolarCompanyId") && ($("#searchSolarCompany").val(t.text), $("#hdnsolarCompanyid").val(localStorage.getItem("JobList_SolarCompanyId"))) }), GetJobStageCount() }, error: function (e) { alert("Failed to retrieve Solar Companies." + e) } }) } else if (6 == UserTypeID) { t = !1; $.ajax({ type: "POST", url: urlGetRequestedSolarCompanyToSSC, dataType: "json", data: "", async: !1, success: function (e) { solarCompanyList = [], $.each(e, function (e, t) { solarCompanyList.push({ value: t.Value, text: t.Text }) }), t ? $("#hdnsolarCompanyid").val(localStorage.getItem("JobList_SolarCompanyId")) : ($("#hdnsolarCompanyid").val(solarCompanyList.length > 0 ? solarCompanyList[0].value : 0), localStorage.setItem("JobList_SolarCompanyId", $("#hdnsolarCompanyid").val())) }, error: function (e) { alert("Failed to retrieve Solar Companies." + e) } }), GetJobStageCount() } SetParamsFromLocalStorage(), NotYetInvoicedDashboardStatus && (document.getElementById("chkInvoiced").checked = !1), datatableInfo(), drawJobIndex(); var a = $("#datatable").DataTable(); DisableAllColReorder(), DataTableColResize($("#trHeadersDynamic th").length), $.fn.dataTable.ColReorder(a), a.on("column-reorder", function (e, t, a) { DataTableColResize($("#trHeadersDynamic th").length - 1) }), SetAdvanceSearchFiltersColumns(), SetChangeFilter(), $("#datatable tbody").on("change", 'input[type="checkbox"]', function () { if (this.checked) { chkCount++ , chkCount == $("#datatable >tbody >tr").length && $("#chkAll").prop("checked", this.checked); var e = "" == $(this).parent().parent().find(".clsLabel").text() || null == $(this).parent().parent().find(".clsLabel").text() ? 0 : $(this).parent().parent().find(".clsLabel").text(), t = $("#btotalTradedSTC").html(); $("#btotalTradedSTC").html(parseFloat(parseFloat(e) + parseFloat(t)).toFixed(2)) } else { chkCount-- , $("#chkAll").prop("checked", this.checked); e = "" == $(this).parent().parent().find(".clsLabel").text() || null == $(this).parent().parent().find(".clsLabel").text() ? 0 : $(this).parent().parent().find(".clsLabel").text(), t = $("#btotalTradedSTC").html(); $("#btotalTradedSTC").html(parseFloat(parseFloat(t) - parseFloat(e)).toFixed(2)) } }), $("#ResellerId").change(function () { $("#ResellerId").val() > 0 && (1 == UserTypeID || 3 == UserTypeID) && (IsServerCallForSearch = !0, BindSolarCompany(document.getElementById("ResellerId").value), $("#searchSolarCompany").focus(), checkIsWholeSaler($("#ResellerId").val())) }) }), $("#txtFromDate2").datepicker({ format: dateFormat, autoclose: !0 }).on("changeDate", function () { "" != $("#txtToDate2").val() && (new Date(ConvertDateToTick($("#txtFromDate2").val(), dateFormat)) > new Date(ConvertDateToTick($("#txtToDate2").val(), dateFormat)) && $("#txtToDate2").val("")); var e = ConvertDateToTick($("#txtFromDate2").val(), dateFormat); tDate = moment(e).format("MM/DD/YYYY"), $("#txtToDate2").data("datepicker") && $("#txtToDate2").data("datepicker").setStartDate(new Date(tDate)) }), $("#txtToDate2").datepicker({ format: dateFormat, autoclose: !0 }), $("#txtToDate2").change(function () { new Date(ConvertDateToTick($("#txtFromDate").val(), dateFormat)), new Date(ConvertDateToTick($("#txtToDate").val(), dateFormat)) }), $(document).off("click", "#btnJobSSCMapping").on("click", "#btnJobSSCMapping", function (e) { if (e.preventDefault(), e.stopPropagation(), "function" == typeof validateExtraFields && 0 == validateExtraFields()) return !1; ("function" != typeof validateForm || "function" == typeof validateForm && validateForm()) && $(this).closest("form").ajaxformSubmit() }), $(document).off("click", "#btnJobSCOMapping").on("click", "#btnJobSCOMapping", function (e) { if (e.preventDefault(), e.stopPropagation(), "function" == typeof validateExtraFields && 0 == validateExtraFields()) return !1; ("function" != typeof validateForm || "function" == typeof validateForm && validateForm1()) && $(this).closest("form").ajaxformSubmit() }), $("#btnAssignSSCClose").click(function () { $("#SSCID").next("span").attr("class", "field-validation-valid") }), $("#btnCancel").click(function () { $("#SSCID").next("span").attr("class", "field-validation-valid") }), $(".panel-heading input[type=checkbox]").change(function () { $(this).closest(".panel").find("[type=checkbox]").prop("checked", this.checked), $(this).closest("[id*=pnlMain]").find("[id*=accordion]").find(".panel-heading").find("input[type=checkbox]").length == $(this).closest("[id*=pnlMain]").find("[id*=accordion]").find(".panel-heading").find("input[type=checkbox]:checked").length ? 0 != $(this).closest("[id*=pnlMain]").find("[id*=accordion]").find(".panel-heading").find("input[type=checkbox]").length && $(this).closest("[id*=pnlMain]").find("[id*=headingAssets]").find("[type=checkbox]").prop("checked", "checked") : $(this).closest("[id*=pnlMain]").find("[id*=headingAssets]").find("[type=checkbox]").removeAttr("checked"), $('.columnmaster li[data-columnid="2"]').find('input[type="checkbox"]').prop("checked", !0) }); var fn_Priority = function (e, t, a, o) { return 1 == a.Priority ? 1 == a.Urgent ? '<div class="ic_cover"><span class="urgent" data-toggle="tooltip" data-placement="right" title="Urgent"><img src="../Images/ic-urgent.png" alt="" /></span><span class="priority"><img src="../Images/prio-high.png" alt="" / ><span style="display:none">High</span></span></div>' : '<div class="ic_cover"><span class="priority"><img src="../Images/prio-high.png" alt="High" title="High"><span style="display:none">High</span></span></div>' : 2 == a.Priority ? 1 == a.Urgent ? '<div class="ic_cover"><span class="urgent" data-toggle="tooltip" data-placement="right" title="Urgent"><img src="../Images/ic-urgent.png" alt="" /></span><span class="priority"><img src="../Images/prio-mid.png" alt="" /><span style="display:none">Normal</span></span></div>' : '<div class="ic_cover"><span class="priority"><img src="../Images/prio-mid.png" alt="Normal" title="Normal"><span style="display:none">Normal</span></span></div>' : 1 == a.Urgent ? '<div class="ic_cover"><span class="urgent" data-toggle="tooltip" data-placement="right" title="Urgent"><img src="../Images/ic-urgent.png" alt="" /></span><span class="priority"><img src="../Images/prio-low.png" alt="" /></span><span style="display:none">Low</span></div>' : '<div class="ic_cover"><span class="priority"><img src="../Images/prio-low.png" alt="Low" title="Low"><span style="display:none">Low</span></span></div>' }, fn_RefNumber = function (e, t, a, o) { return null != a.RefNumber ? '<a href="' + (urlIndex + a.Id) + '" style="text-decoration:none;">' + a.RefNumber + "</a>" : "" }, fn_JobAddress = function (e, t, a, o) { return null != a.JobAddress || "" != a.JobAddress ? a.JobAddress : "" }, fn_JobStage = function (e, t, a, o) { return null != a.JobStage || "" != a.JobStage ? '<p style="color:' + a.ColorCode + '">' + a.JobStage + "</p>" : "" }, fn_CreatedDate = function (e, t, a, o) { return ToDate(a.strCreatedDate) }, fn_InstallationDate = function (e, t, a, o) { return ToDate(a.strInstallationDate) }, fn_SignatureDate = function (e, t, a, o) { return ToDate(a.strSignatureDate) }, fn_InstallerSignatureDate = function (e, t, a, o) { return ToDate(a.strInstallerSignatureDate) }, fn_DesignerSignatureDate = function (e, t, a, o) { return ToDate(a.strDesignerSignatureDate) }, fn_ElectricianSignatureDate = function (e, t, a, o) { return ToDate(a.strElectricianSignatureDate) }, fn_IsPreApprovaApproved = function (e, t, a, o) { return a.IsPreApprovaApproved ? '<img src="../Images/active.png" alt="Active" title="Active"><span style="display:none">Approved</span>' : '<img src="../Images/inactive.png" alt="In Active" title="In Active"><span style="display:none">Pending</span>' }, fn_IsConnectionCompleted = function (e, t, a, o) { return a.IsConnectionCompleted ? '<img src="../Images/active.png" alt="Active" title="Active"><span style="display:none">Completed</span>' : '<img src="../Images/inactive.png" alt="In Active" title="In Active"><span style="display:none">Pending</span>' }, fn_IsInvoiced = function (e, t, a, o) { return a.IsInvoiced ? '<img src="../Images/ar_green.png"/><span style="display:none">Invoiced</span>' : '<img src="../Images/ic_reject.png"/><span style="display:none">Pending</span>' }, fn_DocumentCount = function (e, t, a, o) { return a.IsLatestDocument ? '<b style="color:red">' + a.DocumentCount + "</b>" : "<p>" + a.DocumentCount + "</p>" }, fn_STC = function (e, t, a, o) { return '<lable class="clsLabel">' + PrintDecimal(a.STC) + "</lable>" }, fn_StaffName = function (e, t, a, o) { return null != a.StaffName ? a.StaffName : "" }, fn_SCOName = function (e, t, a, o) { return null != a.SCOName ? a.SCOName : "" }, fn_JobTypeId = function (e, t, a, o) { return a.JobTypeId > 0 ? 1 == a.JobTypeId ? "PVD" : 2 == a.JobTypeId ? "SWH" : void 0 : "" }, fn_IsGst = function (e, t, a, o) { return a.IsGst ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' }, fn_IsCustPrice = function (e, t, a, o) { return a.IsCustPrice ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' }, fn_IsTraded = function (e, t, a, o) { return 1 == a.TradeStatus ? '<img src="../Images/ar_green.png"/><span style="display:none">Traded</span>' : 2 == a.TradeStatus ? '<img src="../Images/ic_ReadyToTrade.png"/><span style="display:none">ReadyToTrade</span>' : 3 == a.TradeStatus ? '<img src="../Images/ic_reject.png"/><span style="display:none">NotTraded</span>' : void 0 }, fn_Action = function (e, t, a, o) { if (6 != UserTypeID) { var n = ""; if (1 == a.JobTypeId) null == a.SSCID || 0 == a.SSCID ? imgassignSSC = "background:url(../Images/ic_assign.png) no-repeat center; text-decoration:none;width:100%;" : imgassignSSC = "background:url(../Images/ic_assign_green.png) no-repeat center; text-decoration:none;width:100%;", n = '<a href="' + ("javascript:AssignSSC('" + a.Id + "')") + '" class="action delete" style="' + imgassignSSC + '" title="Assign SSC">&nbsp; &nbsp; &nbsp; &nbsp;</a>'; else imgassignSSC = "background:url(../Images/ic_assign.png) no-repeat center; text-decoration:none;width:100%;opacity:0.5;cursor:default;", n = '<a  class="action delete" style="' + imgassignSSC + '" title="Assign SSC">&nbsp; &nbsp; &nbsp; &nbsp;</a>'; return n } if (6 == UserTypeID) { if (imgaccept = "background:url(../Images/ic-accept.png) no-repeat center; text-decoration:none;", imgreject = "background:url(../Images/ic-reject.png) no-repeat center; text-decoration:none;", 1 == a.IsAccept) { var l = "javascript:void(0)"; acceptButton = '&nbsp;&nbsp;<a href="' + l + '" class="action delete disabled" style="' + imgaccept + '" title="Accept">&nbsp; &nbsp; &nbsp; &nbsp;</a>' } else { l = "javascript:AcceptRejectJobToSSC('" + a.Id + "','accepted')"; acceptButton = '&nbsp;&nbsp;<a href="' + l + '" class="action delete" style="' + imgaccept + '" title="Accept">&nbsp; &nbsp; &nbsp; &nbsp;</a>' } var s = "javascript:AcceptRejectJobToSSC('" + a.Id + "','rejected')"; return rejectButton = '&nbsp;&nbsp;<a href="' + s + '" class="action delete" style="' + imgreject + '" title="Reject">&nbsp; &nbsp; &nbsp; &nbsp;</a>', acceptButton + rejectButton } }, fn_Chkbox = function (e, t, a, o) { return 1 == $("#chkAll").prop("checked") ? '<input type="checkbox" JobId="' + a.JobID + '" id="chk_' + a.Id + '" JobTitle="' + a.Title + '" checked>' : '<input type="checkbox" JobId="' + a.JobID + '" id="chk_' + a.Id + '" JobTitle="' + a.Title + '">' }, fn_IsSTCForm = function (e, t, a, o) { return null != a.IsSTCForm ? a.IsSTCForm ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }, fn_IsCESForm = function (e, t, a, o) { return null != a.IsCESForm ? a.IsCESForm ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }, fn_IsBasicValidation = function (e, t, a, o) { return null != a.IsBasicValidation ? a.IsBasicValidation ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }, fn_IsOwnerSiganture = function (e, t, a, o) { return null != a.IsOwnerSiganture ? a.IsOwnerSiganture ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }, fn_IsInstallerSiganture = function (e, t, a, o) { return null != a.IsInstallerSiganture ? a.IsInstallerSiganture ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }, fn_IsGroupSiganture = function (e, t, a, o) { return null != a.IsGroupSiganture ? a.IsGroupSiganture ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }, fn_IsSerialNumberCheck = function (e, t, a, o) { return null != a.IsSerialNumberCheck ? a.IsSerialNumberCheck ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }, fn_IsSTCSubmissionPhotos = function (e, t, a, o) { return null != a.IsSTCSubmissionPhotos ? a.IsSTCSubmissionPhotos ? '<span style="font-weight: bold;color: Green;">Yes</span>' : '<span style="font-weight: bold;color: Red;">No</span>' : "" }; function SelectAdvanceSearchCategory(e) { $("#DeSel_" + e).prop("checked", !1), $("#popup_" + e + " ul input[type=checkbox]").map(function () { this.checked = !0 }) } function DeSelectAdvanceSearchCategory(e) { $("#Sel_" + e).prop("checked", !1), $("#popup_" + e + " ul input[type=checkbox]").map(function () { this.checked = !1 }) } function SelectAllAdvanceSearchCategory() { SelectDeselectSectionWise(), $("#DeSel_All").prop("checked", !1), $(".filters-block ul input[type=checkbox]").map(function () { this.checked = !0 }), $('.filters-block ul input[type=checkbox][id="popup_JobDescription"]').prop("checked", !1), $('.filters-block ul input[type=checkbox][id="popup_StaffName"]').prop("checked", !1), $('.filters-block ul input[type=checkbox][id="popup_InstallerFullName"]').prop("checked", !1), $('.filters-block ul input[type=checkbox][id="popup_DesignerFullName"]').prop("checked", !1), $('.filters-block ul input[type=checkbox][id="popup_ElectricianFullName"]').prop("checked", !1) } function DeSelectAllAdvanceSearchCategory() { SelectDeselectSectionWise(), $("#Sel_All").prop("checked", !1), $(".filters-block ul input[type=checkbox]").map(function () { this.checked = !1 }) } function SelectDeselectSectionWise() { $(".filters-title input[type=checkbox]").map(function () { this.checked = !1 }) } function checkIsWholeSaler(e) { $.ajax({ url: urlCheckIsWholeSaler_ByResellerId + e, type: "get", async: !1, dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { var t = JSON.parse(e); void 0 !== t && null != t.Table[0] && (t.Table[0].IsWholeSaler ? ($("#IsWholeSaler").val(!0), $("#UserId_WholeSaler").val(t.Table[0].UserId)) : $("#IsWholeSaler").val(!1)) } }) } function AssignSSCClickEvent() { $("#btnJobSSCMapping").click(function (e) { if ("" != $("#SSCID").val()) { var t = $("#SSCID").val(), a = $("#SSCJobID").val(), o = $("#SSCID option:selected").text(); t = $("#SSCID").val(), a = $("#SSCJobID").val(); $.ajax({ url: urlSaveJobToSSC, type: "GET", data: { ramId: t, jobId: a, SSCName: o }, dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { e.success && ($(".alert").hide(), $("#popuperrorMsgRegion").removeClass("alert-danger"), $("#popuperrorMsgRegion").addClass("alert-success"), $("#popuperrorMsgRegion").html(closeButton + "Job assigned to SSC successfully."), $("#popuperrorMsgRegion").show(), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex(), location.reload()) } }) } else $(".alert").hide(), $("#popuperrorMsgRegion").removeClass("alert-success"), $("#popuperrorMsgRegion").addClass("alert-danger"), $("#popuperrorMsgRegion").html(closeButton + "Please select SSC first."), $("#popuperrorMsgRegion").show(); return e.preventDefault(), !1 }), $("#btnSSCRemove").click(function () { var e = $("#SSCID").val(), t = $("#RemoveSSCNote").val(), a = $("#SSCJobID").val(); "" == t ? ($("#RemoveSSCNote").next("span").attr("class", "field-validation-error"), $("#RemoveSSCNote").next("span").html("Notes is required.")) : $.ajax({ url: urlRemoveSSCRequest, type: "GET", data: { notes: t, jobId: a, sscID: e }, dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { e.success && ($(".alert").hide(), $("#popuperrorMsgRegion").removeClass("alert-danger"), $("#popuperrorMsgRegion").addClass("alert-success"), $("#popuperrorMsgRegion").html(closeButton + "Remove request send successfully."), $("#popuperrorMsgRegion").show(), window.setTimeout(function () { location.reload() }, 100), datatableInfo(), $("#datatable").DataTable().destroy(), drawJobIndex()) } }) }) } $("#btnChangeSearchFilter").click(function (e) { for (var t = [], a = 1; a <= 11; a++)null != localStorage.getItem("lochdnFilter_" + a) && "" != localStorage.getItem("lochdnFilter_" + a) && $.each(localStorage.getItem("lochdnFilter_" + a).split(","), function (e, a) { t[t.length] = a }); 0 == t.length ? SelectAllAdvanceSearchCategory() : (DeSelectAllAdvanceSearchCategory(), $.each(t, function (e, t) { $('.filters-block ul input[type=checkbox][id="popup_' + t + '"]').prop("checked", !0) })) }), $("#aSwitch").click(function (e) { window.location.href = "/Job/Index?IsStaticSearch=false" }), $("#clearJobCreatedDate").click(function (e) { $("#txtFromDate").val(""), $("#txtToDate").val("") }), $("#clearJobInstallationDate").click(function (e) { $("#txtFromDate2").val(""), $("#txtToDate2").val("") });